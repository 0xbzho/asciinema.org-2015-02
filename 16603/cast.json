[[0.107945,{"lines":{"0":[["                                                                                 ",{}]],"1":[["                                                                                 ",{}]],"2":[["                                                                                 ",{}]],"3":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"5":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"7":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]],"9":[["                                                                                 ",{}]],"10":[["                                                                                 ",{}]],"11":[["                                                                                 ",{}]],"12":[["                                                                                 ",{}]],"13":[["                                                                                 ",{}]],"14":[["                                                                                 ",{}]],"15":[["                                                                                 ",{}]],"16":[["                                                                                 ",{}]],"17":[["                                                                                 ",{}]],"18":[["                                                                                 ",{}]],"19":[["                                                                                 ",{}]],"20":[["                                                                                 ",{}]],"21":[["                                                                                 ",{}]],"22":[["                                                                                 ",{}]],"23":[["                                                                                 ",{}]],"24":[["                                                                                 ",{}]],"25":[["                                                                                 ",{}]],"26":[["                                                                                 ",{}]],"27":[["                                                                                 ",{}]],"28":[["                                                                                 ",{}]],"29":[["                                                                                 ",{}]],"30":[["                                                                                 ",{}]],"31":[["                                                                                 ",{}]],"32":[["                                                                                 ",{}]],"33":[["                                                                                 ",{}]],"34":[["                                                                                 ",{}]],"35":[["                                                                                 ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.000903,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                               ",{}]]},"cursor":{"x":19}}],[0.544202,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                                             ",{}]]},"cursor":{"x":20}}],[0.413746,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #h                                                            ",{}]]},"cursor":{"x":21}}],[0.079057,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi                                                           ",{}]]},"cursor":{"x":22}}],[0.101724,{"cursor":{"x":23}}],[0.14742,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi a                                                         ",{}]]},"cursor":{"x":24}}],[0.1533,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi al                                                        ",{}]]},"cursor":{"x":25}}],[0.134012,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all                                                       ",{}]]},"cursor":{"x":26}}],[0.355051,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all!                                                      ",{}]]},"cursor":{"x":27}}],[0.141763,{"cursor":{"x":28}}],[0.373721,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! w                                                    ",{}]]},"cursor":{"x":29}}],[0.151353,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! we                                                   ",{}]]},"cursor":{"x":30}}],[0.103402,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! wel                                                  ",{}]]},"cursor":{"x":31}}],[0.164588,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welc                                                 ",{}]]},"cursor":{"x":32}}],[0.08812399999999999,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welco                                                ",{}]]},"cursor":{"x":33}}],[0.069728,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcom                                               ",{}]]},"cursor":{"x":34}}],[0.124447,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome                                              ",{}]]},"cursor":{"x":35}}],[0.106132,{"cursor":{"x":36}}],[0.219164,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome t                                            ",{}]]},"cursor":{"x":37}}],[0.126849,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to                                           ",{}]]},"cursor":{"x":38}}],[0.103794,{"cursor":{"x":39}}],[0.9809,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to t                                         ",{}]]},"cursor":{"x":40}}],[0.150646,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to th                                        ",{}]]},"cursor":{"x":41}}],[0.055609,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to thi                                       ",{}]]},"cursor":{"x":42}}],[0.12528,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this                                      ",{}]]},"cursor":{"x":43}}],[0.057047,{"cursor":{"x":44}}],[0.193368,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this s                                    ",{}]]},"cursor":{"x":45}}],[0.097021,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this si                                   ",{}]]},"cursor":{"x":46}}],[0.111607,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this sim                                  ",{}]]},"cursor":{"x":47}}],[0.180828,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simp                                 ",{}]]},"cursor":{"x":48}}],[0.08658200000000001,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simpl                                ",{}]]},"cursor":{"x":49}}],[0.155601,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple                               ",{}]]},"cursor":{"x":50}}],[0.06593,{"cursor":{"x":51}}],[0.306957,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple t                             ",{}]]},"cursor":{"x":52}}],[0.07144200000000001,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tu                            ",{}]]},"cursor":{"x":53}}],[0.213857,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tut                           ",{}]]},"cursor":{"x":54}}],[0.118991,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tuto                          ",{}]]},"cursor":{"x":55}}],[0.212826,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutor                         ",{}]]},"cursor":{"x":56}}],[0.158913,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutori                        ",{}]]},"cursor":{"x":57}}],[0.139896,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutoria                       ",{}]]},"cursor":{"x":58}}],[0.193396,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial                      ",{}]]},"cursor":{"x":59}}],[0.279358,{"cursor":{"x":60}}],[0.283936,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial f                    ",{}]]},"cursor":{"x":61}}],[0.079499,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial fo                   ",{}]]},"cursor":{"x":62}}],[0.095452,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for                  ",{}]]},"cursor":{"x":63}}],[0.079251,{"cursor":{"x":64}}],[0.162612,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for t                ",{}]]},"cursor":{"x":65}}],[0.077927,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for th               ",{}]]},"cursor":{"x":66}}],[0.141803,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the              ",{}]]},"cursor":{"x":67}}],[0.042353,{"cursor":{"x":68}}],[0.218079,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the c            ",{}]]},"cursor":{"x":69}}],[0.142845,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the cr           ",{}]]},"cursor":{"x":70}}],[0.183825,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the cra          ",{}]]},"cursor":{"x":71}}],[0.167375,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crac         ",{}]]},"cursor":{"x":72}}],[0.095637,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crack        ",{}]]},"cursor":{"x":73}}],[0.269919,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the cracky       ",{}]]},"cursor":{"x":74}}],[0.111052,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyo      ",{}]]},"cursor":{"x":75}}],[0.102588,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyou     ",{}]]},"cursor":{"x":76}}],[0.230755,{"cursor":{"x":77}}],[0.403648,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyou c   ",{}]]},"cursor":{"x":78}}],[0.119561,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyou ch  ",{}]]},"cursor":{"x":79}}],[0.124239,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyou cha ",{}]]},"cursor":{"x":80}}],[0.185085,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #hi all! welcome to this simple tutorial for the crackyou chal",{}]]},"cursor":{"x":0,"y":1}}],[0.150426,{"lines":{"1":[["l                                                                                ",{}]]},"cursor":{"x":1}}],[0.18002,{"lines":{"1":[["le                                                                               ",{}]]},"cursor":{"x":2}}],[0.127543,{"lines":{"1":[["len                                                                              ",{}]]},"cursor":{"x":3}}],[0.112032,{"lines":{"1":[["leng                                                                             ",{}]]},"cursor":{"x":4}}],[0.130887,{"lines":{"1":[["lenge                                                                            ",{}]]},"cursor":{"x":5}}],[0.365459,{"lines":{"1":[["lenge\"                                                                           ",{}]]},"cursor":{"x":6}}],[0.521429,{"lines":{"1":[["lenge                                                                            ",{}]]},"cursor":{"x":5}}],[0.241394,{"lines":{"1":[["lenge!                                                                           ",{}]]},"cursor":{"x":6}}],[0.321534,{"cursor":{"x":7}}],[0.325176,{"lines":{"1":[["lenge! :                                                                         ",{}]]},"cursor":{"x":8}}],[0.03858,{"lines":{"1":[["lenge! :)                                                                        ",{}]]},"cursor":{"x":9}}],[0.453675,{"cursor":{"x":0,"y":2}}],[0.001204,{"lines":{"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                               ",{}]]},"cursor":{"x":19}}],[1.45175,{"lines":{"2":[["(reverse-i-search)`':                                                            ",{}]]},"cursor":{"x":22}}],[0.261036,{"lines":{"2":[["(reverse-i-search)`g': #hi all! welcome to this simple tutorial for the crackyou ",{}]],"3":[["challenge! :)                                                                    ",{}]]},"cursor":{"x":7,"y":3}}],[0.229991,{"lines":{"2":[["(reverse-i-search)`gd': gdb -q /opt/shared/gdb/crackyou                          ",{}]]},"cursor":{"x":0}}],[0.000126,{"lines":{"3":[["                                                                                 ",{}]]},"cursor":{"x":43,"y":2}}],[0.063611,{"lines":{"2":[["(reverse-i-search)`gdb': gdb -q /opt/shared/gdb/crackyou                         ",{}]]},"cursor":{"x":44}}],[0.691993,{"lines":{"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/gdb/crackyou                               ",{}]]},"cursor":{"x":38}}],[0.000102,{"cursor":{"x":50}}],[1.20447,{"cursor":{"x":0,"y":3}}],[0.048592,{"lines":{"3":[["Reading symbols from /opt/shared/gdb/crackyou...                                 ",{}]]},"cursor":{"x":48}}],[0.001231,{"lines":{"3":[["Reading symbols from /opt/shared/gdb/crackyou...(no debugging symbols found)...do",{}]],"4":[["ne.                                                                              ",{}]],"5":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6,"y":5}}],[0.973485,{"lines":{"5":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.110766,{"cursor":{"x":8}}],[0.643005,{"lines":{"5":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.150843,{"lines":{"5":[["(gdb) # we                                                                       ",{}]]},"cursor":{"x":10}}],[0.074027,{"cursor":{"x":11}}],[0.266623,{"lines":{"5":[["(gdb) # we t                                                                     ",{}]]},"cursor":{"x":12}}],[0.150351,{"lines":{"5":[["(gdb) # we tr                                                                    ",{}]]},"cursor":{"x":13}}],[0.190816,{"lines":{"5":[["(gdb) # we try                                                                   ",{}]]},"cursor":{"x":14}}],[0.08119999999999999,{"cursor":{"x":15}}],[0.275175,{"lines":{"5":[["(gdb) # we try t                                                                 ",{}]]},"cursor":{"x":16}}],[0.087758,{"lines":{"5":[["(gdb) # we try to                                                                ",{}]]},"cursor":{"x":17}}],[0.07782,{"cursor":{"x":18}}],[0.180743,{"lines":{"5":[["(gdb) # we try to g                                                              ",{}]]},"cursor":{"x":19}}],[0.165965,{"lines":{"5":[["(gdb) # we try to ge                                                             ",{}]]},"cursor":{"x":20}}],[0.166976,{"lines":{"5":[["(gdb) # we try to get                                                            ",{}]]},"cursor":{"x":21}}],[0.104193,{"cursor":{"x":22}}],[0.09993200000000001,{"lines":{"5":[["(gdb) # we try to get t                                                          ",{}]]},"cursor":{"x":23}}],[0.102716,{"lines":{"5":[["(gdb) # we try to get th                                                         ",{}]]},"cursor":{"x":24}}],[0.157198,{"lines":{"5":[["(gdb) # we try to get the                                                        ",{}]]},"cursor":{"x":25}}],[0.049904,{"cursor":{"x":26}}],[0.401502,{"lines":{"5":[["(gdb) # we try to get the \"                                                      ",{}]]},"cursor":{"x":27}}],[0.358345,{"lines":{"5":[["(gdb) # we try to get the \"b                                                     ",{}]]},"cursor":{"x":28}}],[0.143275,{"lines":{"5":[["(gdb) # we try to get the \"bi                                                    ",{}]]},"cursor":{"x":29}}],[0.104138,{"lines":{"5":[["(gdb) # we try to get the \"big                                                   ",{}]]},"cursor":{"x":30}}],[0.09161900000000001,{"cursor":{"x":31}}],[0.264068,{"lines":{"5":[["(gdb) # we try to get the \"big p                                                 ",{}]]},"cursor":{"x":32}}],[0.086136,{"lines":{"5":[["(gdb) # we try to get the \"big pi                                                ",{}]]},"cursor":{"x":33}}],[0.149265,{"lines":{"5":[["(gdb) # we try to get the \"big pic                                               ",{}]]},"cursor":{"x":34}}],[0.245755,{"lines":{"5":[["(gdb) # we try to get the \"big pict                                              ",{}]]},"cursor":{"x":35}}],[0.142594,{"lines":{"5":[["(gdb) # we try to get the \"big pictu                                             ",{}]]},"cursor":{"x":36}}],[0.117205,{"lines":{"5":[["(gdb) # we try to get the \"big pictur                                            ",{}]]},"cursor":{"x":37}}],[0.197998,{"lines":{"5":[["(gdb) # we try to get the \"big picture                                           ",{}]]},"cursor":{"x":38}}],[0.333218,{"lines":{"5":[["(gdb) # we try to get the \"big picture\"                                          ",{}]]},"cursor":{"x":39}}],[0.281155,{"cursor":{"x":40}}],[0.148909,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" o                                        ",{}]]},"cursor":{"x":41}}],[0.197037,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of                                       ",{}]]},"cursor":{"x":42}}],[0.065466,{"cursor":{"x":43}}],[0.194561,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of t                                     ",{}]]},"cursor":{"x":44}}],[0.102845,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of th                                    ",{}]]},"cursor":{"x":45}}],[0.141386,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of thr                                   ",{}]]},"cursor":{"x":46}}],[0.593849,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of th                                    ",{}]]},"cursor":{"x":45}}],[0.131085,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the                                   ",{}]]},"cursor":{"x":46}}],[0.152891,{"cursor":{"x":47}}],[0.270151,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the p                                 ",{}]]},"cursor":{"x":48}}],[0.148282,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the pr                                ",{}]]},"cursor":{"x":49}}],[0.095427,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the pro                               ",{}]]},"cursor":{"x":50}}],[0.124876,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the prog                              ",{}]]},"cursor":{"x":51}}],[0.182642,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the progr                             ",{}]]},"cursor":{"x":52}}],[0.180743,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the progra                            ",{}]]},"cursor":{"x":53}}],[0.176297,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program                           ",{}]]},"cursor":{"x":54}}],[0.118029,{"cursor":{"x":55}}],[0.126922,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program i                         ",{}]]},"cursor":{"x":56}}],[0.062473,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program in                        ",{}]]},"cursor":{"x":57}}],[0.100406,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program ins                       ",{}]]},"cursor":{"x":58}}],[0.254496,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program inst                      ",{}]]},"cursor":{"x":59}}],[0.206231,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program inste                     ",{}]]},"cursor":{"x":60}}],[0.156822,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instea                    ",{}]]},"cursor":{"x":61}}],[0.632517,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead                   ",{}]]},"cursor":{"x":62}}],[0.105798,{"cursor":{"x":63}}],[0.284606,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead o                 ",{}]]},"cursor":{"x":64}}],[0.148389,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of                ",{}]]},"cursor":{"x":65}}],[0.081967,{"cursor":{"x":66}}],[1.29268,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of f              ",{}]]},"cursor":{"x":67}}],[0.175578,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of fo             ",{}]]},"cursor":{"x":68}}],[0.228024,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of foc            ",{}]]},"cursor":{"x":69}}],[0.168253,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focu           ",{}]]},"cursor":{"x":70}}],[0.244029,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focus          ",{}]]},"cursor":{"x":71}}],[0.336941,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusi         ",{}]]},"cursor":{"x":72}}],[0.294107,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusin        ",{}]]},"cursor":{"x":73}}],[0.173268,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing       ",{}]]},"cursor":{"x":74}}],[0.09002,{"cursor":{"x":75}}],[0.444876,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing o     ",{}]]},"cursor":{"x":76}}],[0.07795000000000001,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing on    ",{}]]},"cursor":{"x":77}}],[0.103658,{"cursor":{"x":78}}],[0.154921,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing on t  ",{}]]},"cursor":{"x":79}}],[0.071603,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing on th ",{}]]},"cursor":{"x":80}}],[0.188528,{"lines":{"5":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing on the",{}]]},"cursor":{"x":0,"y":6}}],[0.058314,{"cursor":{"x":1}}],[0.201215,{"lines":{"6":[[" s                                                                               ",{}]]},"cursor":{"x":2}}],[0.094554,{"lines":{"6":[[" sm                                                                              ",{}]]},"cursor":{"x":3}}],[0.079237,{"lines":{"6":[[" sma                                                                             ",{}]]},"cursor":{"x":4}}],[0.175704,{"lines":{"6":[[" smal                                                                            ",{}]]},"cursor":{"x":5}}],[0.134016,{"lines":{"6":[[" small                                                                           ",{}]]},"cursor":{"x":6}}],[0.072337,{"cursor":{"x":7}}],[0.122029,{"lines":{"6":[[" small d                                                                         ",{}]]},"cursor":{"x":8}}],[0.158047,{"lines":{"6":[[" small de                                                                        ",{}]]},"cursor":{"x":9}}],[0.191354,{"lines":{"6":[[" small det                                                                       ",{}]]},"cursor":{"x":10}}],[0.164643,{"lines":{"6":[[" small deta                                                                      ",{}]]},"cursor":{"x":11}}],[0.136918,{"lines":{"6":[[" small detai                                                                     ",{}]]},"cursor":{"x":12}}],[0.167032,{"lines":{"6":[[" small detail                                                                    ",{}]]},"cursor":{"x":13}}],[0.122721,{"lines":{"6":[[" small details                                                                   ",{}]]},"cursor":{"x":14}}],[0.2653,{"lines":{"6":[[" small details.                                                                  ",{}]]},"cursor":{"x":15}}],[0.166339,{"lines":{"6":[[" small details..                                                                 ",{}]]},"cursor":{"x":16}}],[0.13488,{"lines":{"6":[[" small details...                                                                ",{}]]},"cursor":{"x":17}}],[0.061566,{"cursor":{"x":0,"y":7}}],[0.000175,{"lines":{"7":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.581102,{"lines":{"7":[["(gdb) b                                                                          ",{}]]},"cursor":{"x":7}}],[0.143985,{"cursor":{"x":8}}],[0.119149,{"lines":{"7":[["(gdb) b m                                                                        ",{}]]},"cursor":{"x":9}}],[0.121224,{"lines":{"7":[["(gdb) b ma                                                                       ",{}]]},"cursor":{"x":10}}],[0.06569999999999999,{"lines":{"7":[["(gdb) b mai                                                                      ",{}]]},"cursor":{"x":11}}],[0.06182,{"lines":{"7":[["(gdb) b main                                                                     ",{}]]},"cursor":{"x":12}}],[0.176006,{"lines":{"8":[["Breakpoint 1 at 0x8048aaa                                                        ",{}]],"9":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6,"y":9}}],[0.259212,{"lines":{"9":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.193002,{"lines":{"10":[["Starting program: /opt/shared/gdb/crackyou                                       ",{}]]},"cursor":{"x":0,"y":11}}],[0.058066,{"lines":{"11":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"12":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]]},"cursor":{"y":13}}],[0.05276,{"lines":{"14":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]]},"cursor":{"y":15}}],[0.000315,{"lines":{"15":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.821784,{"lines":{"15":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.07006900000000001,{"lines":{"15":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.125485,{"lines":{"15":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.128904,{"lines":{"15":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.171482,{"lines":{"15":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.177905,{"cursor":{"x":0,"y":16}}],[0.000328,{"lines":{"16":[["Dump of assembler code for function main:                                        ",{}]]},"cursor":{"y":17}}],[0.036955,{"lines":{"17":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]]},"cursor":{"y":18}}],[0.008233000000000001,{"lines":{"0":[["(gdb) # we try to get the \"big picture\" of the program instead of focusing on the",{}]],"1":[[" small details...                                                                ",{}]],"2":[["(gdb) b main                                                                     ",{}]],"3":[["Breakpoint 1 at 0x8048aaa                                                        ",{}]],"4":[["(gdb) r                                                                          ",{}]],"5":[["Starting program: /opt/shared/gdb/crackyou                                       ",{}]],"6":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"7":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"8":[["                                                                                 ",{}]],"9":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"10":[["(gdb) disas                                                                      ",{}]],"11":[["Dump of assembler code for function main:                                        ",{}]],"12":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"13":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"14":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"15":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"16":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"17":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"18":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"19":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"20":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"21":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"22":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"23":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"24":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"25":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"26":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"27":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"28":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"29":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"30":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"31":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"32":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"33":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"34":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6,"y":36}}],[1.242102,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.070323,{"cursor":{"x":8}}],[0.339751,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.09489400000000001,{"lines":{"36":[["(gdb) # th                                                                       ",{}]]},"cursor":{"x":10}}],[0.14106,{"lines":{"36":[["(gdb) # the                                                                      ",{}]]},"cursor":{"x":11}}],[0.134838,{"lines":{"36":[["(gdb) # ther                                                                     ",{}]]},"cursor":{"x":12}}],[0.133398,{"lines":{"36":[["(gdb) # there                                                                    ",{}]]},"cursor":{"x":13}}],[0.050139,{"cursor":{"x":14}}],[0.178294,{"lines":{"36":[["(gdb) # there a                                                                  ",{}]]},"cursor":{"x":15}}],[0.624054,{"lines":{"36":[["(gdb) # there ar                                                                 ",{}]]},"cursor":{"x":16}}],[0.189547,{"lines":{"36":[["(gdb) # there are                                                                ",{}]]},"cursor":{"x":17}}],[0.08200200000000001,{"cursor":{"x":18}}],[0.194665,{"lines":{"36":[["(gdb) # there are c                                                              ",{}]]},"cursor":{"x":19}}],[0.11082,{"lines":{"36":[["(gdb) # there are ca                                                             ",{}]]},"cursor":{"x":20}}],[0.183749,{"lines":{"36":[["(gdb) # there are cal                                                            ",{}]]},"cursor":{"x":21}}],[0.141893,{"lines":{"36":[["(gdb) # there are call                                                           ",{}]]},"cursor":{"x":22}}],[0.300195,{"lines":{"36":[["(gdb) # there are calls                                                          ",{}]]},"cursor":{"x":23}}],[0.09028899999999999,{"cursor":{"x":24}}],[0.275117,{"lines":{"36":[["(gdb) # there are calls t                                                        ",{}]]},"cursor":{"x":25}}],[0.128022,{"lines":{"36":[["(gdb) # there are calls to                                                       ",{}]]},"cursor":{"x":26}}],[0.09576800000000001,{"cursor":{"x":27}}],[1.043727,{"lines":{"36":[["(gdb) # there are calls to s                                                     ",{}]]},"cursor":{"x":28}}],[0.093973,{"lines":{"36":[["(gdb) # there are calls to so                                                    ",{}]]},"cursor":{"x":29}}],[0.06464,{"lines":{"36":[["(gdb) # there are calls to som                                                   ",{}]]},"cursor":{"x":30}}],[0.048828,{"lines":{"36":[["(gdb) # there are calls to some                                                  ",{}]]},"cursor":{"x":31}}],[0.093073,{"cursor":{"x":32}}],[0.179225,{"lines":{"36":[["(gdb) # there are calls to some f                                                ",{}]]},"cursor":{"x":33}}],[0.093858,{"lines":{"36":[["(gdb) # there are calls to some fu                                               ",{}]]},"cursor":{"x":34}}],[0.047581,{"lines":{"36":[["(gdb) # there are calls to some fun                                              ",{}]]},"cursor":{"x":35}}],[0.110074,{"lines":{"36":[["(gdb) # there are calls to some func                                             ",{}]]},"cursor":{"x":36}}],[0.180828,{"lines":{"36":[["(gdb) # there are calls to some funct                                            ",{}]]},"cursor":{"x":37}}],[0.079889,{"lines":{"36":[["(gdb) # there are calls to some functi                                           ",{}]]},"cursor":{"x":38}}],[0.142122,{"lines":{"36":[["(gdb) # there are calls to some functio                                          ",{}]]},"cursor":{"x":39}}],[0.085869,{"lines":{"36":[["(gdb) # there are calls to some function                                         ",{}]]},"cursor":{"x":40}}],[0.195494,{"lines":{"36":[["(gdb) # there are calls to some functions                                        ",{}]]},"cursor":{"x":41}}],[0.6491980000000001,{"lines":{"36":[["(gdb) # there are calls to some functions:                                       ",{}]]},"cursor":{"x":42}}],[0.078911,{"cursor":{"x":43}}],[1.940155,{"lines":{"36":[["(gdb) # there are calls to some functions: d                                     ",{}]]},"cursor":{"x":44}}],[0.000206,{"lines":{"36":[["(gdb) # there are calls to some functions: die                                   ",{}]]},"cursor":{"x":46}}],[0.203962,{"cursor":{"x":47}}],[1.34451,{"lines":{"36":[["(gdb) # there are calls to some functions: die crackyou                          ",{}]]},"cursor":{"x":55}}],[0.127794,{"cursor":{"x":56}}],[0.627375,{"lines":{"36":[["(gdb) # there are calls to some functions: die crackyou a                        ",{}]]},"cursor":{"x":57}}],[0.136307,{"lines":{"36":[["(gdb) # there are calls to some functions: die crackyou an                       ",{}]]},"cursor":{"x":58}}],[0.079749,{"lines":{"36":[["(gdb) # there are calls to some functions: die crackyou and                      ",{}]]},"cursor":{"x":59}}],[0.08691500000000001,{"cursor":{"x":60}}],[1.603201,{"lines":{"36":[["(gdb) # there are calls to some functions: die crackyou and celebrate            ",{}]]},"cursor":{"x":69}}],[0.950744,{"lines":{"0":[[" small details...                                                                ",{}]],"1":[["(gdb) b main                                                                     ",{}]],"2":[["Breakpoint 1 at 0x8048aaa                                                        ",{}]],"3":[["(gdb) r                                                                          ",{}]],"4":[["Starting program: /opt/shared/gdb/crackyou                                       ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"7":[["                                                                                 ",{}]],"8":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"9":[["(gdb) disas                                                                      ",{}]],"10":[["Dump of assembler code for function main:                                        ",{}]],"11":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"12":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"13":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"14":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"15":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"16":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"17":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"18":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"19":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"20":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"21":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"22":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"24":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"25":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"26":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"27":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"28":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"29":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"30":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"31":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"32":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"33":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"34":[["End of assembler dump.                                                           ",{}]],"35":[["(gdb) # there are calls to some functions: die crackyou and celebrate            ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.00019,{"lines":{"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.6143,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.078736,{"cursor":{"x":8}}],[0.690657,{"lines":{"36":[["(gdb) # a                                                                        ",{}]]},"cursor":{"x":9}}],[0.129157,{"lines":{"36":[["(gdb) # al                                                                       ",{}]]},"cursor":{"x":10}}],[0.142378,{"lines":{"36":[["(gdb) # all                                                                      ",{}]]},"cursor":{"x":11}}],[0.063845,{"cursor":{"x":12}}],[0.211001,{"lines":{"36":[["(gdb) # all t                                                                    ",{}]]},"cursor":{"x":13}}],[0.102223,{"lines":{"36":[["(gdb) # all th                                                                   ",{}]]},"cursor":{"x":14}}],[0.165558,{"lines":{"36":[["(gdb) # all the                                                                  ",{}]]},"cursor":{"x":15}}],[0.090419,{"cursor":{"x":16}}],[1.203618,{"lines":{"36":[["(gdb) # all the c                                                                ",{}]]},"cursor":{"x":17}}],[0.095956,{"lines":{"36":[["(gdb) # all the co                                                               ",{}]]},"cursor":{"x":18}}],[0.111744,{"lines":{"36":[["(gdb) # all the com                                                              ",{}]]},"cursor":{"x":19}}],[0.165231,{"lines":{"36":[["(gdb) # all the comp                                                             ",{}]]},"cursor":{"x":20}}],[0.132939,{"lines":{"36":[["(gdb) # all the compu                                                            ",{}]]},"cursor":{"x":21}}],[0.181197,{"lines":{"36":[["(gdb) # all the comput                                                           ",{}]]},"cursor":{"x":22}}],[0.181604,{"lines":{"36":[["(gdb) # all the computa                                                          ",{}]]},"cursor":{"x":23}}],[0.183156,{"lines":{"36":[["(gdb) # all the computat                                                         ",{}]]},"cursor":{"x":24}}],[0.056152,{"lines":{"36":[["(gdb) # all the computati                                                        ",{}]]},"cursor":{"x":25}}],[0.142035,{"lines":{"36":[["(gdb) # all the computatio                                                       ",{}]]},"cursor":{"x":26}}],[0.07813100000000001,{"lines":{"36":[["(gdb) # all the computation                                                      ",{}]]},"cursor":{"x":27}}],[0.096193,{"cursor":{"x":28}}],[0.21994,{"lines":{"36":[["(gdb) # all the computation i                                                    ",{}]]},"cursor":{"x":29}}],[0.116017,{"lines":{"36":[["(gdb) # all the computation is                                                   ",{}]]},"cursor":{"x":30}}],[0.06694600000000001,{"cursor":{"x":31}}],[0.177989,{"lines":{"36":[["(gdb) # all the computation is d                                                 ",{}]]},"cursor":{"x":32}}],[0.08919299999999999,{"lines":{"36":[["(gdb) # all the computation is do                                                ",{}]]},"cursor":{"x":33}}],[0.069232,{"lines":{"36":[["(gdb) # all the computation is don                                               ",{}]]},"cursor":{"x":34}}],[0.204542,{"lines":{"36":[["(gdb) # all the computation is done                                              ",{}]]},"cursor":{"x":35}}],[0.06600499999999999,{"cursor":{"x":36}}],[0.500373,{"lines":{"36":[["(gdb) # all the computation is done i                                            ",{}]]},"cursor":{"x":37}}],[0.046343,{"lines":{"36":[["(gdb) # all the computation is done in                                           ",{}]]},"cursor":{"x":38}}],[0.096208,{"cursor":{"x":39}}],[0.170744,{"lines":{"36":[["(gdb) # all the computation is done in t                                         ",{}]]},"cursor":{"x":40}}],[0.11896,{"lines":{"36":[["(gdb) # all the computation is done in th                                        ",{}]]},"cursor":{"x":41}}],[0.172866,{"lines":{"36":[["(gdb) # all the computation is done in the                                       ",{}]]},"cursor":{"x":42}}],[0.089716,{"cursor":{"x":43}}],[2.263491,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou                              ",{}]]},"cursor":{"x":51}}],[0.082151,{"cursor":{"x":52}}],[0.5402439999999999,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou f                            ",{}]]},"cursor":{"x":53}}],[0.102553,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou fu                           ",{}]]},"cursor":{"x":54}}],[0.062942,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou fun                          ",{}]]},"cursor":{"x":55}}],[0.103591,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou func                         ",{}]]},"cursor":{"x":56}}],[0.195515,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou funct                        ",{}]]},"cursor":{"x":57}}],[0.072154,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou functi                       ",{}]]},"cursor":{"x":58}}],[0.15768,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou functio                      ",{}]]},"cursor":{"x":59}}],[0.102587,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou function                     ",{}]]},"cursor":{"x":60}}],[0.7669319999999999,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou function.                    ",{}]]},"cursor":{"x":61}}],[0.174543,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou function..                   ",{}]]},"cursor":{"x":62}}],[0.134244,{"lines":{"36":[["(gdb) # all the computation is done in the crackyou function...                  ",{}]]},"cursor":{"x":63}}],[0.663772,{"lines":{"0":[["(gdb) b main                                                                     ",{}]],"1":[["Breakpoint 1 at 0x8048aaa                                                        ",{}]],"2":[["(gdb) r                                                                          ",{}]],"3":[["Starting program: /opt/shared/gdb/crackyou                                       ",{}]],"4":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"5":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"6":[["                                                                                 ",{}]],"7":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"8":[["(gdb) disas                                                                      ",{}]],"9":[["Dump of assembler code for function main:                                        ",{}]],"10":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"11":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"12":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"13":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"14":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"15":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"16":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"17":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"18":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"19":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"20":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"21":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"23":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"24":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"25":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"26":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"27":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"28":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"29":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"30":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"31":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"32":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) # there are calls to some functions: die crackyou and celebrate            ",{}]],"35":[["(gdb) # all the computation is done in the crackyou function...                  ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.94072,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.040032,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.203984,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.149753,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.18276,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.202095,{"cursor":{"x":12}}],[0.663001,{"lines":{"36":[["(gdb) disas crackyou                                                             ",{}]]},"cursor":{"x":20}}],[1.424632,{"lines":{"0":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"1":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"2":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"3":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"4":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"5":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"6":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"7":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"8":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"9":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"10":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"11":[["End of assembler dump.                                                           ",{}]],"12":[["(gdb) # there are calls to some functions: die crackyou and celebrate            ",{}]],"13":[["(gdb) # all the computation is done in the crackyou function...                  ",{}]],"14":[["(gdb) disas crackyou                                                             ",{}]],"15":[["Dump of assembler code for function crackyou:                                    ",{}]],"16":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"17":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"18":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"19":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"20":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"21":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"22":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"23":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"24":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"26":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"27":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"28":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"29":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"30":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"31":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"32":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"33":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"34":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"35":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"36":[["   0x08048969 <+65>:    mov    B                                                 ",{}]]},"cursor":{"x":32}}],[0.000174,{"lines":{"0":[["Dump of assembler code for function crackyou:                                    ",{}]],"1":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"2":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"4":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"5":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"6":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"8":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"9":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"10":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"11":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"12":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"13":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"14":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"15":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"16":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"17":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"18":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"19":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"20":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"21":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"22":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"23":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"24":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"25":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"26":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"27":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"28":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"29":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"30":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"31":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"32":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"33":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"34":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"35":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[1.793953,{"lines":{"0":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"1":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"2":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"3":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"4":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"5":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"6":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"7":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"8":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"9":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"10":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"11":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"12":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"13":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"14":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"15":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"16":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"17":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"18":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"19":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"20":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"21":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"22":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"23":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"24":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"25":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"26":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"27":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"28":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"29":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"30":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"31":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"32":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"33":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"34":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"35":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.003833000000000001,{"lines":{"0":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"1":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"2":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"3":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"4":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"5":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"6":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"7":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"9":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"10":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"15":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"18":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"19":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"20":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"21":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"24":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"26":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"27":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"28":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"29":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"30":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"31":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"32":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"33":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"34":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"35":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[1.589634,{"lines":{"0":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"1":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"2":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"3":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"4":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"6":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"7":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"8":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"9":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"10":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"11":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"12":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"13":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"15":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x08048a2f <+263>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"18":[["   0x08048a32 <+266>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"19":[["   0x08048a36 <+270>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"20":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"22":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"23":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"24":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"25":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"26":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"27":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"30":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"31":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"32":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"33":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"34":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"35":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"36":[["   0x08048a71 <+329>:   call   0x804                                             ",{}]]},"cursor":{"x":36}}],[0.000122,{"lines":{"0":[["   0x08048a2f <+263>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"1":[["   0x08048a32 <+266>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"2":[["   0x08048a36 <+270>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"3":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"5":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"6":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"7":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"8":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"9":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"10":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"13":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"14":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"15":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"16":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"17":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"18":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"20":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"21":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"22":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"23":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"24":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"25":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"26":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"27":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"28":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"29":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"30":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"31":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"32":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"33":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"34":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"35":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[1.375379,{"lines":{"0":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"2":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"3":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"4":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"5":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"6":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"7":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"8":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"9":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"10":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"11":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"12":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"13":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"14":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"15":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"17":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"18":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"19":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"20":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"21":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"22":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"24":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"25":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"26":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"27":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"28":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"29":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"30":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"31":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"32":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"33":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"34":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.239663,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.150573,{"cursor":{"x":8}}],[0.265996,{"lines":{"36":[["(gdb) # q                                                                        ",{}]]},"cursor":{"x":9}}],[0.160161,{"lines":{"36":[["(gdb) # qu                                                                       ",{}]]},"cursor":{"x":10}}],[0.056337,{"lines":{"36":[["(gdb) # qui                                                                      ",{}]]},"cursor":{"x":11}}],[0.139496,{"lines":{"36":[["(gdb) # quit                                                                     ",{}]]},"cursor":{"x":12}}],[0.230252,{"lines":{"36":[["(gdb) # quite                                                                    ",{}]]},"cursor":{"x":13}}],[0.058144,{"cursor":{"x":14}}],[0.153069,{"lines":{"36":[["(gdb) # quite a                                                                  ",{}]]},"cursor":{"x":15}}],[0.091183,{"cursor":{"x":16}}],[0.395418,{"lines":{"36":[["(gdb) # quite a m                                                                ",{}]]},"cursor":{"x":17}}],[0.149612,{"lines":{"36":[["(gdb) # quite a me                                                               ",{}]]},"cursor":{"x":18}}],[0.286158,{"lines":{"36":[["(gdb) # quite a mes                                                              ",{}]]},"cursor":{"x":19}}],[0.149249,{"lines":{"36":[["(gdb) # quite a mess                                                             ",{}]]},"cursor":{"x":20}}],[0.12345,{"cursor":{"x":21}}],[0.428057,{"lines":{"36":[["(gdb) # quite a mess :                                                           ",{}]]},"cursor":{"x":22}}],[0.079012,{"lines":{"36":[["(gdb) # quite a mess :)                                                          ",{}]]},"cursor":{"x":23}}],[0.101727,{"cursor":{"x":24}}],[0.676623,{"lines":{"36":[["(gdb) # quite a mess :) B                                                        ",{}]]},"cursor":{"x":25}}],[0.23816,{"lines":{"36":[["(gdb) # quite a mess :) Bu                                                       ",{}]]},"cursor":{"x":26}}],[0.197393,{"lines":{"36":[["(gdb) # quite a mess :) But                                                      ",{}]]},"cursor":{"x":27}}],[0.073714,{"cursor":{"x":28}}],[0.124411,{"lines":{"36":[["(gdb) # quite a mess :) But l                                                    ",{}]]},"cursor":{"x":29}}],[0.238409,{"lines":{"36":[["(gdb) # quite a mess :) But lo                                                   ",{}]]},"cursor":{"x":30}}],[0.142433,{"lines":{"36":[["(gdb) # quite a mess :) But loo                                                  ",{}]]},"cursor":{"x":31}}],[0.094459,{"lines":{"36":[["(gdb) # quite a mess :) But look                                                 ",{}]]},"cursor":{"x":32}}],[0.325331,{"lines":{"36":[["(gdb) # quite a mess :) But look,                                                ",{}]]},"cursor":{"x":33}}],[0.159541,{"cursor":{"x":34}}],[0.404536,{"lines":{"36":[["(gdb) # quite a mess :) But look, t                                              ",{}]]},"cursor":{"x":35}}],[0.142262,{"lines":{"36":[["(gdb) # quite a mess :) But look, th                                             ",{}]]},"cursor":{"x":36}}],[0.189674,{"lines":{"36":[["(gdb) # quite a mess :) But look, the                                            ",{}]]},"cursor":{"x":37}}],[0.158281,{"lines":{"36":[["(gdb) # quite a mess :) But look, ther                                           ",{}]]},"cursor":{"x":38}}],[0.13415,{"lines":{"36":[["(gdb) # quite a mess :) But look, there                                          ",{}]]},"cursor":{"x":39}}],[0.073961,{"cursor":{"x":40}}],[0.177555,{"lines":{"36":[["(gdb) # quite a mess :) But look, there a                                        ",{}]]},"cursor":{"x":41}}],[0.247554,{"lines":{"36":[["(gdb) # quite a mess :) But look, there ar                                       ",{}]]},"cursor":{"x":42}}],[0.174019,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are                                      ",{}]]},"cursor":{"x":43}}],[0.08296099999999999,{"cursor":{"x":44}}],[0.923136,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are s                                    ",{}]]},"cursor":{"x":45}}],[0.101096,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are so                                   ",{}]]},"cursor":{"x":46}}],[0.032247,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are som                                  ",{}]]},"cursor":{"x":47}}],[0.085545,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some                                 ",{}]]},"cursor":{"x":48}}],[0.080814,{"cursor":{"x":49}}],[0.348453,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some i                               ",{}]]},"cursor":{"x":50}}],[0.062478,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some in                              ",{}]]},"cursor":{"x":51}}],[0.1347,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some int                             ",{}]]},"cursor":{"x":52}}],[0.204133,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some inte                            ",{}]]},"cursor":{"x":53}}],[0.142101,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some inter                           ",{}]]},"cursor":{"x":54}}],[0.142363,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some intere                          ",{}]]},"cursor":{"x":55}}],[0.189672,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interes                         ",{}]]},"cursor":{"x":56}}],[0.223191,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interest                        ",{}]]},"cursor":{"x":57}}],[0.094402,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesti                       ",{}]]},"cursor":{"x":58}}],[0.055414,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interestin                      ",{}]]},"cursor":{"x":59}}],[0.101771,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting                     ",{}]]},"cursor":{"x":60}}],[0.080969,{"cursor":{"x":61}}],[0.499167,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting f                   ",{}]]},"cursor":{"x":62}}],[0.118789,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting fu                  ",{}]]},"cursor":{"x":63}}],[0.06275699999999999,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting fun                 ",{}]]},"cursor":{"x":64}}],[0.1031,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting func                ",{}]]},"cursor":{"x":65}}],[0.195891,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting funct               ",{}]]},"cursor":{"x":66}}],[0.07878400000000001,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functi              ",{}]]},"cursor":{"x":67}}],[0.135116,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functio             ",{}]]},"cursor":{"x":68}}],[0.110167,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting function            ",{}]]},"cursor":{"x":69}}],[0.092696,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions           ",{}]]},"cursor":{"x":70}}],[0.089764,{"cursor":{"x":71}}],[0.170858,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions h         ",{}]]},"cursor":{"x":72}}],[0.062026,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions he        ",{}]]},"cursor":{"x":73}}],[0.149757,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions her       ",{}]]},"cursor":{"x":74}}],[0.150007,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions here      ",{}]]},"cursor":{"x":75}}],[0.464508,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions here:     ",{}]]},"cursor":{"x":76}}],[0.047221,{"cursor":{"x":77}}],[0.442537,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions here: f   ",{}]]},"cursor":{"x":78}}],[0.070133,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions here: fi  ",{}]]},"cursor":{"x":79}}],[0.101815,{"lines":{"36":[["(gdb) # quite a mess :) But look, there are some interesting functions here: fir ",{}]]},"cursor":{"x":80}}],[0.189469,{"lines":{"0":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"1":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"2":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"3":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"4":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"5":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"6":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"7":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"8":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"9":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"10":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"11":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"12":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"13":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"14":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"16":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"17":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"18":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"19":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"20":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"21":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"23":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"24":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"25":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"26":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"27":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"28":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"29":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"30":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"31":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"32":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"33":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"34":[["End of assembler dump.                                                           ",{}]],"35":[["(gdb) # quite a mess :) But look, there are some interesting functions here: firs",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.207458,{"lines":{"36":[["t                                                                                ",{}]]},"cursor":{"x":1}}],[0.303137,{"lines":{"36":[["t_                                                                               ",{}]]},"cursor":{"x":2}}],[0.306564,{"lines":{"36":[["t_c                                                                              ",{}]]},"cursor":{"x":3}}],[0.167034,{"lines":{"36":[["t_ce                                                                             ",{}]]},"cursor":{"x":4}}],[0.441617,{"lines":{"36":[["t_c                                                                              ",{}]]},"cursor":{"x":3}}],[0.212252,{"lines":{"36":[["t_ch                                                                             ",{}]]},"cursor":{"x":4}}],[0.112294,{"lines":{"36":[["t_che                                                                            ",{}]]},"cursor":{"x":5}}],[0.123152,{"lines":{"36":[["t_chec                                                                           ",{}]]},"cursor":{"x":6}}],[0.101961,{"lines":{"36":[["t_check                                                                          ",{}]]},"cursor":{"x":7}}],[0.30417,{"lines":{"36":[["t_check,                                                                         ",{}]]},"cursor":{"x":8}}],[0.087398,{"cursor":{"x":9}}],[0.178885,{"lines":{"36":[["t_check, s                                                                       ",{}]]},"cursor":{"x":10}}],[0.118619,{"lines":{"36":[["t_check, se                                                                      ",{}]]},"cursor":{"x":11}}],[0.174515,{"lines":{"36":[["t_check, sec                                                                     ",{}]]},"cursor":{"x":12}}],[0.024705,{"lines":{"36":[["t_check, seco                                                                    ",{}]]},"cursor":{"x":13}}],[0.085311,{"lines":{"36":[["t_check, secon                                                                   ",{}]]},"cursor":{"x":14}}],[0.053055,{"lines":{"36":[["t_check, second                                                                  ",{}]]},"cursor":{"x":15}}],[0.254807,{"lines":{"36":[["t_check, second_                                                                 ",{}]]},"cursor":{"x":16}}],[0.251035,{"lines":{"36":[["t_check, second_c                                                                ",{}]]},"cursor":{"x":17}}],[0.223164,{"lines":{"36":[["t_check, second_ch                                                               ",{}]]},"cursor":{"x":18}}],[0.149648,{"lines":{"36":[["t_check, second_che                                                              ",{}]]},"cursor":{"x":19}}],[0.198295,{"lines":{"36":[["t_check, second_chec                                                             ",{}]]},"cursor":{"x":20}}],[0.103881,{"lines":{"36":[["t_check, second_check                                                            ",{}]]},"cursor":{"x":21}}],[0.237902,{"lines":{"36":[["t_check, second_check,                                                           ",{}]]},"cursor":{"x":22}}],[0.071752,{"cursor":{"x":23}}],[0.236167,{"lines":{"36":[["t_check, second_check, t                                                         ",{}]]},"cursor":{"x":24}}],[0.110229,{"lines":{"36":[["t_check, second_check, th                                                        ",{}]]},"cursor":{"x":25}}],[0.03965,{"lines":{"36":[["t_check, second_check, thi                                                       ",{}]]},"cursor":{"x":26}}],[0.134093,{"lines":{"36":[["t_check, second_check, thir                                                      ",{}]]},"cursor":{"x":27}}],[0.187899,{"lines":{"36":[["t_check, second_check, third                                                     ",{}]]},"cursor":{"x":28}}],[0.585033,{"lines":{"36":[["t_check, second_check, third_                                                    ",{}]]},"cursor":{"x":29}}],[0.250714,{"lines":{"36":[["t_check, second_check, third_c                                                   ",{}]]},"cursor":{"x":30}}],[0.063843,{"lines":{"36":[["t_check, second_check, third_ch                                                  ",{}]]},"cursor":{"x":31}}],[0.108045,{"lines":{"36":[["t_check, second_check, third_che                                                 ",{}]]},"cursor":{"x":32}}],[0.158199,{"lines":{"36":[["t_check, second_check, third_chec                                                ",{}]]},"cursor":{"x":33}}],[0.120071,{"lines":{"36":[["t_check, second_check, third_check                                               ",{}]]},"cursor":{"x":34}}],[0.728742,{"lines":{"0":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"1":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"2":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"3":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"4":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"5":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"6":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"7":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"8":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"9":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"10":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"11":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"12":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"13":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"14":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"15":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"16":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"17":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"18":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"19":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"20":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"22":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"23":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"24":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"25":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"26":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"27":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"28":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"29":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"30":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"31":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"32":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) # quite a mess :) But look, there are some interesting functions here: firs",{}]],"35":[["t_check, second_check, third_check                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.78286,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.126591,{"cursor":{"x":8}}],[0.269283,{"lines":{"36":[["(gdb) # o                                                                        ",{}]]},"cursor":{"x":9}}],[0.117995,{"lines":{"36":[["(gdb) # ou                                                                       ",{}]]},"cursor":{"x":10}}],[0.149075,{"lines":{"36":[["(gdb) # our                                                                      ",{}]]},"cursor":{"x":11}}],[0.06571100000000001,{"cursor":{"x":12}}],[0.242632,{"lines":{"36":[["(gdb) # our g                                                                    ",{}]]},"cursor":{"x":13}}],[0.13617,{"lines":{"36":[["(gdb) # our go                                                                   ",{}]]},"cursor":{"x":14}}],[0.13877,{"lines":{"36":[["(gdb) # our goa                                                                  ",{}]]},"cursor":{"x":15}}],[0.193393,{"lines":{"36":[["(gdb) # our goal                                                                 ",{}]]},"cursor":{"x":16}}],[0.119081,{"cursor":{"x":17}}],[0.397313,{"lines":{"36":[["(gdb) # our goal i                                                               ",{}]]},"cursor":{"x":18}}],[0.086419,{"lines":{"36":[["(gdb) # our goal is                                                              ",{}]]},"cursor":{"x":19}}],[0.108127,{"cursor":{"x":20}}],[0.976475,{"lines":{"36":[["(gdb) # our goal is t                                                            ",{}]]},"cursor":{"x":21}}],[0.728818,{"lines":{"36":[["(gdb) # our goal is to                                                           ",{}]]},"cursor":{"x":22}}],[1.120518,{"cursor":{"x":23}}],[4.955842,{"lines":{"36":[["(gdb) # our goal is to b                                                         ",{}]]},"cursor":{"x":24}}],[0.310377,{"lines":{"36":[["(gdb) # our goal is to by                                                        ",{}]]},"cursor":{"x":25}}],[0.207875,{"lines":{"36":[["(gdb) # our goal is to byp                                                       ",{}]]},"cursor":{"x":26}}],[0.13089,{"lines":{"36":[["(gdb) # our goal is to bypa                                                      ",{}]]},"cursor":{"x":27}}],[0.23885,{"lines":{"36":[["(gdb) # our goal is to bypas                                                     ",{}]]},"cursor":{"x":28}}],[0.150366,{"lines":{"36":[["(gdb) # our goal is to bypass                                                    ",{}]]},"cursor":{"x":29}}],[0.08232200000000001,{"cursor":{"x":30}}],[0.425642,{"lines":{"36":[["(gdb) # our goal is to bypass a                                                  ",{}]]},"cursor":{"x":31}}],[0.137236,{"lines":{"36":[["(gdb) # our goal is to bypass al                                                 ",{}]]},"cursor":{"x":32}}],[0.142013,{"lines":{"36":[["(gdb) # our goal is to bypass all                                                ",{}]]},"cursor":{"x":33}}],[0.119776,{"cursor":{"x":34}}],[0.702067,{"lines":{"36":[["(gdb) # our goal is to bypass all o                                              ",{}]]},"cursor":{"x":35}}],[0.2205,{"lines":{"36":[["(gdb) # our goal is to bypass all of                                             ",{}]]},"cursor":{"x":36}}],[0.217558,{"cursor":{"x":37}}],[0.468083,{"lines":{"36":[["(gdb) # our goal is to bypass all of t                                           ",{}]]},"cursor":{"x":38}}],[0.166602,{"lines":{"36":[["(gdb) # our goal is to bypass all of th                                          ",{}]]},"cursor":{"x":39}}],[0.613995,{"lines":{"36":[["(gdb) # our goal is to bypass all of the                                         ",{}]]},"cursor":{"x":40}}],[0.189775,{"lines":{"36":[["(gdb) # our goal is to bypass all of thes                                        ",{}]]},"cursor":{"x":41}}],[0.150467,{"lines":{"36":[["(gdb) # our goal is to bypass all of these                                       ",{}]]},"cursor":{"x":42}}],[0.090075,{"cursor":{"x":43}}],[0.355051,{"lines":{"36":[["(gdb) # our goal is to bypass all of these c                                     ",{}]]},"cursor":{"x":44}}],[0.431335,{"lines":{"36":[["(gdb) # our goal is to bypass all of these ch                                    ",{}]]},"cursor":{"x":45}}],[0.245389,{"lines":{"36":[["(gdb) # our goal is to bypass all of these che                                   ",{}]]},"cursor":{"x":46}}],[0.320318,{"lines":{"36":[["(gdb) # our goal is to bypass all of these chek                                  ",{}]]},"cursor":{"x":47}}],[0.156134,{"lines":{"36":[["(gdb) # our goal is to bypass all of these cheks                                 ",{}]]},"cursor":{"x":48}}],[0.778728,{"lines":{"36":[["(gdb) # our goal is to bypass all of these chek                                  ",{}]]},"cursor":{"x":47}}],[0.166269,{"lines":{"36":[["(gdb) # our goal is to bypass all of these che                                   ",{}]]},"cursor":{"x":46}}],[0.155057,{"lines":{"36":[["(gdb) # our goal is to bypass all of these chec                                  ",{}]]},"cursor":{"x":47}}],[0.110127,{"lines":{"36":[["(gdb) # our goal is to bypass all of these check                                 ",{}]]},"cursor":{"x":48}}],[0.110207,{"lines":{"36":[["(gdb) # our goal is to bypass all of these checke                                ",{}]]},"cursor":{"x":49}}],[0.786642,{"lines":{"36":[["(gdb) # our goal is to bypass all of these check                                 ",{}]]},"cursor":{"x":48}}],[0.106702,{"lines":{"36":[["(gdb) # our goal is to bypass all of these checks                                ",{}]]},"cursor":{"x":49}}],[0.345903,{"cursor":{"x":50}}],[0.734241,{"cursor":{"x":49}}],[0.072244,{"lines":{"36":[["(gdb) # our goal is to bypass all of these checks!                               ",{}]]},"cursor":{"x":50}}],[0.41184,{"lines":{"0":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"1":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"2":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"3":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"4":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"5":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"6":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"8":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"9":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"10":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"11":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"12":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"14":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"15":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"16":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"17":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"18":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"19":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"20":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"21":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"22":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"23":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"24":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"25":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"26":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"27":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"28":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"29":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"30":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"31":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) # quite a mess :) But look, there are some interesting functions here: firs",{}]],"34":[["t_check, second_check, third_check                                               ",{}]],"35":[["(gdb) # our goal is to bypass all of these checks!                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[4.940962,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.10258,{"cursor":{"x":8}}],[0.836073,{"lines":{"36":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.158611,{"lines":{"36":[["(gdb) # we                                                                       ",{}]]},"cursor":{"x":10}}],[0.082202,{"cursor":{"x":11}}],[0.265899,{"lines":{"36":[["(gdb) # we s                                                                     ",{}]]},"cursor":{"x":12}}],[0.247705,{"lines":{"36":[["(gdb) # we st                                                                    ",{}]]},"cursor":{"x":13}}],[0.148068,{"lines":{"36":[["(gdb) # we sta                                                                   ",{}]]},"cursor":{"x":14}}],[0.216107,{"lines":{"36":[["(gdb) # we star                                                                  ",{}]]},"cursor":{"x":15}}],[0.142355,{"lines":{"36":[["(gdb) # we start                                                                 ",{}]]},"cursor":{"x":16}}],[0.081731,{"cursor":{"x":17}}],[0.579543,{"lines":{"36":[["(gdb) # we start b                                                               ",{}]]},"cursor":{"x":18}}],[0.279229,{"lines":{"36":[["(gdb) # we start by                                                              ",{}]]},"cursor":{"x":19}}],[0.104658,{"cursor":{"x":20}}],[0.602274,{"lines":{"36":[["(gdb) # we start by s                                                            ",{}]]},"cursor":{"x":21}}],[0.143291,{"lines":{"36":[["(gdb) # we start by se                                                           ",{}]]},"cursor":{"x":22}}],[0.238513,{"lines":{"36":[["(gdb) # we start by set                                                          ",{}]]},"cursor":{"x":23}}],[0.126094,{"lines":{"36":[["(gdb) # we start by sett                                                         ",{}]]},"cursor":{"x":24}}],[0.11141,{"lines":{"36":[["(gdb) # we start by setti                                                        ",{}]]},"cursor":{"x":25}}],[0.07802000000000001,{"lines":{"36":[["(gdb) # we start by settin                                                       ",{}]]},"cursor":{"x":26}}],[0.07034799999999999,{"lines":{"36":[["(gdb) # we start by setting                                                      ",{}]]},"cursor":{"x":27}}],[0.072367,{"cursor":{"x":28}}],[0.241889,{"lines":{"36":[["(gdb) # we start by setting a                                                    ",{}]]},"cursor":{"x":29}}],[0.090782,{"cursor":{"x":30}}],[0.227093,{"lines":{"36":[["(gdb) # we start by setting a b                                                  ",{}]]},"cursor":{"x":31}}],[0.135021,{"lines":{"36":[["(gdb) # we start by setting a br                                                 ",{}]]},"cursor":{"x":32}}],[0.155672,{"lines":{"36":[["(gdb) # we start by setting a bre                                                ",{}]]},"cursor":{"x":33}}],[0.157377,{"lines":{"36":[["(gdb) # we start by setting a brea                                               ",{}]]},"cursor":{"x":34}}],[0.128713,{"lines":{"36":[["(gdb) # we start by setting a break                                              ",{}]]},"cursor":{"x":35}}],[0.20746,{"lines":{"36":[["(gdb) # we start by setting a breakp                                             ",{}]]},"cursor":{"x":36}}],[0.189732,{"lines":{"36":[["(gdb) # we start by setting a breakpo                                            ",{}]]},"cursor":{"x":37}}],[0.205846,{"lines":{"36":[["(gdb) # we start by setting a breakpoi                                           ",{}]]},"cursor":{"x":38}}],[0.078324,{"lines":{"36":[["(gdb) # we start by setting a breakpoin                                          ",{}]]},"cursor":{"x":39}}],[0.126176,{"lines":{"36":[["(gdb) # we start by setting a breakpoint                                         ",{}]]},"cursor":{"x":40}}],[0.081361,{"cursor":{"x":41}}],[0.234264,{"lines":{"36":[["(gdb) # we start by setting a breakpoint b                                       ",{}]]},"cursor":{"x":42}}],[0.1355,{"lines":{"36":[["(gdb) # we start by setting a breakpoint be                                      ",{}]]},"cursor":{"x":43}}],[0.164814,{"lines":{"36":[["(gdb) # we start by setting a breakpoint bef                                     ",{}]]},"cursor":{"x":44}}],[0.111709,{"lines":{"36":[["(gdb) # we start by setting a breakpoint befo                                    ",{}]]},"cursor":{"x":45}}],[0.09249499999999999,{"lines":{"36":[["(gdb) # we start by setting a breakpoint befor                                   ",{}]]},"cursor":{"x":46}}],[0.165707,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before                                  ",{}]]},"cursor":{"x":47}}],[0.058607,{"cursor":{"x":48}}],[0.210356,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before t                                ",{}]]},"cursor":{"x":49}}],[0.09446300000000001,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before th                               ",{}]]},"cursor":{"x":50}}],[0.141335,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the                              ",{}]]},"cursor":{"x":51}}],[0.033799,{"cursor":{"x":52}}],[0.187036,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the f                            ",{}]]},"cursor":{"x":53}}],[0.09514499999999999,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the fi                           ",{}]]},"cursor":{"x":54}}],[0.07227,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the fir                          ",{}]]},"cursor":{"x":55}}],[0.194562,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the firs                         ",{}]]},"cursor":{"x":56}}],[0.206836,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first                        ",{}]]},"cursor":{"x":57}}],[0.367572,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_                       ",{}]]},"cursor":{"x":58}}],[0.227207,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_c                      ",{}]]},"cursor":{"x":59}}],[0.127567,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_ch                     ",{}]]},"cursor":{"x":60}}],[0.188874,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_che                    ",{}]]},"cursor":{"x":61}}],[0.430578,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_chec                   ",{}]]},"cursor":{"x":62}}],[0.087727,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check                  ",{}]]},"cursor":{"x":63}}],[0.09579500000000001,{"cursor":{"x":64}}],[0.235934,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check f                ",{}]]},"cursor":{"x":65}}],[0.110404,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check fu               ",{}]]},"cursor":{"x":66}}],[0.06343500000000001,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check fun              ",{}]]},"cursor":{"x":67}}],[0.126969,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check func             ",{}]]},"cursor":{"x":68}}],[0.219815,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check funct            ",{}]]},"cursor":{"x":69}}],[0.047865,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check functi           ",{}]]},"cursor":{"x":70}}],[0.14175,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check functio          ",{}]]},"cursor":{"x":71}}],[0.086354,{"lines":{"36":[["(gdb) # we start by setting a breakpoint before the first_check function         ",{}]]},"cursor":{"x":72}}],[0.592037,{"lines":{"0":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"1":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"2":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"3":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"4":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"5":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"6":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"7":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"8":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"9":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"10":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"11":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"13":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"14":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"15":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"16":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"17":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"18":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"20":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"21":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"22":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"23":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"24":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"25":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"26":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"27":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"28":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"29":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"30":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) # quite a mess :) But look, there are some interesting functions here: firs",{}]],"33":[["t_check, second_check, third_check                                               ",{}]],"34":[["(gdb) # our goal is to bypass all of these checks!                               ",{}]],"35":[["(gdb) # we start by setting a breakpoint before the first_check function         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.270478,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.08772000000000001,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.124057,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.141367,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.199267,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.770639,{"cursor":{"x":12}}],[1.549955,{"lines":{"36":[["(gdb) disas c                                                                    ",{}]]},"cursor":{"x":13}}],[0.182547,{"lines":{"36":[["(gdb) disas cr                                                                   ",{}]]},"cursor":{"x":14}}],[0.1647,{"lines":{"36":[["(gdb) disas cra                                                                  ",{}]]},"cursor":{"x":15}}],[0.175197,{"lines":{"36":[["(gdb) disas crac                                                                 ",{}]]},"cursor":{"x":16}}],[0.095558,{"lines":{"36":[["(gdb) disas crack                                                                ",{}]]},"cursor":{"x":17}}],[0.214144,{"lines":{"36":[["(gdb) disas cracky                                                               ",{}]]},"cursor":{"x":18}}],[0.110106,{"lines":{"36":[["(gdb) disas crackyo                                                              ",{}]]},"cursor":{"x":19}}],[0.095233,{"lines":{"36":[["(gdb) disas crackyou                                                             ",{}]]},"cursor":{"x":20}}],[0.24924,{"lines":{"0":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"1":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"2":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"3":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"4":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"5":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"6":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"7":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"8":[["   0x08048aa6 <+382>:   ret                                                      ",{}]],"9":[["End of assembler dump.                                                           ",{}]],"10":[["(gdb) # quite a mess :) But look, there are some interesting functions here: firs",{}]],"11":[["t_check, second_check, third_check                                               ",{}]],"12":[["(gdb) # our goal is to bypass all of these checks!                               ",{}]],"13":[["(gdb) # we start by setting a breakpoint before the first_check function         ",{}]],"14":[["(gdb) disas crackyou                                                             ",{}]],"15":[["Dump of assembler code for function crackyou:                                    ",{}]],"16":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"17":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"18":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"19":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"20":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"21":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"22":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"23":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"24":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"26":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"27":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"28":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"29":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"30":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"31":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"32":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"33":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"34":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"35":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"36":[["   0x08048969 <+65>:    mov    B                                                 ",{}]]},"cursor":{"x":32}}],[7.3e-05,{"lines":{"0":[["Dump of assembler code for function crackyou:                                    ",{}]],"1":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"2":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"4":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"5":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"6":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"8":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"9":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"10":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"11":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"12":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"13":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"14":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"15":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"16":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"17":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"18":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"19":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"20":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"21":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"22":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"23":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"24":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"25":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"26":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"27":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"28":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"29":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"30":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"31":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"32":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"33":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"34":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"35":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.549665,{"lines":{"0":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"1":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"2":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"3":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"4":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"5":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"6":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"7":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"8":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"9":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"10":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"11":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"12":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"13":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"14":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"15":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"18":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"19":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"20":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"21":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"22":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"23":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"24":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"26":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"27":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"30":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"31":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"32":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"33":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"34":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"35":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"36":[["   0x0                                                                           ",{}]]},"cursor":{"x":6}}],[0.000106,{"lines":{"0":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"1":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"2":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"3":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"4":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"5":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"6":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"7":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"9":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"10":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"15":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"18":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"19":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"20":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"21":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"24":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"26":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"27":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"28":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"29":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"30":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"31":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"32":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"33":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"34":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"35":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[8.639545999999999,{"lines":{"36":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]]},"cursor":{"x":55}}],[0.130295,{"lines":{"0":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"1":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"2":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"3":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"4":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"5":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"7":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"8":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"9":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"10":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"12":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"13":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"16":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"17":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"18":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"19":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"20":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"21":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"22":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"24":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"25":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"26":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"27":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"28":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"29":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"30":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"31":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"32":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"33":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"34":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"35":[["Quit                                                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.652356,{"lines":{"36":[["(gdb) b                                                                          ",{}]]},"cursor":{"x":7}}],[0.088599,{"cursor":{"x":8}}],[0.308097,{"lines":{"36":[["(gdb) b *                                                                        ",{}]]},"cursor":{"x":9}}],[0.406702,{"lines":{"36":[["(gdb) b *0x08048a09                                                              ",{}]]},"cursor":{"x":19}}],[0.689338,{"lines":{"0":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"1":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"2":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"3":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"5":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"6":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"7":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"8":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"10":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"11":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"12":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"15":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"16":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"17":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"18":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"19":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"20":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"22":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"23":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"24":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"25":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"26":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"27":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"30":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"31":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"32":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"33":[["Quit                                                                             ",{}]],"34":[["(gdb) b *0x08048a09                                                              ",{}]],"35":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.413235,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.112681,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.285592,{"lines":{"36":[["(gdb) x/i                                                                        ",{}]]},"cursor":{"x":9}}],[0.128016,{"cursor":{"x":10}}],[1.368048,{"lines":{"36":[["(gdb) x/i 0x08048a09                                                             ",{}]]},"cursor":{"x":20}}],[0.473035,{"lines":{"0":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"1":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"3":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"4":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"5":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"6":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"8":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"9":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"10":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"12":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"13":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"14":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"15":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"16":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"17":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"18":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"20":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"21":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"22":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"23":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"24":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"25":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"26":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"27":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"28":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"29":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"30":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"31":[["Quit                                                                             ",{}]],"32":[["(gdb) b *0x08048a09                                                              ",{}]],"33":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"34":[["(gdb) x/i 0x08048a09                                                             ",{}]],"35":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[4.145664,{"lines":{"36":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.113482,{"cursor":{"x":8}}],[1.274125,{"lines":{"36":[["(gdb) r A                                                                        ",{}]]},"cursor":{"x":9}}],[0.294692,{"lines":{"36":[["(gdb) r AA                                                                       ",{}]]},"cursor":{"x":10}}],[0.342248,{"lines":{"36":[["(gdb) r AAA                                                                      ",{}]]},"cursor":{"x":11}}],[0.406928,{"lines":{"36":[["(gdb) r AAAA                                                                     ",{}]]},"cursor":{"x":12}}],[0.374881,{"lines":{"36":[["(gdb) r AAAAA                                                                    ",{}]]},"cursor":{"x":13}}],[0.558812,{"lines":{"36":[["(gdb) r AAAAAA                                                                   ",{}]]},"cursor":{"x":14}}],[0.33398,{"lines":{"36":[["(gdb) r AAAAAAA                                                                  ",{}]]},"cursor":{"x":15}}],[0.326482,{"lines":{"36":[["(gdb) r AAAAAAAA                                                                 ",{}]]},"cursor":{"x":16}}],[0.310771,{"lines":{"36":[["(gdb) r AAAAAAAAA                                                                ",{}]]},"cursor":{"x":17}}],[0.286479,{"lines":{"36":[["(gdb) r AAAAAAAAAA                                                               ",{}]]},"cursor":{"x":18}}],[0.778568,{"lines":{"0":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"1":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"2":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"3":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"4":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"6":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"7":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"8":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"10":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"11":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"12":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"13":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"14":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"15":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"16":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"18":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"19":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"20":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"21":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"22":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"23":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"24":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"25":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"26":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"27":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"28":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"29":[["Quit                                                                             ",{}]],"30":[["(gdb) b *0x08048a09                                                              ",{}]],"31":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"32":[["(gdb) x/i 0x08048a09                                                             ",{}]],"33":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"34":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"35":[["The program being debugged has been started already.                             ",{}]],"36":[["Start it from the beginning? (y or n)                                            ",{}]]},"cursor":{"x":38}}],[1.013246,{"lines":{"36":[["Start it from the beginning? (y or n) y                                          ",{}]]},"cursor":{"x":39}}],[1.867729,{"lines":{"0":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"1":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"2":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"3":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"6":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"9":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"10":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"11":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"12":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"13":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"14":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"15":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"17":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"18":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"19":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"20":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"21":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"23":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"24":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"25":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"26":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"28":[["Quit                                                                             ",{}]],"29":[["(gdb) b *0x08048a09                                                              ",{}]],"30":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"31":[["(gdb) x/i 0x08048a09                                                             ",{}]],"32":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"33":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"34":[["The program being debugged has been started already.                             ",{}]],"35":[["Start it from the beginning? (y or n) y                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.009361999999999999,{"lines":{"0":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"1":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"2":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"3":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"6":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"7":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"8":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"9":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"10":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"11":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"13":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"14":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"15":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"16":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"17":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"18":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"19":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"20":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"21":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"22":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"23":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"24":[["Quit                                                                             ",{}]],"25":[["(gdb) b *0x08048a09                                                              ",{}]],"26":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"27":[["(gdb) x/i 0x08048a09                                                             ",{}]],"28":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"29":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"30":[["The program being debugged has been started already.                             ",{}]],"31":[["Start it from the beginning? (y or n) y                                          ",{}]],"32":[["                                                                                 ",{}]],"33":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"34":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"35":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]]}}],[0.027405,{"lines":{"0":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"1":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"2":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"4":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"5":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"6":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"7":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"8":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"9":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"10":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"12":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"13":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"14":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"15":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"16":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"17":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"18":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"19":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"20":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"21":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"22":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"23":[["Quit                                                                             ",{}]],"24":[["(gdb) b *0x08048a09                                                              ",{}]],"25":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"26":[["(gdb) x/i 0x08048a09                                                             ",{}]],"27":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"28":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"29":[["The program being debugged has been started already.                             ",{}]],"30":[["Start it from the beginning? (y or n) y                                          ",{}]],"31":[["                                                                                 ",{}]],"32":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"33":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"34":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"35":[["                                                                                 ",{}]]}}],[0.000603,{"lines":{"0":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"1":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"3":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"4":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"5":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"6":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"7":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"8":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"9":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"11":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"12":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"13":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"14":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"15":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"16":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"17":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"18":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"19":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"20":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"21":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"22":[["Quit                                                                             ",{}]],"23":[["(gdb) b *0x08048a09                                                              ",{}]],"24":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"25":[["(gdb) x/i 0x08048a09                                                             ",{}]],"26":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"27":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"28":[["The program being debugged has been started already.                             ",{}]],"29":[["Start it from the beginning? (y or n) y                                          ",{}]],"30":[["                                                                                 ",{}]],"31":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"32":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"33":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.02558,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.102125,{"cursor":{"x":8}}],[1.392401,{"lines":{"36":[["(gdb) # o                                                                        ",{}]]},"cursor":{"x":9}}],[0.07728599999999999,{"lines":{"36":[["(gdb) # ok                                                                       ",{}]]},"cursor":{"x":10}}],[0.349765,{"lines":{"36":[["(gdb) # ok,                                                                      ",{}]]},"cursor":{"x":11}}],[0.095442,{"cursor":{"x":12}}],[0.436274,{"lines":{"36":[["(gdb) # ok, I                                                                    ",{}]]},"cursor":{"x":13}}],[0.09588099999999999,{"cursor":{"x":14}}],[0.474566,{"lines":{"36":[["(gdb) # ok, I s                                                                  ",{}]]},"cursor":{"x":15}}],[0.295161,{"lines":{"36":[["(gdb) # ok, I st                                                                 ",{}]]},"cursor":{"x":16}}],[0.212811,{"lines":{"36":[["(gdb) # ok, I sta                                                                ",{}]]},"cursor":{"x":17}}],[0.263864,{"lines":{"36":[["(gdb) # ok, I star                                                               ",{}]]},"cursor":{"x":18}}],[0.134362,{"lines":{"36":[["(gdb) # ok, I start                                                              ",{}]]},"cursor":{"x":19}}],[0.261977,{"lines":{"36":[["(gdb) # ok, I starte                                                             ",{}]]},"cursor":{"x":20}}],[0.206393,{"lines":{"36":[["(gdb) # ok, I started                                                            ",{}]]},"cursor":{"x":21}}],[0.134427,{"cursor":{"x":22}}],[0.799417,{"lines":{"36":[["(gdb) # ok, I started t                                                          ",{}]]},"cursor":{"x":23}}],[0.08698400000000001,{"lines":{"36":[["(gdb) # ok, I started th                                                         ",{}]]},"cursor":{"x":24}}],[0.117922,{"lines":{"36":[["(gdb) # ok, I started the                                                        ",{}]]},"cursor":{"x":25}}],[0.072823,{"cursor":{"x":26}}],[0.132708,{"lines":{"36":[["(gdb) # ok, I started the p                                                      ",{}]]},"cursor":{"x":27}}],[0.072048,{"lines":{"36":[["(gdb) # ok, I started the pr                                                     ",{}]]},"cursor":{"x":28}}],[0.108012,{"lines":{"36":[["(gdb) # ok, I started the pro                                                    ",{}]]},"cursor":{"x":29}}],[0.069345,{"lines":{"36":[["(gdb) # ok, I started the prog                                                   ",{}]]},"cursor":{"x":30}}],[0.174058,{"lines":{"36":[["(gdb) # ok, I started the progr                                                  ",{}]]},"cursor":{"x":31}}],[0.148926,{"lines":{"36":[["(gdb) # ok, I started the progra                                                 ",{}]]},"cursor":{"x":32}}],[0.111747,{"lines":{"36":[["(gdb) # ok, I started the program                                                ",{}]]},"cursor":{"x":33}}],[0.112165,{"cursor":{"x":34}}],[0.139765,{"lines":{"36":[["(gdb) # ok, I started the program u                                              ",{}]]},"cursor":{"x":35}}],[0.11649,{"lines":{"36":[["(gdb) # ok, I started the program us                                             ",{}]]},"cursor":{"x":36}}],[0.112818,{"lines":{"36":[["(gdb) # ok, I started the program usi                                            ",{}]]},"cursor":{"x":37}}],[0.078168,{"lines":{"36":[["(gdb) # ok, I started the program usin                                           ",{}]]},"cursor":{"x":38}}],[0.204872,{"lines":{"36":[["(gdb) # ok, I started the program using                                          ",{}]]},"cursor":{"x":39}}],[0.105871,{"cursor":{"x":40}}],[0.196128,{"lines":{"36":[["(gdb) # ok, I started the program using a                                        ",{}]]},"cursor":{"x":41}}],[0.092297,{"cursor":{"x":42}}],[0.913475,{"lines":{"36":[["(gdb) # ok, I started the program using a 1                                      ",{}]]},"cursor":{"x":43}}],[0.110735,{"lines":{"36":[["(gdb) # ok, I started the program using a 10                                     ",{}]]},"cursor":{"x":44}}],[0.097173,{"cursor":{"x":45}}],[0.195914,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 c                                   ",{}]]},"cursor":{"x":46}}],[0.135108,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 ch                                  ",{}]]},"cursor":{"x":47}}],[0.099777,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 cha                                 ",{}]]},"cursor":{"x":48}}],[0.288481,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 char                                ",{}]]},"cursor":{"x":49}}],[0.318095,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars                               ",{}]]},"cursor":{"x":50}}],[0.097591,{"cursor":{"x":51}}],[0.582497,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars l                             ",{}]]},"cursor":{"x":52}}],[0.173273,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars lo                            ",{}]]},"cursor":{"x":53}}],[0.101372,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars lon                           ",{}]]},"cursor":{"x":54}}],[0.205583,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long                          ",{}]]},"cursor":{"x":55}}],[0.089258,{"cursor":{"x":56}}],[0.124534,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long p                        ",{}]]},"cursor":{"x":57}}],[0.098956,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long pa                       ",{}]]},"cursor":{"x":58}}],[0.263167,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long pas                      ",{}]]},"cursor":{"x":59}}],[0.14979,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long pass                     ",{}]]},"cursor":{"x":60}}],[0.150353,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long passw                    ",{}]]},"cursor":{"x":61}}],[0.104371,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long passwo                   ",{}]]},"cursor":{"x":62}}],[0.125177,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long passwor                  ",{}]]},"cursor":{"x":63}}],[0.189696,{"lines":{"36":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]]},"cursor":{"x":64}}],[1.187164,{"lines":{"0":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"2":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"3":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"4":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"5":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"6":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"7":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"8":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"10":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"11":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"12":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"13":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"14":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"15":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"16":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"17":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"18":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"19":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"20":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"21":[["Quit                                                                             ",{}]],"22":[["(gdb) b *0x08048a09                                                              ",{}]],"23":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"24":[["(gdb) x/i 0x08048a09                                                             ",{}]],"25":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"26":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"27":[["The program being debugged has been started already.                             ",{}]],"28":[["Start it from the beginning? (y or n) y                                          ",{}]],"29":[["                                                                                 ",{}]],"30":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"31":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"32":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"33":[["                                                                                 ",{}]],"34":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"35":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.000194,{"lines":{"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.677306,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.04831,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.13152,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.133158,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.159288,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.129544,{"lines":{"0":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"1":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"2":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"3":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"4":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"5":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"6":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"7":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"9":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"10":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"11":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"12":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"13":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"14":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"15":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"16":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"17":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"18":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"19":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"20":[["Quit                                                                             ",{}]],"21":[["(gdb) b *0x08048a09                                                              ",{}]],"22":[["Breakpoint 2 at 0x8048a09                                                        ",{}]],"23":[["(gdb) x/i 0x08048a09                                                             ",{}]],"24":[["   0x8048a09 <crackyou+225>:    call   0x80487da <first_check>                   ",{}]],"25":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"26":[["The program being debugged has been started already.                             ",{}]],"27":[["Start it from the beginning? (y or n) y                                          ",{}]],"28":[["                                                                                 ",{}]],"29":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"30":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"31":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"32":[["                                                                                 ",{}]],"33":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"34":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"35":[["(gdb) disas                                                                      ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.002545,{"lines":{"0":[["(gdb) r AAAAAAAAAA                                                               ",{}]],"1":[["The program being debugged has been started already.                             ",{}]],"2":[["Start it from the beginning? (y or n) y                                          ",{}]],"3":[["                                                                                 ",{}]],"4":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"7":[["                                                                                 ",{}]],"8":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"9":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"10":[["(gdb) disas                                                                      ",{}]],"11":[["Dump of assembler code for function main:                                        ",{}]],"12":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"13":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"14":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"15":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"16":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"17":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"18":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"19":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"20":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"21":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"22":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"23":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"24":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"25":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"26":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"27":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"28":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"29":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"30":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"31":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"32":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"33":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"34":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[4.392046,{"lines":{"36":[["(gdb) c                                                                          ",{}]]},"cursor":{"x":7}}],[0.442151,{"lines":{"0":[["Start it from the beginning? (y or n) y                                          ",{}]],"1":[["                                                                                 ",{}]],"2":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"3":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"4":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"5":[["                                                                                 ",{}]],"6":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"7":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"8":[["(gdb) disas                                                                      ",{}]],"9":[["Dump of assembler code for function main:                                        ",{}]],"10":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"11":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"12":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"13":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"14":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"15":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"16":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"17":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"18":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"19":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"20":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"21":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"23":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"24":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"25":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"26":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"27":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"28":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"29":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"30":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"31":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"32":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) c                                                                          ",{}]],"35":[["Continuing.                                                                      ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.048205,{"lines":{"0":[["                                                                                 ",{}]],"1":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"2":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"3":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"4":[["                                                                                 ",{}]],"5":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"6":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"7":[["(gdb) disas                                                                      ",{}]],"8":[["Dump of assembler code for function main:                                        ",{}]],"9":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"10":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"11":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"12":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"13":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"14":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"15":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"16":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"17":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"18":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"19":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"20":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"22":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"23":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"24":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"25":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"26":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"27":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"28":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"29":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"30":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"31":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) c                                                                          ",{}]],"34":[["Continuing.                                                                      ",{}]],"35":[["                                                                                 ",{}]]}}],[0.000619,{"lines":{"0":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAA                            ",{}]],"1":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"2":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"3":[["                                                                                 ",{}]],"4":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"5":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"6":[["(gdb) disas                                                                      ",{}]],"7":[["Dump of assembler code for function main:                                        ",{}]],"8":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"9":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"10":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"11":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"12":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"13":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"14":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"15":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"16":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"18":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"19":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"20":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"21":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"22":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"23":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"24":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"25":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"26":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"27":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"28":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"29":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"30":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) c                                                                          ",{}]],"33":[["Continuing.                                                                      ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.628656,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.10175,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.133787,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.189457,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.247068,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.242587,{"lines":{"0":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"1":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"2":[["                                                                                 ",{}]],"3":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"4":[["(gdb) # ok, I started the program using a 10 chars long password                 ",{}]],"5":[["(gdb) disas                                                                      ",{}]],"6":[["Dump of assembler code for function main:                                        ",{}]],"7":[["   0x08048aa7 <+0>:     push   ebp                                               ",{}]],"8":[["   0x08048aa8 <+1>:     mov    ebp,esp                                           ",{}]],"9":[["=> 0x08048aaa <+3>:     and    esp,0xfffffff0                                    ",{}]],"10":[["   0x08048aad <+6>:     sub    esp,0x20                                          ",{}]],"11":[["   0x08048ab0 <+9>:     cmp    DWORD PTR [ebp+0x8],0x2                           ",{}]],"12":[["   0x08048ab4 <+13>:    je     0x8048ac2 <main+27>                               ",{}]],"13":[["   0x08048ab6 <+15>:    mov    DWORD PTR [esp],0x8048fbd                         ",{}]],"14":[["   0x08048abd <+22>:    call   0x80486ad <die>                                   ",{}]],"15":[["   0x08048ac2 <+27>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"16":[["   0x08048ac5 <+30>:    add    eax,0x4                                           ",{}]],"17":[["   0x08048ac8 <+33>:    mov    eax,DWORD PTR [eax]                               ",{}]],"18":[["   0x08048aca <+35>:    mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048acd <+38>:    call   0x8048928 <crackyou>                              ",{}]],"20":[["   0x08048ad2 <+43>:    mov    DWORD PTR [esp+0x1c],eax                          ",{}]],"21":[["   0x08048ad6 <+47>:    cmp    DWORD PTR [esp+0x1c],0x0                          ",{}]],"22":[["   0x08048adb <+52>:    je     0x8048ae4 <main+61>                               ",{}]],"23":[["   0x08048add <+54>:    call   0x80486db <celebrate>                             ",{}]],"24":[["   0x08048ae2 <+59>:    jmp    0x8048af0 <main+73>                               ",{}]],"25":[["   0x08048ae4 <+61>:    mov    DWORD PTR [esp],0x8048fd5                         ",{}]],"26":[["   0x08048aeb <+68>:    call   0x80486ad <die>                                   ",{}]],"27":[["   0x08048af0 <+73>:    mov    eax,0x0                                           ",{}]],"28":[["   0x08048af5 <+78>:    leave                                                    ",{}]],"29":[["   0x08048af6 <+79>:    ret                                                      ",{}]],"30":[["End of assembler dump.                                                           ",{}]],"31":[["(gdb) c                                                                          ",{}]],"32":[["Continuing.                                                                      ",{}]],"33":[["                                                                                 ",{}]],"34":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"35":[["(gdb) disas                                                                      ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.004292999999999999,{"lines":{"0":[["Dump of assembler code for function crackyou:                                    ",{}]],"1":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"2":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"4":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"5":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"6":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"8":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"9":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"10":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"11":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"12":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"13":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"14":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"15":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"16":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"17":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"18":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"19":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"20":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"21":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"22":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"23":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"24":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"25":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"26":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"27":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"28":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"29":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"30":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"31":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"32":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"33":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"34":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"35":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.394165,{"lines":{"0":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"1":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"2":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"3":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"4":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"5":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"6":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"7":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"8":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"9":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"10":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"11":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"12":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"13":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"14":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"15":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"16":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"17":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"18":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"19":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"20":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"21":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"22":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"23":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"24":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"25":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"26":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"27":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"28":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"29":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"30":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"31":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"32":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"33":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"34":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"35":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.003947999999999999,{"lines":{"0":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"1":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"2":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"3":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"4":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"5":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"6":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"7":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"9":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"10":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"15":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"18":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"19":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"20":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"21":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"24":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"26":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"27":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"28":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"29":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"30":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"31":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"32":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"33":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"34":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"35":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[6.103744,{"lines":{"36":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]]},"cursor":{"x":55}}],[0.122037,{"lines":{"0":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"1":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"2":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"3":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"4":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"5":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"6":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"8":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"9":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"10":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"11":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"13":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"14":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"15":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"17":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"18":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"19":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"20":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"21":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"22":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"23":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"24":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"25":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"26":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"27":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"28":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"29":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"30":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"31":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"32":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"33":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"34":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"35":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.0008229999999999999,{"lines":{"0":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"1":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"2":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"3":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"4":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"5":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"7":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"8":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"9":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"10":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"12":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"13":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"16":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"17":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"18":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"19":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"20":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"21":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"22":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"24":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"25":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"26":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"27":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"28":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"29":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"30":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"31":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"32":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"33":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"34":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"35":[["Quit                                                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.165832,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.126757,{"cursor":{"x":8}}],[0.15779,{"lines":{"36":[["(gdb) # l                                                                        ",{}]]},"cursor":{"x":9}}],[0.08448899999999999,{"lines":{"36":[["(gdb) # le                                                                       ",{}]]},"cursor":{"x":10}}],[0.198336,{"lines":{"36":[["(gdb) # let                                                                      ",{}]]},"cursor":{"x":11}}],[0.632838,{"lines":{"36":[["(gdb) # let'                                                                     ",{}]]},"cursor":{"x":12}}],[0.171587,{"lines":{"36":[["(gdb) # let's                                                                    ",{}]]},"cursor":{"x":13}}],[0.026464,{"cursor":{"x":14}}],[0.205025,{"lines":{"36":[["(gdb) # let's p                                                                  ",{}]]},"cursor":{"x":15}}],[0.139969,{"lines":{"36":[["(gdb) # let's pr                                                                 ",{}]]},"cursor":{"x":16}}],[0.095375,{"lines":{"36":[["(gdb) # let's pri                                                                ",{}]]},"cursor":{"x":17}}],[0.070547,{"lines":{"36":[["(gdb) # let's prin                                                               ",{}]]},"cursor":{"x":18}}],[0.053166,{"lines":{"36":[["(gdb) # let's print                                                              ",{}]]},"cursor":{"x":19}}],[0.072863,{"cursor":{"x":20}}],[0.251079,{"lines":{"36":[["(gdb) # let's print t                                                            ",{}]]},"cursor":{"x":21}}],[0.118667,{"lines":{"36":[["(gdb) # let's print th                                                           ",{}]]},"cursor":{"x":22}}],[0.157251,{"lines":{"36":[["(gdb) # let's print the                                                          ",{}]]},"cursor":{"x":23}}],[0.058228,{"cursor":{"x":24}}],[1.044188,{"lines":{"36":[["(gdb) # let's print the f                                                        ",{}]]},"cursor":{"x":25}}],[0.110295,{"lines":{"36":[["(gdb) # let's print the fu                                                       ",{}]]},"cursor":{"x":26}}],[0.062927,{"lines":{"36":[["(gdb) # let's print the fun                                                      ",{}]]},"cursor":{"x":27}}],[0.119858,{"lines":{"36":[["(gdb) # let's print the func                                                     ",{}]]},"cursor":{"x":28}}],[0.179343,{"lines":{"36":[["(gdb) # let's print the funct                                                    ",{}]]},"cursor":{"x":29}}],[0.06395099999999999,{"lines":{"36":[["(gdb) # let's print the functi                                                   ",{}]]},"cursor":{"x":30}}],[0.150122,{"lines":{"36":[["(gdb) # let's print the functio                                                  ",{}]]},"cursor":{"x":31}}],[0.102217,{"lines":{"36":[["(gdb) # let's print the function                                                 ",{}]]},"cursor":{"x":32}}],[0.111784,{"cursor":{"x":33}}],[0.241612,{"lines":{"36":[["(gdb) # let's print the function a                                               ",{}]]},"cursor":{"x":34}}],[0.240023,{"lines":{"36":[["(gdb) # let's print the function ar                                              ",{}]]},"cursor":{"x":35}}],[0.174339,{"lines":{"36":[["(gdb) # let's print the function arg                                             ",{}]]},"cursor":{"x":36}}],[0.142554,{"lines":{"36":[["(gdb) # let's print the function argu                                            ",{}]]},"cursor":{"x":37}}],[0.19831,{"lines":{"36":[["(gdb) # let's print the function argum                                           ",{}]]},"cursor":{"x":38}}],[0.087493,{"lines":{"36":[["(gdb) # let's print the function argume                                          ",{}]]},"cursor":{"x":39}}],[0.078013,{"lines":{"36":[["(gdb) # let's print the function argumen                                         ",{}]]},"cursor":{"x":40}}],[0.124834,{"lines":{"36":[["(gdb) # let's print the function argument                                        ",{}]]},"cursor":{"x":41}}],[0.285287,{"lines":{"36":[["(gdb) # let's print the function arguments                                       ",{}]]},"cursor":{"x":42}}],[0.442057,{"lines":{"0":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"1":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"2":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"3":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"4":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"6":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"7":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"8":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"9":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"11":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"12":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"13":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"14":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"15":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"16":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"17":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"18":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"19":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"20":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"21":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"22":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"23":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"24":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"25":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"26":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"27":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"28":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"29":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"30":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"31":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"32":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"33":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"34":[["Quit                                                                             ",{}]],"35":[["(gdb) # let's print the function arguments                                       ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.000361,{"lines":{"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.397456,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.288383,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[1.589008,{"lines":{"36":[["(gdb) x/w                                                                        ",{}]]},"cursor":{"x":9}}],[0.238827,{"lines":{"36":[["(gdb) x/wx                                                                       ",{}]]},"cursor":{"x":10}}],[0.118354,{"cursor":{"x":11}}],[0.760541,{"lines":{"36":[["(gdb) x/wx $                                                                     ",{}]]},"cursor":{"x":12}}],[0.399756,{"lines":{"36":[["(gdb) x/wx $esp                                                                  ",{}]]},"cursor":{"x":15}}],[1.161038,{"lines":{"0":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"1":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"2":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"4":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"5":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"6":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"7":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"9":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"10":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"11":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"13":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"14":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"15":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"16":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"17":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"18":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"19":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"20":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"21":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"22":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"23":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"24":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"25":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"26":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"27":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"28":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"29":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"30":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"31":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"32":[["Quit                                                                             ",{}]],"33":[["(gdb) # let's print the function arguments                                       ",{}]],"34":[["(gdb) x/wx $esp                                                                  ",{}]],"35":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.891238,{"lines":{"36":[["(gdb) x/wx $esp                                                                  ",{}]]},"cursor":{"x":15}}],[3.669465,{"lines":{"36":[["(gdb) x/wx $esp+                                                                 ",{}]]},"cursor":{"x":16}}],[0.895952,{"lines":{"36":[["(gdb) x/wx $esp+0                                                                ",{}]]},"cursor":{"x":17}}],[0.499718,{"lines":{"36":[["(gdb) x/wx $esp+0x                                                               ",{}]]},"cursor":{"x":18}}],[1.849802,{"lines":{"36":[["(gdb) x/wx $esp+0x4                                                              ",{}]]},"cursor":{"x":19}}],[0.554,{"lines":{"0":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"2":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"3":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"4":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"5":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"7":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"8":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"9":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"11":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"12":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"13":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"14":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"15":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"16":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"17":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"18":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"19":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"20":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"21":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"22":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"23":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"24":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"25":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"26":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"27":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"28":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"29":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"30":[["Quit                                                                             ",{}]],"31":[["(gdb) # let's print the function arguments                                       ",{}]],"32":[["(gdb) x/wx $esp                                                                  ",{}]],"33":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"34":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"35":[["0xbffff3e4:     0x00000006                                                       ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.798533,{"lines":{"36":[["(gdb) x/wx $esp+0x4                                                              ",{}]]},"cursor":{"x":19}}],[0.342924,{"cursor":{"x":6}}],[0.204462,{"cursor":{"x":7}}],[0.158087,{"cursor":{"x":8}}],[0.768296,{"lines":{"36":[["(gdb) x/x $esp+0x4                                                               ",{}]]}}],[0.157672,{"lines":{"36":[["(gdb) x/ $esp+0x4                                                                ",{}]]}}],[0.433576,{"lines":{"36":[["(gdb) x/d $esp+0x4                                                               ",{}]]},"cursor":{"x":9}}],[0.301172,{"cursor":{"x":18}}],[0.162484,{"lines":{"36":[["(gdb) x/d $esp+0x                                                                ",{}]]},"cursor":{"x":17}}],[0.190283,{"lines":{"36":[["(gdb) x/d $esp+0                                                                 ",{}]]},"cursor":{"x":16}}],[0.174745,{"lines":{"36":[["(gdb) x/d $esp+                                                                  ",{}]]},"cursor":{"x":15}}],[0.17355,{"lines":{"36":[["(gdb) x/d $esp                                                                   ",{}]]},"cursor":{"x":14}}],[1.409251,{"lines":{"0":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"1":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"2":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"3":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"6":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"9":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"10":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"11":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"12":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"13":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"14":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"15":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"17":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"18":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"19":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"20":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"21":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"23":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"24":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"25":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"26":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"28":[["Quit                                                                             ",{}]],"29":[["(gdb) # let's print the function arguments                                       ",{}]],"30":[["(gdb) x/wx $esp                                                                  ",{}]],"31":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"32":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"33":[["0xbffff3e4:     0x00000006                                                       ",{}]],"34":[["(gdb) x/d $esp                                                                   ",{}]],"35":[["0xbffff3e0:     10                                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.848548,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.142367,{"cursor":{"x":8}}],[1.500505,{"lines":{"36":[["(gdb) # 1                                                                        ",{}]]},"cursor":{"x":9}}],[0.114258,{"lines":{"36":[["(gdb) # 10                                                                       ",{}]]},"cursor":{"x":10}}],[0.094635,{"cursor":{"x":11}}],[0.211975,{"lines":{"36":[["(gdb) # 10 i                                                                     ",{}]]},"cursor":{"x":12}}],[0.102553,{"lines":{"36":[["(gdb) # 10 is                                                                    ",{}]]},"cursor":{"x":13}}],[0.080134,{"cursor":{"x":14}}],[0.355215,{"lines":{"36":[["(gdb) # 10 is t                                                                  ",{}]]},"cursor":{"x":15}}],[0.10249,{"lines":{"36":[["(gdb) # 10 is th                                                                 ",{}]]},"cursor":{"x":16}}],[0.141889,{"lines":{"36":[["(gdb) # 10 is the                                                                ",{}]]},"cursor":{"x":17}}],[0.041288,{"cursor":{"x":18}}],[0.164342,{"lines":{"36":[["(gdb) # 10 is the l                                                              ",{}]]},"cursor":{"x":19}}],[0.164529,{"lines":{"36":[["(gdb) # 10 is the le                                                             ",{}]]},"cursor":{"x":20}}],[0.41612,{"lines":{"36":[["(gdb) # 10 is the len                                                            ",{}]]},"cursor":{"x":21}}],[0.221678,{"lines":{"36":[["(gdb) # 10 is the leng                                                           ",{}]]},"cursor":{"x":22}}],[0.182042,{"lines":{"36":[["(gdb) # 10 is the lengt                                                          ",{}]]},"cursor":{"x":23}}],[0.327145,{"lines":{"36":[["(gdb) # 10 is the length                                                         ",{}]]},"cursor":{"x":24}}],[0.272127,{"cursor":{"x":25}}],[0.550432,{"lines":{"36":[["(gdb) # 10 is the length o                                                       ",{}]]},"cursor":{"x":26}}],[0.148273,{"lines":{"36":[["(gdb) # 10 is the length of                                                      ",{}]]},"cursor":{"x":27}}],[0.07331699999999999,{"cursor":{"x":28}}],[0.934257,{"lines":{"36":[["(gdb) # 10 is the length of o                                                    ",{}]]},"cursor":{"x":29}}],[0.157731,{"lines":{"36":[["(gdb) # 10 is the length of ou                                                   ",{}]]},"cursor":{"x":30}}],[0.758356,{"lines":{"36":[["(gdb) # 10 is the length of our                                                  ",{}]]},"cursor":{"x":31}}],[0.145772,{"cursor":{"x":32}}],[0.365017,{"lines":{"36":[["(gdb) # 10 is the length of our p                                                ",{}]]},"cursor":{"x":33}}],[0.08986,{"lines":{"36":[["(gdb) # 10 is the length of our pa                                               ",{}]]},"cursor":{"x":34}}],[0.311237,{"lines":{"36":[["(gdb) # 10 is the length of our pas                                              ",{}]]},"cursor":{"x":35}}],[0.142438,{"lines":{"36":[["(gdb) # 10 is the length of our pass                                             ",{}]]},"cursor":{"x":36}}],[0.18243,{"lines":{"36":[["(gdb) # 10 is the length of our passw                                            ",{}]]},"cursor":{"x":37}}],[0.136443,{"lines":{"36":[["(gdb) # 10 is the length of our passwo                                           ",{}]]},"cursor":{"x":38}}],[0.124595,{"lines":{"36":[["(gdb) # 10 is the length of our passwor                                          ",{}]]},"cursor":{"x":39}}],[0.213892,{"lines":{"36":[["(gdb) # 10 is the length of our password                                         ",{}]]},"cursor":{"x":40}}],[1.811087,{"lines":{"36":[["(gdb) # 10 is the length of our password.                                        ",{}]]},"cursor":{"x":41}}],[0.159243,{"cursor":{"x":42}}],[0.538551,{"lines":{"36":[["(gdb) # 10 is the length of our password. W                                      ",{}]]},"cursor":{"x":43}}],[0.245347,{"lines":{"36":[["(gdb) # 10 is the length of our password. We                                     ",{}]]},"cursor":{"x":44}}],[0.090355,{"cursor":{"x":45}}],[0.210381,{"lines":{"36":[["(gdb) # 10 is the length of our password. We c                                   ",{}]]},"cursor":{"x":46}}],[0.140932,{"lines":{"36":[["(gdb) # 10 is the length of our password. We ca                                  ",{}]]},"cursor":{"x":47}}],[0.120394,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can                                 ",{}]]},"cursor":{"x":48}}],[0.088412,{"cursor":{"x":49}}],[0.323481,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can t                               ",{}]]},"cursor":{"x":50}}],[0.182752,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can tr                              ",{}]]},"cursor":{"x":51}}],[0.182294,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try                             ",{}]]},"cursor":{"x":52}}],[0.119108,{"cursor":{"x":53}}],[1.142843,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try t                           ",{}]]},"cursor":{"x":54}}],[0.111512,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to                          ",{}]]},"cursor":{"x":55}}],[0.071199,{"cursor":{"x":56}}],[0.8125,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to e                        ",{}]]},"cursor":{"x":57}}],[0.197906,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to ex                       ",{}]]},"cursor":{"x":58}}],[0.176327,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to exe                      ",{}]]},"cursor":{"x":59}}],[0.180688,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to exec                     ",{}]]},"cursor":{"x":60}}],[0.118905,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execu                    ",{}]]},"cursor":{"x":61}}],[0.157896,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execut                   ",{}]]},"cursor":{"x":62}}],[0.198114,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute                  ",{}]]},"cursor":{"x":63}}],[0.073903,{"cursor":{"x":64}}],[0.435406,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute t                ",{}]]},"cursor":{"x":65}}],[0.110504,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute th               ",{}]]},"cursor":{"x":66}}],[0.14883,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the              ",{}]]},"cursor":{"x":67}}],[0.050365,{"cursor":{"x":68}}],[0.148954,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the p            ",{}]]},"cursor":{"x":69}}],[0.079221,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the pr           ",{}]]},"cursor":{"x":70}}],[0.108732,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the pro          ",{}]]},"cursor":{"x":71}}],[0.07726,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the prog         ",{}]]},"cursor":{"x":72}}],[0.173109,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the progr        ",{}]]},"cursor":{"x":73}}],[0.140757,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the progra       ",{}]]},"cursor":{"x":74}}],[0.144253,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the program      ",{}]]},"cursor":{"x":75}}],[0.08949600000000001,{"cursor":{"x":76}}],[0.129186,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the program a    ",{}]]},"cursor":{"x":77}}],[0.263603,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the program ag   ",{}]]},"cursor":{"x":78}}],[0.188634,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the program aga  ",{}]]},"cursor":{"x":79}}],[0.209033,{"lines":{"36":[["(gdb) # 10 is the length of our password. We can try to execute the program agai ",{}]]},"cursor":{"x":80}}],[0.07872800000000001,{"lines":{"0":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"1":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"2":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"4":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"5":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"6":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"8":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"9":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"10":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"11":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"12":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"13":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"14":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"16":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"17":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"18":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"19":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"20":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"21":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"22":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"23":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"24":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"25":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"26":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"27":[["Quit                                                                             ",{}]],"28":[["(gdb) # let's print the function arguments                                       ",{}]],"29":[["(gdb) x/wx $esp                                                                  ",{}]],"30":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"31":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"32":[["0xbffff3e4:     0x00000006                                                       ",{}]],"33":[["(gdb) x/d $esp                                                                   ",{}]],"34":[["0xbffff3e0:     10                                                               ",{}]],"35":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.143422,{"cursor":{"x":1}}],[0.619668,{"lines":{"36":[[" w                                                                               ",{}]]},"cursor":{"x":2}}],[0.087897,{"lines":{"36":[[" wi                                                                              ",{}]]},"cursor":{"x":3}}],[0.165206,{"lines":{"36":[[" wit                                                                             ",{}]]},"cursor":{"x":4}}],[0.09467,{"lines":{"36":[[" with                                                                            ",{}]]},"cursor":{"x":5}}],[0.073434,{"cursor":{"x":6}}],[0.393323,{"lines":{"36":[[" with a                                                                          ",{}]]},"cursor":{"x":7}}],[0.09110799999999999,{"cursor":{"x":8}}],[0.563038,{"lines":{"36":[[" with a d                                                                        ",{}]]},"cursor":{"x":9}}],[0.103418,{"lines":{"36":[[" with a di                                                                       ",{}]]},"cursor":{"x":10}}],[0.149179,{"lines":{"36":[[" with a dif                                                                      ",{}]]},"cursor":{"x":11}}],[0.150772,{"lines":{"36":[[" with a diff                                                                     ",{}]]},"cursor":{"x":12}}],[0.189239,{"lines":{"36":[[" with a diffe                                                                    ",{}]]},"cursor":{"x":13}}],[0.14265,{"lines":{"36":[[" with a differ                                                                   ",{}]]},"cursor":{"x":14}}],[0.141725,{"lines":{"36":[[" with a differe                                                                  ",{}]]},"cursor":{"x":15}}],[0.087531,{"lines":{"36":[[" with a differen                                                                 ",{}]]},"cursor":{"x":16}}],[0.125557,{"lines":{"36":[[" with a different                                                                ",{}]]},"cursor":{"x":17}}],[0.073527,{"cursor":{"x":18}}],[0.124743,{"lines":{"36":[[" with a different p                                                              ",{}]]},"cursor":{"x":19}}],[0.100947,{"lines":{"36":[[" with a different pa                                                             ",{}]]},"cursor":{"x":20}}],[0.220927,{"lines":{"36":[[" with a different pas                                                            ",{}]]},"cursor":{"x":21}}],[0.142107,{"lines":{"36":[[" with a different pass                                                           ",{}]]},"cursor":{"x":22}}],[0.165895,{"lines":{"36":[[" with a different passw                                                          ",{}]]},"cursor":{"x":23}}],[0.129092,{"lines":{"36":[[" with a different passwo                                                         ",{}]]},"cursor":{"x":24}}],[0.103134,{"lines":{"36":[[" with a different passwor                                                        ",{}]]},"cursor":{"x":25}}],[0.171161,{"lines":{"36":[[" with a different password                                                       ",{}]]},"cursor":{"x":26}}],[0.06572500000000001,{"cursor":{"x":27}}],[0.219305,{"lines":{"36":[[" with a different password t                                                     ",{}]]},"cursor":{"x":28}}],[0.143737,{"lines":{"36":[[" with a different password to                                                    ",{}]]},"cursor":{"x":29}}],[0.167217,{"cursor":{"x":30}}],[0.355254,{"lines":{"36":[[" with a different password to s                                                  ",{}]]},"cursor":{"x":31}}],[0.262892,{"lines":{"36":[[" with a different password to se                                                 ",{}]]},"cursor":{"x":32}}],[0.141993,{"lines":{"36":[[" with a different password to see                                                ",{}]]},"cursor":{"x":33}}],[0.097999,{"cursor":{"x":34}}],[0.23605,{"lines":{"36":[[" with a different password to see i                                              ",{}]]},"cursor":{"x":35}}],[0.149237,{"lines":{"36":[[" with a different password to see if                                             ",{}]]},"cursor":{"x":36}}],[0.06567099999999999,{"cursor":{"x":37}}],[0.379643,{"lines":{"36":[[" with a different password to see if t                                           ",{}]]},"cursor":{"x":38}}],[0.358559,{"lines":{"36":[[" with a different password to see if th                                          ",{}]]},"cursor":{"x":39}}],[0.182974,{"lines":{"36":[[" with a different password to see if thi                                         ",{}]]},"cursor":{"x":40}}],[0.115892,{"lines":{"36":[[" with a different password to see if this                                        ",{}]]},"cursor":{"x":41}}],[0.09821100000000001,{"cursor":{"x":42}}],[0.267357,{"lines":{"36":[[" with a different password to see if this v                                      ",{}]]},"cursor":{"x":43}}],[0.189148,{"lines":{"36":[[" with a different password to see if this va                                     ",{}]]},"cursor":{"x":44}}],[0.297391,{"lines":{"36":[[" with a different password to see if this val                                    ",{}]]},"cursor":{"x":45}}],[0.136196,{"lines":{"36":[[" with a different password to see if this valu                                   ",{}]]},"cursor":{"x":46}}],[0.298436,{"lines":{"36":[[" with a different password to see if this value                                  ",{}]]},"cursor":{"x":47}}],[0.530154,{"cursor":{"x":48}}],[1.615128,{"lines":{"36":[[" with a different password to see if this value i                                ",{}]]},"cursor":{"x":49}}],[0.776062,{"lines":{"36":[[" with a different password to see if this value                                  ",{}]]},"cursor":{"x":48}}],[0.958719,{"lines":{"36":[[" with a different password to see if this value i                                ",{}]]},"cursor":{"x":49}}],[0.086733,{"lines":{"36":[[" with a different password to see if this value is                               ",{}]]},"cursor":{"x":50}}],[0.079611,{"cursor":{"x":51}}],[0.290542,{"lines":{"36":[[" with a different password to see if this value is d                             ",{}]]},"cursor":{"x":52}}],[0.208276,{"lines":{"36":[[" with a different password to see if this value is di                            ",{}]]},"cursor":{"x":53}}],[0.189074,{"lines":{"36":[[" with a different password to see if this value is dif                           ",{}]]},"cursor":{"x":54}}],[0.157987,{"lines":{"36":[[" with a different password to see if this value is diff                          ",{}]]},"cursor":{"x":55}}],[0.182256,{"lines":{"36":[[" with a different password to see if this value is diffe                         ",{}]]},"cursor":{"x":56}}],[0.142208,{"lines":{"36":[[" with a different password to see if this value is differ                        ",{}]]},"cursor":{"x":57}}],[0.158186,{"lines":{"36":[[" with a different password to see if this value is differe                       ",{}]]},"cursor":{"x":58}}],[0.087032,{"lines":{"36":[[" with a different password to see if this value is differen                      ",{}]]},"cursor":{"x":59}}],[0.165679,{"lines":{"36":[[" with a different password to see if this value is different                     ",{}]]},"cursor":{"x":60}}],[0.12654,{"cursor":{"x":61}}],[1.481847,{"lines":{"36":[[" with a different password to see if this value is different o                   ",{}]]},"cursor":{"x":62}}],[0.077071,{"lines":{"36":[[" with a different password to see if this value is different or                  ",{}]]},"cursor":{"x":63}}],[0.073084,{"cursor":{"x":64}}],[0.114567,{"lines":{"36":[[" with a different password to see if this value is different or n                ",{}]]},"cursor":{"x":65}}],[0.064926,{"lines":{"36":[[" with a different password to see if this value is different or no               ",{}]]},"cursor":{"x":66}}],[0.110203,{"lines":{"36":[[" with a different password to see if this value is different or not              ",{}]]},"cursor":{"x":67}}],[0.294241,{"lines":{"0":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"1":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"3":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"4":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"5":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"7":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"8":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"9":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"10":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"11":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"12":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"13":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"14":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"15":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"16":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"17":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"18":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"19":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"20":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"21":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"22":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"23":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"24":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"25":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"26":[["Quit                                                                             ",{}]],"27":[["(gdb) # let's print the function arguments                                       ",{}]],"28":[["(gdb) x/wx $esp                                                                  ",{}]],"29":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"30":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"31":[["0xbffff3e4:     0x00000006                                                       ",{}]],"32":[["(gdb) x/d $esp                                                                   ",{}]],"33":[["0xbffff3e0:     10                                                               ",{}]],"34":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"35":[[" with a different password to see if this value is different or not              ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.060972,{"lines":{"36":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.121586,{"cursor":{"x":8}}],[1.049085,{"lines":{"36":[["(gdb) r A                                                                        ",{}]]},"cursor":{"x":9}}],[0.254046,{"lines":{"36":[["(gdb) r AA                                                                       ",{}]]},"cursor":{"x":10}}],[0.286585,{"lines":{"36":[["(gdb) r AAA                                                                      ",{}]]},"cursor":{"x":11}}],[0.302428,{"lines":{"36":[["(gdb) r AAAA                                                                     ",{}]]},"cursor":{"x":12}}],[0.278489,{"lines":{"36":[["(gdb) r AAAAA                                                                    ",{}]]},"cursor":{"x":13}}],[2.129658,{"lines":{"36":[["(gdb) r AAAAAAAAAA                                                               ",{}]]},"cursor":{"x":18}}],[0.436608,{"lines":{"36":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]]},"cursor":{"x":23}}],[0.632809,{"lines":{"0":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"1":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"2":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"3":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"6":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"7":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"8":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"9":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"10":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"11":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"13":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"14":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"15":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"16":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"17":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"18":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"19":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"20":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"21":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"22":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"23":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"24":[["Quit                                                                             ",{}]],"25":[["(gdb) # let's print the function arguments                                       ",{}]],"26":[["(gdb) x/wx $esp                                                                  ",{}]],"27":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"28":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"29":[["0xbffff3e4:     0x00000006                                                       ",{}]],"30":[["(gdb) x/d $esp                                                                   ",{}]],"31":[["0xbffff3e0:     10                                                               ",{}]],"32":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"33":[[" with a different password to see if this value is different or not              ",{}]],"34":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"35":[["The program being debugged has been started already.                             ",{}]],"36":[["Start it from the beginning? (y or n)                                            ",{}]]},"cursor":{"x":38}}],[1.069669,{"lines":{"36":[["Start it from the beginning? (y or n) Y                                          ",{}]]},"cursor":{"x":39}}],[0.136397,{"lines":{"0":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"1":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"2":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"4":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"5":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"6":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"7":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"8":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"9":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"10":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"12":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"13":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"14":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"15":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"16":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"17":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"18":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"19":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"20":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"21":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"22":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"23":[["Quit                                                                             ",{}]],"24":[["(gdb) # let's print the function arguments                                       ",{}]],"25":[["(gdb) x/wx $esp                                                                  ",{}]],"26":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"27":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"28":[["0xbffff3e4:     0x00000006                                                       ",{}]],"29":[["(gdb) x/d $esp                                                                   ",{}]],"30":[["0xbffff3e0:     10                                                               ",{}]],"31":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"32":[[" with a different password to see if this value is different or not              ",{}]],"33":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"34":[["The program being debugged has been started already.                             ",{}]],"35":[["Start it from the beginning? (y or n) Y                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.008182999999999999,{"lines":{"0":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"1":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"2":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"3":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"4":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"5":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"6":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"8":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"9":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"10":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"11":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"12":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"13":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"14":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"15":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"17":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"18":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"19":[["Quit                                                                             ",{}]],"20":[["(gdb) # let's print the function arguments                                       ",{}]],"21":[["(gdb) x/wx $esp                                                                  ",{}]],"22":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"23":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"24":[["0xbffff3e4:     0x00000006                                                       ",{}]],"25":[["(gdb) x/d $esp                                                                   ",{}]],"26":[["0xbffff3e0:     10                                                               ",{}]],"27":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"28":[[" with a different password to see if this value is different or not              ",{}]],"29":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"30":[["The program being debugged has been started already.                             ",{}]],"31":[["Start it from the beginning? (y or n) Y                                          ",{}]],"32":[["                                                                                 ",{}]],"33":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"34":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"35":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]]}}],[0.028295,{"lines":{"0":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"1":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"2":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"3":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"4":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"5":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"7":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"8":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"9":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"10":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"11":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"12":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"13":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"14":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"15":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"16":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"17":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"18":[["Quit                                                                             ",{}]],"19":[["(gdb) # let's print the function arguments                                       ",{}]],"20":[["(gdb) x/wx $esp                                                                  ",{}]],"21":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"22":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"23":[["0xbffff3e4:     0x00000006                                                       ",{}]],"24":[["(gdb) x/d $esp                                                                   ",{}]],"25":[["0xbffff3e0:     10                                                               ",{}]],"26":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"27":[[" with a different password to see if this value is different or not              ",{}]],"28":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"29":[["The program being debugged has been started already.                             ",{}]],"30":[["Start it from the beginning? (y or n) Y                                          ",{}]],"31":[["                                                                                 ",{}]],"32":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"33":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"34":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"35":[["                                                                                 ",{}]]}}],[0.00058,{"lines":{"0":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"1":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"2":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"3":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"4":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"6":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"7":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"8":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"9":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"10":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"11":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"12":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"13":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"15":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"17":[["Quit                                                                             ",{}]],"18":[["(gdb) # let's print the function arguments                                       ",{}]],"19":[["(gdb) x/wx $esp                                                                  ",{}]],"20":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"21":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"22":[["0xbffff3e4:     0x00000006                                                       ",{}]],"23":[["(gdb) x/d $esp                                                                   ",{}]],"24":[["0xbffff3e0:     10                                                               ",{}]],"25":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"26":[[" with a different password to see if this value is different or not              ",{}]],"27":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"28":[["The program being debugged has been started already.                             ",{}]],"29":[["Start it from the beginning? (y or n) Y                                          ",{}]],"30":[["                                                                                 ",{}]],"31":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"32":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"33":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.895579,{"lines":{"36":[["(gdb) C                                                                          ",{}]]},"cursor":{"x":7}}],[0.105162,{"lines":{"0":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"1":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"2":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"4":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"5":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"6":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"7":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"8":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"9":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"10":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"11":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"12":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"13":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"14":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"15":[["Quit                                                                             ",{}]],"16":[["(gdb) # let's print the function arguments                                       ",{}]],"17":[["(gdb) x/wx $esp                                                                  ",{}]],"18":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"19":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"20":[["0xbffff3e4:     0x00000006                                                       ",{}]],"21":[["(gdb) x/d $esp                                                                   ",{}]],"22":[["0xbffff3e0:     10                                                               ",{}]],"23":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"24":[[" with a different password to see if this value is different or not              ",{}]],"25":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"26":[["The program being debugged has been started already.                             ",{}]],"27":[["Start it from the beginning? (y or n) Y                                          ",{}]],"28":[["                                                                                 ",{}]],"29":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"30":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"31":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"32":[["                                                                                 ",{}]],"33":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"34":[["(gdb) C                                                                          ",{}]],"35":[["Continuing.                                                                      ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.012568,{"lines":{"0":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"2":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"3":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"4":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"5":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"6":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"7":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"8":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"9":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"10":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"11":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"12":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"13":[["Quit                                                                             ",{}]],"14":[["(gdb) # let's print the function arguments                                       ",{}]],"15":[["(gdb) x/wx $esp                                                                  ",{}]],"16":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"17":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"18":[["0xbffff3e4:     0x00000006                                                       ",{}]],"19":[["(gdb) x/d $esp                                                                   ",{}]],"20":[["0xbffff3e0:     10                                                               ",{}]],"21":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"22":[[" with a different password to see if this value is different or not              ",{}]],"23":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"24":[["The program being debugged has been started already.                             ",{}]],"25":[["Start it from the beginning? (y or n) Y                                          ",{}]],"26":[["                                                                                 ",{}]],"27":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"28":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"29":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"30":[["                                                                                 ",{}]],"31":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"32":[["(gdb) C                                                                          ",{}]],"33":[["Continuing.                                                                      ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.162471,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.142948,{"cursor":{"x":8}}],[0.196289,{"lines":{"36":[["(gdb) # T                                                                        ",{}]]},"cursor":{"x":9}}],[0.134026,{"lines":{"36":[["(gdb) # TH                                                                       ",{}]]},"cursor":{"x":10}}],[0.048043,{"lines":{"36":[["(gdb) # THI                                                                      ",{}]]},"cursor":{"x":11}}],[0.155182,{"lines":{"36":[["(gdb) # THIS                                                                     ",{}]]},"cursor":{"x":12}}],[0.050543,{"cursor":{"x":13}}],[0.732034,{"cursor":{"x":12}}],[0.142371,{"lines":{"36":[["(gdb) # THI                                                                      ",{}]]},"cursor":{"x":11}}],[0.141941,{"lines":{"36":[["(gdb) # TH                                                                       ",{}]]},"cursor":{"x":10}}],[0.150269,{"lines":{"36":[["(gdb) # T                                                                        ",{}]]},"cursor":{"x":9}}],[0.300095,{"lines":{"36":[["(gdb) # Tt                                                                       ",{}]]},"cursor":{"x":10}}],[0.256639,{"lines":{"36":[["(gdb) # T                                                                        ",{}]]},"cursor":{"x":9}}],[0.110085,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":8}}],[0.172303,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.118588,{"lines":{"36":[["(gdb) # th                                                                       ",{}]]},"cursor":{"x":10}}],[0.0477,{"lines":{"36":[["(gdb) # thi                                                                      ",{}]]},"cursor":{"x":11}}],[0.139421,{"lines":{"36":[["(gdb) # this                                                                     ",{}]]},"cursor":{"x":12}}],[0.066423,{"cursor":{"x":13}}],[0.322692,{"lines":{"36":[["(gdb) # this t                                                                   ",{}]]},"cursor":{"x":14}}],[0.08871999999999999,{"lines":{"36":[["(gdb) # this ti                                                                  ",{}]]},"cursor":{"x":15}}],[0.06869599999999999,{"lines":{"36":[["(gdb) # this tim                                                                 ",{}]]},"cursor":{"x":16}}],[0.156516,{"lines":{"36":[["(gdb) # this time                                                                ",{}]]},"cursor":{"x":17}}],[0.05865,{"cursor":{"x":18}}],[0.218677,{"lines":{"36":[["(gdb) # this time t                                                              ",{}]]},"cursor":{"x":19}}],[0.08605500000000001,{"lines":{"36":[["(gdb) # this time th                                                             ",{}]]},"cursor":{"x":20}}],[0.149588,{"lines":{"36":[["(gdb) # this time the                                                            ",{}]]},"cursor":{"x":21}}],[0.033683,{"cursor":{"x":22}}],[0.143094,{"lines":{"36":[["(gdb) # this time the p                                                          ",{}]]},"cursor":{"x":23}}],[0.091462,{"lines":{"36":[["(gdb) # this time the pa                                                         ",{}]]},"cursor":{"x":24}}],[0.235999,{"lines":{"36":[["(gdb) # this time the pas                                                        ",{}]]},"cursor":{"x":25}}],[0.134293,{"lines":{"36":[["(gdb) # this time the pass                                                       ",{}]]},"cursor":{"x":26}}],[0.165888,{"lines":{"36":[["(gdb) # this time the passw                                                      ",{}]]},"cursor":{"x":27}}],[0.082621,{"lines":{"36":[["(gdb) # this time the passwo                                                     ",{}]]},"cursor":{"x":28}}],[0.138844,{"lines":{"36":[["(gdb) # this time the passwor                                                    ",{}]]},"cursor":{"x":29}}],[0.174207,{"lines":{"36":[["(gdb) # this time the password                                                   ",{}]]},"cursor":{"x":30}}],[0.058049,{"cursor":{"x":31}}],[0.885082,{"lines":{"36":[["(gdb) # this time the password i                                                 ",{}]]},"cursor":{"x":32}}],[0.072074,{"lines":{"36":[["(gdb) # this time the password is                                                ",{}]]},"cursor":{"x":33}}],[0.05429,{"cursor":{"x":34}}],[0.345376,{"lines":{"36":[["(gdb) # this time the password is 1                                              ",{}]]},"cursor":{"x":35}}],[0.304584,{"lines":{"36":[["(gdb) # this time the password is 15                                             ",{}]]},"cursor":{"x":36}}],[0.118212,{"cursor":{"x":37}}],[0.173308,{"lines":{"36":[["(gdb) # this time the password is 15 c                                           ",{}]]},"cursor":{"x":38}}],[0.086616,{"lines":{"36":[["(gdb) # this time the password is 15 ch                                          ",{}]]},"cursor":{"x":39}}],[0.081136,{"lines":{"36":[["(gdb) # this time the password is 15 cha                                         ",{}]]},"cursor":{"x":40}}],[0.195738,{"lines":{"36":[["(gdb) # this time the password is 15 char                                        ",{}]]},"cursor":{"x":41}}],[0.205265,{"lines":{"36":[["(gdb) # this time the password is 15 chars                                       ",{}]]},"cursor":{"x":42}}],[0.058341,{"cursor":{"x":43}}],[0.180395,{"lines":{"36":[["(gdb) # this time the password is 15 chars l                                     ",{}]]},"cursor":{"x":44}}],[0.205969,{"lines":{"36":[["(gdb) # this time the password is 15 chars lo                                    ",{}]]},"cursor":{"x":45}}],[0.110691,{"lines":{"36":[["(gdb) # this time the password is 15 chars lon                                   ",{}]]},"cursor":{"x":46}}],[0.12709,{"lines":{"36":[["(gdb) # this time the password is 15 chars long                                  ",{}]]},"cursor":{"x":47}}],[0.575078,{"lines":{"0":[["=> 0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"1":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"2":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"3":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"4":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"5":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"6":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"7":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"8":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"9":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"10":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"11":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"12":[["Quit                                                                             ",{}]],"13":[["(gdb) # let's print the function arguments                                       ",{}]],"14":[["(gdb) x/wx $esp                                                                  ",{}]],"15":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"16":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"17":[["0xbffff3e4:     0x00000006                                                       ",{}]],"18":[["(gdb) x/d $esp                                                                   ",{}]],"19":[["0xbffff3e0:     10                                                               ",{}]],"20":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"21":[[" with a different password to see if this value is different or not              ",{}]],"22":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"23":[["The program being debugged has been started already.                             ",{}]],"24":[["Start it from the beginning? (y or n) Y                                          ",{}]],"25":[["                                                                                 ",{}]],"26":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"27":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"28":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"29":[["                                                                                 ",{}]],"30":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"31":[["(gdb) C                                                                          ",{}]],"32":[["Continuing.                                                                      ",{}]],"33":[["                                                                                 ",{}]],"34":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"35":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.010618,{"lines":{"36":[["(gdb) # this time the password is 15 chars long                                  ",{}]]},"cursor":{"x":47}}],[0.134206,{"lines":{"36":[["(gdb) C                                                                          ",{}]]},"cursor":{"x":7}}],[0.14211,{"lines":{"36":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]]},"cursor":{"x":23}}],[0.206455,{"lines":{"0":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"1":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"2":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"3":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"4":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"5":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"6":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"7":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"8":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"9":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"10":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"11":[["Quit                                                                             ",{}]],"12":[["(gdb) # let's print the function arguments                                       ",{}]],"13":[["(gdb) x/wx $esp                                                                  ",{}]],"14":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"15":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"16":[["0xbffff3e4:     0x00000006                                                       ",{}]],"17":[["(gdb) x/d $esp                                                                   ",{}]],"18":[["0xbffff3e0:     10                                                               ",{}]],"19":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"20":[[" with a different password to see if this value is different or not              ",{}]],"21":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"22":[["The program being debugged has been started already.                             ",{}]],"23":[["Start it from the beginning? (y or n) Y                                          ",{}]],"24":[["                                                                                 ",{}]],"25":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"26":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"27":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"28":[["                                                                                 ",{}]],"29":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"30":[["(gdb) C                                                                          ",{}]],"31":[["Continuing.                                                                      ",{}]],"32":[["                                                                                 ",{}]],"33":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"34":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"35":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"36":[[" with a different password to see if this value is different or not              ",{}]]},"cursor":{"x":67}}],[0.246781,{"lines":{"35":[["(gdb) x/d $esp                                                                   ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":14,"y":35}}],[0.198241,{"lines":{"35":[["(gdb) x/wx $esp+0x4                                                              ",{}]]},"cursor":{"x":19}}],[0.605921,{"lines":{"35":[["(gdb) x/d $esp                                                                   ",{}]]},"cursor":{"x":14}}],[0.981336,{"cursor":{"x":0,"y":36}}],[0.000735,{"lines":{"0":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"1":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"2":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"3":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"4":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"5":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"6":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"8":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"9":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"10":[["Quit                                                                             ",{}]],"11":[["(gdb) # let's print the function arguments                                       ",{}]],"12":[["(gdb) x/wx $esp                                                                  ",{}]],"13":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"14":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"15":[["0xbffff3e4:     0x00000006                                                       ",{}]],"16":[["(gdb) x/d $esp                                                                   ",{}]],"17":[["0xbffff3e0:     10                                                               ",{}]],"18":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"19":[[" with a different password to see if this value is different or not              ",{}]],"20":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"21":[["The program being debugged has been started already.                             ",{}]],"22":[["Start it from the beginning? (y or n) Y                                          ",{}]],"23":[["                                                                                 ",{}]],"24":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"25":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"26":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"27":[["                                                                                 ",{}]],"28":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"29":[["(gdb) C                                                                          ",{}]],"30":[["Continuing.                                                                      ",{}]],"31":[["                                                                                 ",{}]],"32":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"33":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"34":[["(gdb) x/d $esp                                                                   ",{}]],"35":[["0xbffff3e0:     15                                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.134686,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.118171,{"cursor":{"x":8}}],[0.493127,{"lines":{"36":[["(gdb) # y                                                                        ",{}]]},"cursor":{"x":9}}],[0.124741,{"lines":{"36":[["(gdb) # ye                                                                       ",{}]]},"cursor":{"x":10}}],[0.687038,{"lines":{"36":[["(gdb) # yes                                                                      ",{}]]},"cursor":{"x":11}}],[0.38943,{"lines":{"36":[["(gdb) # yes!                                                                     ",{}]]},"cursor":{"x":12}}],[0.56939,{"cursor":{"x":13}}],[0.197615,{"lines":{"36":[["(gdb) # yes! l                                                                   ",{}]]},"cursor":{"x":14}}],[0.09189899999999999,{"lines":{"36":[["(gdb) # yes! le                                                                  ",{}]]},"cursor":{"x":15}}],[0.190914,{"lines":{"36":[["(gdb) # yes! let                                                                 ",{}]]},"cursor":{"x":16}}],[0.192308,{"lines":{"36":[["(gdb) # yes! let'                                                                ",{}]]},"cursor":{"x":17}}],[0.091071,{"lines":{"36":[["(gdb) # yes! let's                                                               ",{}]]},"cursor":{"x":18}}],[0.07432,{"cursor":{"x":19}}],[0.451802,{"lines":{"36":[["(gdb) # yes! let's d                                                             ",{}]]},"cursor":{"x":20}}],[0.086728,{"lines":{"36":[["(gdb) # yes! let's di                                                            ",{}]]},"cursor":{"x":21}}],[0.148449,{"lines":{"36":[["(gdb) # yes! let's dis                                                           ",{}]]},"cursor":{"x":22}}],[0.149715,{"lines":{"36":[["(gdb) # yes! let's disa                                                          ",{}]]},"cursor":{"x":23}}],[0.23897,{"lines":{"36":[["(gdb) # yes! let's disas                                                         ",{}]]},"cursor":{"x":24}}],[0.142272,{"lines":{"36":[["(gdb) # yes! let's disass                                                        ",{}]]},"cursor":{"x":25}}],[0.190268,{"lines":{"36":[["(gdb) # yes! let's disasse                                                       ",{}]]},"cursor":{"x":26}}],[0.295884,{"lines":{"36":[["(gdb) # yes! let's disassem                                                      ",{}]]},"cursor":{"x":27}}],[0.261964,{"lines":{"36":[["(gdb) # yes! let's disassemb                                                     ",{}]]},"cursor":{"x":28}}],[0.215648,{"lines":{"36":[["(gdb) # yes! let's disassembl                                                    ",{}]]},"cursor":{"x":29}}],[0.140206,{"lines":{"36":[["(gdb) # yes! let's disassemble                                                   ",{}]]},"cursor":{"x":30}}],[0.098356,{"cursor":{"x":31}}],[0.202881,{"lines":{"36":[["(gdb) # yes! let's disassemble t                                                 ",{}]]},"cursor":{"x":32}}],[0.102498,{"lines":{"36":[["(gdb) # yes! let's disassemble th                                                ",{}]]},"cursor":{"x":33}}],[0.141225,{"lines":{"36":[["(gdb) # yes! let's disassemble the                                               ",{}]]},"cursor":{"x":34}}],[0.074212,{"cursor":{"x":35}}],[0.170469,{"lines":{"36":[["(gdb) # yes! let's disassemble the f                                             ",{}]]},"cursor":{"x":36}}],[0.079197,{"lines":{"36":[["(gdb) # yes! let's disassemble the fi                                            ",{}]]},"cursor":{"x":37}}],[0.093046,{"lines":{"36":[["(gdb) # yes! let's disassemble the fir                                           ",{}]]},"cursor":{"x":38}}],[0.173625,{"lines":{"36":[["(gdb) # yes! let's disassemble the firs                                          ",{}]]},"cursor":{"x":39}}],[0.231469,{"lines":{"36":[["(gdb) # yes! let's disassemble the first                                         ",{}]]},"cursor":{"x":40}}],[0.287388,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_                                        ",{}]]},"cursor":{"x":41}}],[0.226905,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_c                                       ",{}]]},"cursor":{"x":42}}],[0.103356,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_ch                                      ",{}]]},"cursor":{"x":43}}],[0.096442,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_che                                     ",{}]]},"cursor":{"x":44}}],[0.146789,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_chec                                    ",{}]]},"cursor":{"x":45}}],[0.11154,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check                                   ",{}]]},"cursor":{"x":46}}],[0.128004,{"cursor":{"x":47}}],[0.155343,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check f                                 ",{}]]},"cursor":{"x":48}}],[0.047887,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check fu                                ",{}]]},"cursor":{"x":49}}],[0.10923,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check fun                               ",{}]]},"cursor":{"x":50}}],[0.10878,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check func                              ",{}]]},"cursor":{"x":51}}],[0.231458,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check funct                             ",{}]]},"cursor":{"x":52}}],[0.05606,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check functi                            ",{}]]},"cursor":{"x":53}}],[0.149767,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check functio                           ",{}]]},"cursor":{"x":54}}],[0.085466,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check function                          ",{}]]},"cursor":{"x":55}}],[0.103899,{"cursor":{"x":56}}],[0.132188,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check function n                        ",{}]]},"cursor":{"x":57}}],[0.063709,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check function no                       ",{}]]},"cursor":{"x":58}}],[0.155039,{"lines":{"36":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]]},"cursor":{"x":59}}],[0.266116,{"lines":{"0":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"1":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"2":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"3":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"4":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"5":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"6":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"7":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"8":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"9":[["Quit                                                                             ",{}]],"10":[["(gdb) # let's print the function arguments                                       ",{}]],"11":[["(gdb) x/wx $esp                                                                  ",{}]],"12":[["0xbffff3e0:     0x0000000a                                                       ",{}]],"13":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"14":[["0xbffff3e4:     0x00000006                                                       ",{}]],"15":[["(gdb) x/d $esp                                                                   ",{}]],"16":[["0xbffff3e0:     10                                                               ",{}]],"17":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"18":[[" with a different password to see if this value is different or not              ",{}]],"19":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"20":[["The program being debugged has been started already.                             ",{}]],"21":[["Start it from the beginning? (y or n) Y                                          ",{}]],"22":[["                                                                                 ",{}]],"23":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"24":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"25":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"26":[["                                                                                 ",{}]],"27":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"28":[["(gdb) C                                                                          ",{}]],"29":[["Continuing.                                                                      ",{}]],"30":[["                                                                                 ",{}]],"31":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"32":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"33":[["(gdb) x/d $esp                                                                   ",{}]],"34":[["0xbffff3e0:     15                                                               ",{}]],"35":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.84439,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.048128,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.700323,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.149563,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.174667,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.161751,{"cursor":{"x":12}}],[1.080106,{"lines":{"36":[["(gdb) disas first_check                                                          ",{}]]},"cursor":{"x":23}}],[0.857994,{"lines":{"0":[["0xbffff3e4:     0x00000006                                                       ",{}]],"1":[["(gdb) x/d $esp                                                                   ",{}]],"2":[["0xbffff3e0:     10                                                               ",{}]],"3":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"4":[[" with a different password to see if this value is different or not              ",{}]],"5":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"6":[["The program being debugged has been started already.                             ",{}]],"7":[["Start it from the beginning? (y or n) Y                                          ",{}]],"8":[["                                                                                 ",{}]],"9":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"10":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"12":[["                                                                                 ",{}]],"13":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"14":[["(gdb) C                                                                          ",{}]],"15":[["Continuing.                                                                      ",{}]],"16":[["                                                                                 ",{}]],"17":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"18":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"19":[["(gdb) x/d $esp                                                                   ",{}]],"20":[["0xbffff3e0:     15                                                               ",{}]],"21":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"22":[["(gdb) disas first_check                                                          ",{}]],"23":[["Dump of assembler code for function first_check:                                 ",{}]],"24":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"25":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"26":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"27":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"28":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"29":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"30":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"31":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"32":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"33":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"34":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.048567,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.07795100000000001,{"cursor":{"x":8}}],[1.708774,{"lines":{"36":[["(gdb) # q                                                                        ",{}]]},"cursor":{"x":9}}],[0.143816,{"lines":{"36":[["(gdb) # qu                                                                       ",{}]]},"cursor":{"x":10}}],[0.063693,{"lines":{"36":[["(gdb) # qui                                                                      ",{}]]},"cursor":{"x":11}}],[0.14286,{"lines":{"36":[["(gdb) # quit                                                                     ",{}]]},"cursor":{"x":12}}],[0.211423,{"lines":{"36":[["(gdb) # quite                                                                    ",{}]]},"cursor":{"x":13}}],[0.073842,{"cursor":{"x":14}}],[0.178281,{"lines":{"36":[["(gdb) # quite s                                                                  ",{}]]},"cursor":{"x":15}}],[0.048638,{"lines":{"36":[["(gdb) # quite si                                                                 ",{}]]},"cursor":{"x":16}}],[0.087663,{"lines":{"36":[["(gdb) # quite sim                                                                ",{}]]},"cursor":{"x":17}}],[0.157765,{"lines":{"36":[["(gdb) # quite simp                                                               ",{}]]},"cursor":{"x":18}}],[0.069772,{"lines":{"36":[["(gdb) # quite simpl                                                              ",{}]]},"cursor":{"x":19}}],[0.118202,{"lines":{"36":[["(gdb) # quite simple                                                             ",{}]]},"cursor":{"x":20}}],[2.529607,{"lines":{"36":[["(gdb) # quite simple.                                                            ",{}]]},"cursor":{"x":21}}],[0.09454600000000001,{"cursor":{"x":22}}],[1.070375,{"lines":{"36":[["(gdb) # quite simple. O                                                          ",{}]]},"cursor":{"x":23}}],[0.156022,{"lines":{"36":[["(gdb) # quite simple. On                                                         ",{}]]},"cursor":{"x":24}}],[0.237502,{"lines":{"36":[["(gdb) # quite simple. One                                                        ",{}]]},"cursor":{"x":25}}],[0.125582,{"cursor":{"x":26}}],[0.392821,{"lines":{"36":[["(gdb) # quite simple. One o                                                      ",{}]]},"cursor":{"x":27}}],[0.108412,{"lines":{"36":[["(gdb) # quite simple. One of                                                     ",{}]]},"cursor":{"x":28}}],[0.042586,{"cursor":{"x":29}}],[0.209993,{"lines":{"36":[["(gdb) # quite simple. One of t                                                   ",{}]]},"cursor":{"x":30}}],[0.15882,{"lines":{"36":[["(gdb) # quite simple. One of th                                                  ",{}]]},"cursor":{"x":31}}],[0.173209,{"lines":{"36":[["(gdb) # quite simple. One of the                                                 ",{}]]},"cursor":{"x":32}}],[0.09020300000000001,{"cursor":{"x":33}}],[1.516353,{"lines":{"36":[["(gdb) # quite simple. One of the a                                               ",{}]]},"cursor":{"x":34}}],[0.224204,{"lines":{"36":[["(gdb) # quite simple. One of the ar                                              ",{}]]},"cursor":{"x":35}}],[0.148838,{"lines":{"36":[["(gdb) # quite simple. One of the arg                                             ",{}]]},"cursor":{"x":36}}],[0.126631,{"lines":{"36":[["(gdb) # quite simple. One of the argu                                            ",{}]]},"cursor":{"x":37}}],[0.166694,{"lines":{"36":[["(gdb) # quite simple. One of the argum                                           ",{}]]},"cursor":{"x":38}}],[0.112285,{"lines":{"36":[["(gdb) # quite simple. One of the argume                                          ",{}]]},"cursor":{"x":39}}],[0.100097,{"lines":{"36":[["(gdb) # quite simple. One of the argumen                                         ",{}]]},"cursor":{"x":40}}],[0.109319,{"lines":{"36":[["(gdb) # quite simple. One of the argument                                        ",{}]]},"cursor":{"x":41}}],[0.08179,{"cursor":{"x":42}}],[0.227464,{"lines":{"36":[["(gdb) # quite simple. One of the argument i                                      ",{}]]},"cursor":{"x":43}}],[0.108437,{"lines":{"36":[["(gdb) # quite simple. One of the argument is                                     ",{}]]},"cursor":{"x":44}}],[0.12197,{"cursor":{"x":45}}],[1.077988,{"lines":{"36":[["(gdb) # quite simple. One of the argument is m                                   ",{}]]},"cursor":{"x":46}}],[0.16699,{"lines":{"36":[["(gdb) # quite simple. One of the argument is mo                                  ",{}]]},"cursor":{"x":47}}],[0.181362,{"lines":{"36":[["(gdb) # quite simple. One of the argument is mov                                 ",{}]]},"cursor":{"x":48}}],[0.148844,{"lines":{"36":[["(gdb) # quite simple. One of the argument is move                                ",{}]]},"cursor":{"x":49}}],[0.190209,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved                               ",{}]]},"cursor":{"x":50}}],[0.066151,{"cursor":{"x":51}}],[0.260149,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved i                             ",{}]]},"cursor":{"x":52}}],[0.070784,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved in                            ",{}]]},"cursor":{"x":53}}],[0.18054,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved int                           ",{}]]},"cursor":{"x":54}}],[0.112047,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into                          ",{}]]},"cursor":{"x":55}}],[0.086947,{"cursor":{"x":56}}],[0.347806,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into e                        ",{}]]},"cursor":{"x":57}}],[0.181379,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into ea                       ",{}]]},"cursor":{"x":58}}],[0.262541,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax                      ",{}]]},"cursor":{"x":59}}],[0.761217,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax,                     ",{}]]},"cursor":{"x":60}}],[0.103954,{"cursor":{"x":61}}],[0.203955,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, t                   ",{}]]},"cursor":{"x":62}}],[0.190299,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, th                  ",{}]]},"cursor":{"x":63}}],[0.213317,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, the                 ",{}]]},"cursor":{"x":64}}],[0.143118,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then                ",{}]]},"cursor":{"x":65}}],[0.12853,{"cursor":{"x":66}}],[0.7083,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3              ",{}]]},"cursor":{"x":67}}],[0.08978999999999999,{"cursor":{"x":68}}],[0.219649,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 i            ",{}]]},"cursor":{"x":69}}],[0.132538,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is           ",{}]]},"cursor":{"x":70}}],[0.090458,{"cursor":{"x":71}}],[0.193308,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is a         ",{}]]},"cursor":{"x":72}}],[0.239148,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is ad        ",{}]]},"cursor":{"x":73}}],[0.142097,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is add       ",{}]]},"cursor":{"x":74}}],[0.150801,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is adde      ",{}]]},"cursor":{"x":75}}],[0.174235,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added     ",{}]]},"cursor":{"x":76}}],[0.09460399999999999,{"cursor":{"x":77}}],[0.222815,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added t   ",{}]]},"cursor":{"x":78}}],[0.095522,{"lines":{"36":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to  ",{}]]},"cursor":{"x":79}}],[0.063886,{"cursor":{"x":80}}],[0.162901,{"lines":{"0":[["(gdb) x/d $esp                                                                   ",{}]],"1":[["0xbffff3e0:     10                                                               ",{}]],"2":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"3":[[" with a different password to see if this value is different or not              ",{}]],"4":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"5":[["The program being debugged has been started already.                             ",{}]],"6":[["Start it from the beginning? (y or n) Y                                          ",{}]],"7":[["                                                                                 ",{}]],"8":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"9":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"11":[["                                                                                 ",{}]],"12":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"13":[["(gdb) C                                                                          ",{}]],"14":[["Continuing.                                                                      ",{}]],"15":[["                                                                                 ",{}]],"16":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"17":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"18":[["(gdb) x/d $esp                                                                   ",{}]],"19":[["0xbffff3e0:     15                                                               ",{}]],"20":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"21":[["(gdb) disas first_check                                                          ",{}]],"22":[["Dump of assembler code for function first_check:                                 ",{}]],"23":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"24":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"25":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"26":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"27":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"28":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"29":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"30":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"31":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"32":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"33":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"34":[["End of assembler dump.                                                           ",{}]],"35":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.126535,{"lines":{"36":[["h                                                                                ",{}]]},"cursor":{"x":1}}],[0.07163,{"lines":{"36":[["hi                                                                               ",{}]]},"cursor":{"x":2}}],[0.131374,{"lines":{"36":[["his                                                                              ",{}]]},"cursor":{"x":3}}],[0.058317,{"cursor":{"x":4}}],[0.186703,{"lines":{"36":[["his v                                                                            ",{}]]},"cursor":{"x":5}}],[0.165427,{"lines":{"36":[["his va                                                                           ",{}]]},"cursor":{"x":6}}],[0.121297,{"lines":{"36":[["his val                                                                          ",{}]]},"cursor":{"x":7}}],[0.08594400000000001,{"lines":{"36":[["his valu                                                                         ",{}]]},"cursor":{"x":8}}],[0.18069,{"lines":{"36":[["his value                                                                        ",{}]]},"cursor":{"x":9}}],[1.675205,{"cursor":{"x":10}}],[0.178357,{"lines":{"36":[["his value a                                                                      ",{}]]},"cursor":{"x":11}}],[0.120456,{"lines":{"36":[["his value an                                                                     ",{}]]},"cursor":{"x":12}}],[0.08730499999999999,{"lines":{"36":[["his value and                                                                    ",{}]]},"cursor":{"x":13}}],[0.0557,{"cursor":{"x":14}}],[0.427055,{"lines":{"36":[["his value and t                                                                  ",{}]]},"cursor":{"x":15}}],[0.102387,{"lines":{"36":[["his value and th                                                                 ",{}]]},"cursor":{"x":16}}],[0.149786,{"lines":{"36":[["his value and the                                                                ",{}]]},"cursor":{"x":17}}],[0.033865,{"cursor":{"x":18}}],[0.202747,{"lines":{"36":[["his value and the r                                                              ",{}]]},"cursor":{"x":19}}],[0.17345,{"lines":{"36":[["his value and the re                                                             ",{}]]},"cursor":{"x":20}}],[0.182188,{"lines":{"36":[["his value and the res                                                            ",{}]]},"cursor":{"x":21}}],[0.10313,{"lines":{"36":[["his value and the resu                                                           ",{}]]},"cursor":{"x":22}}],[0.167815,{"lines":{"36":[["his value and the resul                                                          ",{}]]},"cursor":{"x":23}}],[0.118,{"lines":{"36":[["his value and the result                                                         ",{}]]},"cursor":{"x":24}}],[0.07197099999999999,{"cursor":{"x":25}}],[0.244271,{"lines":{"36":[["his value and the result i                                                       ",{}]]},"cursor":{"x":26}}],[0.093849,{"lines":{"36":[["his value and the result is                                                      ",{}]]},"cursor":{"x":27}}],[0.049005,{"cursor":{"x":28}}],[0.186157,{"lines":{"36":[["his value and the result is c                                                    ",{}]]},"cursor":{"x":29}}],[0.065016,{"lines":{"36":[["his value and the result is co                                                   ",{}]]},"cursor":{"x":30}}],[0.110604,{"lines":{"36":[["his value and the result is com                                                  ",{}]]},"cursor":{"x":31}}],[0.13291,{"lines":{"36":[["his value and the result is comp                                                 ",{}]]},"cursor":{"x":32}}],[0.139199,{"lines":{"36":[["his value and the result is compa                                                ",{}]]},"cursor":{"x":33}}],[0.247658,{"lines":{"36":[["his value and the result is compar                                               ",{}]]},"cursor":{"x":34}}],[0.189559,{"lines":{"36":[["his value and the result is compare                                              ",{}]]},"cursor":{"x":35}}],[0.278715,{"lines":{"36":[["his value and the result is compared                                             ",{}]]},"cursor":{"x":36}}],[0.09800499999999999,{"cursor":{"x":37}}],[0.24934,{"lines":{"36":[["his value and the result is compared a                                           ",{}]]},"cursor":{"x":38}}],[0.24843,{"lines":{"36":[["his value and the result is compared ag                                          ",{}]]},"cursor":{"x":39}}],[0.164219,{"lines":{"36":[["his value and the result is compared aga                                         ",{}]]},"cursor":{"x":40}}],[0.217169,{"lines":{"36":[["his value and the result is compared agai                                        ",{}]]},"cursor":{"x":41}}],[0.173317,{"lines":{"36":[["his value and the result is compared again                                       ",{}]]},"cursor":{"x":42}}],[0.172618,{"lines":{"36":[["his value and the result is compared agains                                      ",{}]]},"cursor":{"x":43}}],[0.240138,{"lines":{"36":[["his value and the result is compared against                                     ",{}]]},"cursor":{"x":44}}],[0.102959,{"cursor":{"x":45}}],[0.124718,{"lines":{"36":[["his value and the result is compared against t                                   ",{}]]},"cursor":{"x":46}}],[0.151459,{"lines":{"36":[["his value and the result is compared against th                                  ",{}]]},"cursor":{"x":47}}],[0.149186,{"lines":{"36":[["his value and the result is compared against the                                 ",{}]]},"cursor":{"x":48}}],[0.105989,{"cursor":{"x":49}}],[0.172522,{"lines":{"36":[["his value and the result is compared against the o                               ",{}]]},"cursor":{"x":50}}],[0.268662,{"lines":{"36":[["his value and the result is compared against the ot                              ",{}]]},"cursor":{"x":51}}],[0.110137,{"lines":{"36":[["his value and the result is compared against the oth                             ",{}]]},"cursor":{"x":52}}],[0.141336,{"lines":{"36":[["his value and the result is compared against the othe                            ",{}]]},"cursor":{"x":53}}],[0.143477,{"lines":{"36":[["his value and the result is compared against the other                           ",{}]]},"cursor":{"x":54}}],[0.073406,{"cursor":{"x":55}}],[0.209258,{"lines":{"36":[["his value and the result is compared against the other a                         ",{}]]},"cursor":{"x":56}}],[0.215908,{"lines":{"36":[["his value and the result is compared against the other ar                        ",{}]]},"cursor":{"x":57}}],[0.198386,{"lines":{"36":[["his value and the result is compared against the other arg                       ",{}]]},"cursor":{"x":58}}],[0.17515,{"lines":{"36":[["his value and the result is compared against the other argu                      ",{}]]},"cursor":{"x":59}}],[0.189735,{"lines":{"36":[["his value and the result is compared against the other argum                     ",{}]]},"cursor":{"x":60}}],[0.109541,{"lines":{"36":[["his value and the result is compared against the other argume                    ",{}]]},"cursor":{"x":61}}],[0.087716,{"lines":{"36":[["his value and the result is compared against the other argumen                   ",{}]]},"cursor":{"x":62}}],[0.124662,{"lines":{"36":[["his value and the result is compared against the other argument                  ",{}]]},"cursor":{"x":63}}],[0.480704,{"lines":{"36":[["his value and the result is compared against the other argument.                 ",{}]]},"cursor":{"x":64}}],[0.166956,{"cursor":{"x":65}}],[0.981559,{"lines":{"36":[["his value and the result is compared against the other argument. I               ",{}]]},"cursor":{"x":66}}],[0.332254,{"lines":{"36":[["his value and the result is compared against the other argument. If              ",{}]]},"cursor":{"x":67}}],[0.160748,{"cursor":{"x":68}}],[0.484266,{"lines":{"36":[["his value and the result is compared against the other argument. If t            ",{}]]},"cursor":{"x":69}}],[0.142355,{"lines":{"36":[["his value and the result is compared against the other argument. If th           ",{}]]},"cursor":{"x":70}}],[0.165386,{"lines":{"36":[["his value and the result is compared against the other argument. If the          ",{}]]},"cursor":{"x":71}}],[0.08223800000000001,{"cursor":{"x":72}}],[0.499808,{"lines":{"36":[["his value and the result is compared against the other argument. If the t        ",{}]]},"cursor":{"x":73}}],[0.261122,{"lines":{"36":[["his value and the result is compared against the other argument. If the tw       ",{}]]},"cursor":{"x":74}}],[0.088106,{"lines":{"36":[["his value and the result is compared against the other argument. If the two      ",{}]]},"cursor":{"x":75}}],[0.127699,{"cursor":{"x":76}}],[0.500288,{"lines":{"36":[["his value and the result is compared against the other argument. If the two v    ",{}]]},"cursor":{"x":77}}],[0.180639,{"lines":{"36":[["his value and the result is compared against the other argument. If the two va   ",{}]]},"cursor":{"x":78}}],[0.201513,{"lines":{"36":[["his value and the result is compared against the other argument. If the two val  ",{}]]},"cursor":{"x":79}}],[0.06984799999999999,{"lines":{"36":[["his value and the result is compared against the other argument. If the two valu ",{}]]},"cursor":{"x":80}}],[0.164241,{"lines":{"0":[["0xbffff3e0:     10                                                               ",{}]],"1":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"2":[[" with a different password to see if this value is different or not              ",{}]],"3":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"4":[["The program being debugged has been started already.                             ",{}]],"5":[["Start it from the beginning? (y or n) Y                                          ",{}]],"6":[["                                                                                 ",{}]],"7":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"8":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"9":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"10":[["                                                                                 ",{}]],"11":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"12":[["(gdb) C                                                                          ",{}]],"13":[["Continuing.                                                                      ",{}]],"14":[["                                                                                 ",{}]],"15":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"16":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"17":[["(gdb) x/d $esp                                                                   ",{}]],"18":[["0xbffff3e0:     15                                                               ",{}]],"19":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"20":[["(gdb) disas first_check                                                          ",{}]],"21":[["Dump of assembler code for function first_check:                                 ",{}]],"22":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"23":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"24":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"25":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"26":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"27":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"28":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"29":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"30":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"31":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"32":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"35":[["his value and the result is compared against the other argument. If the two value",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.238042,{"lines":{"36":[["s                                                                                ",{}]]},"cursor":{"x":1}}],[0.115125,{"cursor":{"x":2}}],[0.184634,{"lines":{"36":[["s a                                                                              ",{}]]},"cursor":{"x":3}}],[0.272361,{"lines":{"36":[["s ar                                                                             ",{}]]},"cursor":{"x":4}}],[0.165547,{"lines":{"36":[["s are                                                                            ",{}]]},"cursor":{"x":5}}],[0.058172,{"cursor":{"x":6}}],[0.22702,{"lines":{"36":[["s are t                                                                          ",{}]]},"cursor":{"x":7}}],[0.126323,{"lines":{"36":[["s are th                                                                         ",{}]]},"cursor":{"x":8}}],[0.229643,{"lines":{"36":[["s are the                                                                        ",{}]]},"cursor":{"x":9}}],[0.113794,{"cursor":{"x":10}}],[0.250199,{"lines":{"36":[["s are the s                                                                      ",{}]]},"cursor":{"x":11}}],[0.141646,{"lines":{"36":[["s are the sa                                                                     ",{}]]},"cursor":{"x":12}}],[0.200428,{"lines":{"36":[["s are the sam                                                                    ",{}]]},"cursor":{"x":13}}],[0.157454,{"lines":{"36":[["s are the same                                                                   ",{}]]},"cursor":{"x":14}}],[0.345121,{"cursor":{"x":15}}],[0.291787,{"lines":{"36":[["s are the same t                                                                 ",{}]]},"cursor":{"x":16}}],[0.118898,{"lines":{"36":[["s are the same th                                                                ",{}]]},"cursor":{"x":17}}],[0.165106,{"lines":{"36":[["s are the same the                                                               ",{}]]},"cursor":{"x":18}}],[0.033971,{"cursor":{"x":19}}],[0.259502,{"lines":{"36":[["s are the same the f                                                             ",{}]]},"cursor":{"x":20}}],[0.094723,{"lines":{"36":[["s are the same the fu                                                            ",{}]]},"cursor":{"x":21}}],[0.062705,{"lines":{"36":[["s are the same the fun                                                           ",{}]]},"cursor":{"x":22}}],[0.085732,{"lines":{"36":[["s are the same the func                                                          ",{}]]},"cursor":{"x":23}}],[0.205454,{"lines":{"36":[["s are the same the funct                                                         ",{}]]},"cursor":{"x":24}}],[0.086079,{"lines":{"36":[["s are the same the functi                                                        ",{}]]},"cursor":{"x":25}}],[0.137046,{"lines":{"36":[["s are the same the functio                                                       ",{}]]},"cursor":{"x":26}}],[0.084511,{"lines":{"36":[["s are the same the function                                                      ",{}]]},"cursor":{"x":27}}],[0.125377,{"cursor":{"x":28}}],[0.341229,{"lines":{"36":[["s are the same the function w                                                    ",{}]]},"cursor":{"x":29}}],[0.128283,{"lines":{"36":[["s are the same the function wi                                                   ",{}]]},"cursor":{"x":30}}],[0.198541,{"lines":{"36":[["s are the same the function wil                                                  ",{}]]},"cursor":{"x":31}}],[0.142286,{"lines":{"36":[["s are the same the function will                                                 ",{}]]},"cursor":{"x":32}}],[0.095438,{"cursor":{"x":33}}],[0.131543,{"lines":{"36":[["s are the same the function will r                                               ",{}]]},"cursor":{"x":34}}],[0.157318,{"lines":{"36":[["s are the same the function will re                                              ",{}]]},"cursor":{"x":35}}],[0.216323,{"lines":{"36":[["s are the same the function will ret                                             ",{}]]},"cursor":{"x":36}}],[0.093704,{"lines":{"36":[["s are the same the function will retu                                            ",{}]]},"cursor":{"x":37}}],[0.109579,{"lines":{"36":[["s are the same the function will retur                                           ",{}]]},"cursor":{"x":38}}],[0.150517,{"lines":{"36":[["s are the same the function will return                                          ",{}]]},"cursor":{"x":39}}],[0.168516,{"cursor":{"x":40}}],[1.573214,{"lines":{"36":[["s are the same the function will return 1                                        ",{}]]},"cursor":{"x":41}}],[0.09010600000000001,{"cursor":{"x":42}}],[0.363973,{"lines":{"36":[["s are the same the function will return 1 (                                      ",{}]]},"cursor":{"x":43}}],[0.324134,{"lines":{"36":[["s are the same the function will return 1 (t                                     ",{}]]},"cursor":{"x":44}}],[0.182148,{"lines":{"36":[["s are the same the function will return 1 (tr                                    ",{}]]},"cursor":{"x":45}}],[0.086349,{"lines":{"36":[["s are the same the function will return 1 (tru                                   ",{}]]},"cursor":{"x":46}}],[0.101559,{"lines":{"36":[["s are the same the function will return 1 (true                                  ",{}]]},"cursor":{"x":47}}],[0.528107,{"lines":{"36":[["s are the same the function will return 1 (true)                                 ",{}]]},"cursor":{"x":48}}],[0.509151,{"lines":{"36":[["s are the same the function will return 1 (true),                                ",{}]]},"cursor":{"x":49}}],[0.111378,{"cursor":{"x":50}}],[0.125305,{"lines":{"36":[["s are the same the function will return 1 (true), o                              ",{}]]},"cursor":{"x":51}}],[0.188251,{"lines":{"36":[["s are the same the function will return 1 (true), ot                             ",{}]]},"cursor":{"x":52}}],[0.167478,{"lines":{"36":[["s are the same the function will return 1 (true), oth                            ",{}]]},"cursor":{"x":53}}],[0.213177,{"lines":{"36":[["s are the same the function will return 1 (true), othe                           ",{}]]},"cursor":{"x":54}}],[0.159111,{"lines":{"36":[["s are the same the function will return 1 (true), other                          ",{}]]},"cursor":{"x":55}}],[0.325673,{"lines":{"36":[["s are the same the function will return 1 (true), otherw                         ",{}]]},"cursor":{"x":56}}],[0.079564,{"lines":{"36":[["s are the same the function will return 1 (true), otherwi                        ",{}]]},"cursor":{"x":57}}],[0.108257,{"lines":{"36":[["s are the same the function will return 1 (true), otherwis                       ",{}]]},"cursor":{"x":58}}],[0.199152,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise                      ",{}]]},"cursor":{"x":59}}],[0.225209,{"cursor":{"x":60}}],[0.719078,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0                    ",{}]]},"cursor":{"x":61}}],[0.118044,{"cursor":{"x":62}}],[0.275164,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 w                  ",{}]]},"cursor":{"x":63}}],[0.175962,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 wi                 ",{}]]},"cursor":{"x":64}}],[0.198825,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 wil                ",{}]]},"cursor":{"x":65}}],[0.141844,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will               ",{}]]},"cursor":{"x":66}}],[0.119556,{"cursor":{"x":67}}],[0.291813,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will b             ",{}]]},"cursor":{"x":68}}],[0.117712,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be            ",{}]]},"cursor":{"x":69}}],[0.057952,{"cursor":{"x":70}}],[0.131441,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be m          ",{}]]},"cursor":{"x":71}}],[0.159296,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be mo         ",{}]]},"cursor":{"x":72}}],[0.133529,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be mov        ",{}]]},"cursor":{"x":73}}],[0.196926,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be move       ",{}]]},"cursor":{"x":74}}],[0.166322,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be moved      ",{}]]},"cursor":{"x":75}}],[0.08246199999999999,{"cursor":{"x":76}}],[0.588413,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be moved i    ",{}]]},"cursor":{"x":77}}],[0.07806100000000001,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be moved in   ",{}]]},"cursor":{"x":78}}],[0.173434,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be moved int  ",{}]]},"cursor":{"x":79}}],[0.09524199999999999,{"lines":{"36":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]]},"cursor":{"x":80}}],[0.103568,{"lines":{"0":[["(gdb) # 10 is the length of our password. We can try to execute the program again",{}]],"1":[[" with a different password to see if this value is different or not              ",{}]],"2":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"3":[["The program being debugged has been started already.                             ",{}]],"4":[["Start it from the beginning? (y or n) Y                                          ",{}]],"5":[["                                                                                 ",{}]],"6":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"7":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"8":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"9":[["                                                                                 ",{}]],"10":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"11":[["(gdb) C                                                                          ",{}]],"12":[["Continuing.                                                                      ",{}]],"13":[["                                                                                 ",{}]],"14":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"15":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"16":[["(gdb) x/d $esp                                                                   ",{}]],"17":[["0xbffff3e0:     15                                                               ",{}]],"18":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"19":[["(gdb) disas first_check                                                          ",{}]],"20":[["Dump of assembler code for function first_check:                                 ",{}]],"21":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"22":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"23":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"24":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"25":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"26":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"27":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"28":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"29":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"30":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"31":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"34":[["his value and the result is compared against the other argument. If the two value",{}]],"35":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.363621,{"lines":{"36":[["e                                                                                ",{}]]},"cursor":{"x":1}}],[0.173191,{"lines":{"36":[["ea                                                                               ",{}]]},"cursor":{"x":2}}],[0.207359,{"lines":{"36":[["eax                                                                              ",{}]]},"cursor":{"x":3}}],[0.109482,{"cursor":{"x":4}}],[0.670681,{"lines":{"36":[["eax a                                                                            ",{}]]},"cursor":{"x":5}}],[0.272488,{"lines":{"36":[["eax an                                                                           ",{}]]},"cursor":{"x":6}}],[0.10911,{"lines":{"36":[["eax and                                                                          ",{}]]},"cursor":{"x":7}}],[0.110504,{"cursor":{"x":8}}],[0.286617,{"lines":{"36":[["eax and t                                                                        ",{}]]},"cursor":{"x":9}}],[0.109857,{"lines":{"36":[["eax and th                                                                       ",{}]]},"cursor":{"x":10}}],[0.133681,{"lines":{"36":[["eax and the                                                                      ",{}]]},"cursor":{"x":11}}],[0.066358,{"cursor":{"x":12}}],[0.3313,{"lines":{"36":[["eax and the f                                                                    ",{}]]},"cursor":{"x":13}}],[0.166186,{"lines":{"36":[["eax and the fu                                                                   ",{}]]},"cursor":{"x":14}}],[0.094431,{"lines":{"36":[["eax and the fun                                                                  ",{}]]},"cursor":{"x":15}}],[0.05449,{"lines":{"36":[["eax and the func                                                                 ",{}]]},"cursor":{"x":16}}],[0.197825,{"lines":{"36":[["eax and the funct                                                                ",{}]]},"cursor":{"x":17}}],[0.06349399999999999,{"lines":{"36":[["eax and the functi                                                               ",{}]]},"cursor":{"x":18}}],[0.149915,{"lines":{"36":[["eax and the functio                                                              ",{}]]},"cursor":{"x":19}}],[0.085983,{"lines":{"36":[["eax and the function                                                             ",{}]]},"cursor":{"x":20}}],[0.072015,{"cursor":{"x":21}}],[0.258612,{"lines":{"36":[["eax and the function w                                                           ",{}]]},"cursor":{"x":22}}],[0.127889,{"lines":{"36":[["eax and the function wi                                                          ",{}]]},"cursor":{"x":23}}],[0.214702,{"lines":{"36":[["eax and the function wil                                                         ",{}]]},"cursor":{"x":24}}],[0.133852,{"lines":{"36":[["eax and the function will                                                        ",{}]]},"cursor":{"x":25}}],[0.103777,{"cursor":{"x":26}}],[0.18003,{"lines":{"36":[["eax and the function will r                                                      ",{}]]},"cursor":{"x":27}}],[0.1654,{"lines":{"36":[["eax and the function will re                                                     ",{}]]},"cursor":{"x":28}}],[0.206571,{"lines":{"36":[["eax and the function will ret                                                    ",{}]]},"cursor":{"x":29}}],[0.063655,{"lines":{"36":[["eax and the function will retu                                                   ",{}]]},"cursor":{"x":30}}],[0.140551,{"lines":{"36":[["eax and the function will retur                                                  ",{}]]},"cursor":{"x":31}}],[0.118749,{"lines":{"36":[["eax and the function will return                                                 ",{}]]},"cursor":{"x":32}}],[0.184357,{"cursor":{"x":33}}],[0.53276,{"lines":{"36":[["eax and the function will return f                                               ",{}]]},"cursor":{"x":34}}],[0.140316,{"lines":{"36":[["eax and the function will return fa                                              ",{}]]},"cursor":{"x":35}}],[0.104816,{"lines":{"36":[["eax and the function will return fal                                             ",{}]]},"cursor":{"x":36}}],[0.100246,{"lines":{"36":[["eax and the function will return fals                                            ",{}]]},"cursor":{"x":37}}],[0.110631,{"lines":{"36":[["eax and the function will return false                                           ",{}]]},"cursor":{"x":38}}],[1.341461,{"lines":{"36":[["eax and the function will return false.                                          ",{}]]},"cursor":{"x":39}}],[0.158149,{"lines":{"36":[["eax and the function will return false..                                         ",{}]]},"cursor":{"x":40}}],[1.361202,{"lines":{"0":[[" with a different password to see if this value is different or not              ",{}]],"1":[["(gdb) r AAAAAAAAAAAAAAA                                                          ",{}]],"2":[["The program being debugged has been started already.                             ",{}]],"3":[["Start it from the beginning? (y or n) Y                                          ",{}]],"4":[["                                                                                 ",{}]],"5":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"6":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"7":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"8":[["                                                                                 ",{}]],"9":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"10":[["(gdb) C                                                                          ",{}]],"11":[["Continuing.                                                                      ",{}]],"12":[["                                                                                 ",{}]],"13":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"14":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"15":[["(gdb) x/d $esp                                                                   ",{}]],"16":[["0xbffff3e0:     15                                                               ",{}]],"17":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"18":[["(gdb) disas first_check                                                          ",{}]],"19":[["Dump of assembler code for function first_check:                                 ",{}]],"20":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"21":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"22":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"23":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"24":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"25":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"26":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"27":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"28":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"29":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"30":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"33":[["his value and the result is compared against the other argument. If the two value",{}]],"34":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"35":[["eax and the function will return false..                                         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.781498,{"lines":{"36":[["(gdb) s                                                                          ",{}]]},"cursor":{"x":7}}],[0.319398,{"lines":{"36":[["(gdb) st                                                                         ",{}]]},"cursor":{"x":8}}],[0.213711,{"lines":{"36":[["(gdb) ste                                                                        ",{}]]},"cursor":{"x":9}}],[0.16908,{"lines":{"36":[["(gdb) step                                                                       ",{}]]},"cursor":{"x":10}}],[0.164862,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.409517,{"lines":{"0":[["The program being debugged has been started already.                             ",{}]],"1":[["Start it from the beginning? (y or n) Y                                          ",{}]],"2":[["                                                                                 ",{}]],"3":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"4":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"5":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"6":[["                                                                                 ",{}]],"7":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"8":[["(gdb) C                                                                          ",{}]],"9":[["Continuing.                                                                      ",{}]],"10":[["                                                                                 ",{}]],"11":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"12":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"13":[["(gdb) x/d $esp                                                                   ",{}]],"14":[["0xbffff3e0:     15                                                               ",{}]],"15":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"16":[["(gdb) disas first_check                                                          ",{}]],"17":[["Dump of assembler code for function first_check:                                 ",{}]],"18":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"19":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"20":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"21":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"22":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"23":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"24":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"25":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"26":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"27":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"28":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"29":[["End of assembler dump.                                                           ",{}]],"30":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"31":[["his value and the result is compared against the other argument. If the two value",{}]],"32":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"33":[["eax and the function will return false..                                         ",{}]],"34":[["(gdb) stepi                                                                      ",{}]],"35":[["0x080487da in first_check ()                                                     ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.451049,{"lines":{"0":[["                                                                                 ",{}]],"1":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAAAAAAAA                       ",{}]],"2":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"3":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"4":[["                                                                                 ",{}]],"5":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"6":[["(gdb) C                                                                          ",{}]],"7":[["Continuing.                                                                      ",{}]],"8":[["                                                                                 ",{}]],"9":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"10":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"11":[["(gdb) x/d $esp                                                                   ",{}]],"12":[["0xbffff3e0:     15                                                               ",{}]],"13":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"14":[["(gdb) disas first_check                                                          ",{}]],"15":[["Dump of assembler code for function first_check:                                 ",{}]],"16":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"17":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"18":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"19":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"20":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"21":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"22":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"23":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"24":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"25":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"26":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"27":[["End of assembler dump.                                                           ",{}]],"28":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"29":[["his value and the result is compared against the other argument. If the two value",{}]],"30":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"31":[["eax and the function will return false..                                         ",{}]],"32":[["(gdb) stepi                                                                      ",{}]],"33":[["0x080487da in first_check ()                                                     ",{}]],"34":[["(gdb)                                                                            ",{}]],"35":[["0x080487db in first_check ()                                                     ",{}]]}}],[7.018592,{"lines":{"0":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"1":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"2":[["                                                                                 ",{}]],"3":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"4":[["(gdb) C                                                                          ",{}]],"5":[["Continuing.                                                                      ",{}]],"6":[["                                                                                 ",{}]],"7":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"8":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"9":[["(gdb) x/d $esp                                                                   ",{}]],"10":[["0xbffff3e0:     15                                                               ",{}]],"11":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"12":[["(gdb) disas first_check                                                          ",{}]],"13":[["Dump of assembler code for function first_check:                                 ",{}]],"14":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"15":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"16":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"18":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"19":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"20":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"21":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"22":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"23":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"24":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"25":[["End of assembler dump.                                                           ",{}]],"26":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"27":[["his value and the result is compared against the other argument. If the two value",{}]],"28":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"29":[["eax and the function will return false..                                         ",{}]],"30":[["(gdb) stepi                                                                      ",{}]],"31":[["0x080487da in first_check ()                                                     ",{}]],"32":[["(gdb)                                                                            ",{}]],"33":[["0x080487db in first_check ()                                                     ",{}]],"35":[["0x080487dd in first_check ()                                                     ",{}]]}}],[1.17379,{"lines":{"36":[["(gdb) p                                                                          ",{}]]},"cursor":{"x":7}}],[0.654569,{"lines":{"36":[["(gdb) p/                                                                         ",{}]]},"cursor":{"x":8}}],[0.356391,{"lines":{"36":[["(gdb) p/d                                                                        ",{}]]},"cursor":{"x":9}}],[0.073646,{"cursor":{"x":10}}],[0.779147,{"lines":{"36":[["(gdb) p/d $                                                                      ",{}]]},"cursor":{"x":11}}],[0.364965,{"lines":{"36":[["(gdb) p/d $e                                                                     ",{}]]},"cursor":{"x":12}}],[0.181151,{"lines":{"36":[["(gdb) p/d $ea                                                                    ",{}]]},"cursor":{"x":13}}],[0.207075,{"lines":{"36":[["(gdb) p/d $eax                                                                   ",{}]]},"cursor":{"x":14}}],[0.314097,{"lines":{"0":[["                                                                                 ",{}]],"1":[["Breakpoint 1, 0x08048aaa in main ()                                              ",{}]],"2":[["(gdb) C                                                                          ",{}]],"3":[["Continuing.                                                                      ",{}]],"4":[["                                                                                 ",{}]],"5":[["Breakpoint 2, 0x08048a09 in crackyou ()                                          ",{}]],"6":[["(gdb) # this time the password is 15 chars long                                  ",{}]],"7":[["(gdb) x/d $esp                                                                   ",{}]],"8":[["0xbffff3e0:     15                                                               ",{}]],"9":[["(gdb) # yes! let's disassemble the first_check function now                      ",{}]],"10":[["(gdb) disas first_check                                                          ",{}]],"11":[["Dump of assembler code for function first_check:                                 ",{}]],"12":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"13":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"14":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"15":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"16":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"17":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"18":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"19":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"20":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"21":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"22":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"23":[["End of assembler dump.                                                           ",{}]],"24":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"25":[["his value and the result is compared against the other argument. If the two value",{}]],"26":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"27":[["eax and the function will return false..                                         ",{}]],"28":[["(gdb) stepi                                                                      ",{}]],"29":[["0x080487da in first_check ()                                                     ",{}]],"30":[["(gdb)                                                                            ",{}]],"31":[["0x080487db in first_check ()                                                     ",{}]],"33":[["0x080487dd in first_check ()                                                     ",{}]],"34":[["(gdb) p/d $eax                                                                   ",{}]],"35":[["$1 = 15                                                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.070272,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.093905,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.141785,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.181876,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.15874,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.122715,{"lines":{"0":[["   0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"1":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"2":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"3":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"4":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"5":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"6":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"7":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"8":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"9":[["End of assembler dump.                                                           ",{}]],"10":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"11":[["his value and the result is compared against the other argument. If the two value",{}]],"12":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"13":[["eax and the function will return false..                                         ",{}]],"14":[["(gdb) stepi                                                                      ",{}]],"15":[["0x080487da in first_check ()                                                     ",{}]],"16":[["(gdb)                                                                            ",{}]],"17":[["0x080487db in first_check ()                                                     ",{}]],"18":[["(gdb)                                                                            ",{}]],"19":[["0x080487dd in first_check ()                                                     ",{}]],"20":[["(gdb) p/d $eax                                                                   ",{}]],"21":[["$1 = 15                                                                          ",{}]],"22":[["(gdb) disas                                                                      ",{}]],"23":[["Dump of assembler code for function first_check:                                 ",{}]],"24":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"25":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"26":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"27":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"28":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"29":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"30":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"31":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"32":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"33":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"34":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.620379,{"lines":{"36":[["(gdb) s                                                                          ",{}]]},"cursor":{"x":7}}],[0.295342,{"lines":{"36":[["(gdb) st                                                                         ",{}]]},"cursor":{"x":8}}],[0.190268,{"lines":{"36":[["(gdb) ste                                                                        ",{}]]},"cursor":{"x":9}}],[0.104439,{"lines":{"36":[["(gdb) step                                                                       ",{}]]},"cursor":{"x":10}}],[0.069475,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[2.042664,{"lines":{"0":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"1":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"2":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"3":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"4":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"5":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"6":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"7":[["End of assembler dump.                                                           ",{}]],"8":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"9":[["his value and the result is compared against the other argument. If the two value",{}]],"10":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"11":[["eax and the function will return false..                                         ",{}]],"12":[["(gdb) stepi                                                                      ",{}]],"13":[["0x080487da in first_check ()                                                     ",{}]],"14":[["(gdb)                                                                            ",{}]],"15":[["0x080487db in first_check ()                                                     ",{}]],"17":[["0x080487dd in first_check ()                                                     ",{}]],"18":[["(gdb) p/d $eax                                                                   ",{}]],"19":[["$1 = 15                                                                          ",{}]],"20":[["(gdb) disas                                                                      ",{}]],"21":[["Dump of assembler code for function first_check:                                 ",{}]],"22":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"23":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"24":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"25":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"26":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"27":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"28":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"29":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"30":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"31":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"32":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) stepi                                                                      ",{}]],"35":[["0x080487e0 in first_check ()                                                     ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.627233,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.166677,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]}}],[0.150008,{"lines":{"36":[["(gdb) p/d $eax                                                                   ",{}]]},"cursor":{"x":14}}],[0.764149,{"lines":{"0":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"1":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"2":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"3":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"4":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"5":[["End of assembler dump.                                                           ",{}]],"6":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"7":[["his value and the result is compared against the other argument. If the two value",{}]],"8":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"9":[["eax and the function will return false..                                         ",{}]],"10":[["(gdb) stepi                                                                      ",{}]],"11":[["0x080487da in first_check ()                                                     ",{}]],"12":[["(gdb)                                                                            ",{}]],"13":[["0x080487db in first_check ()                                                     ",{}]],"15":[["0x080487dd in first_check ()                                                     ",{}]],"16":[["(gdb) p/d $eax                                                                   ",{}]],"17":[["$1 = 15                                                                          ",{}]],"18":[["(gdb) disas                                                                      ",{}]],"19":[["Dump of assembler code for function first_check:                                 ",{}]],"20":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"21":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"22":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"23":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"24":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"25":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"26":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"27":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"28":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"29":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"30":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) stepi                                                                      ",{}]],"33":[["0x080487e0 in first_check ()                                                     ",{}]],"34":[["(gdb) p/d $eax                                                                   ",{}]],"35":[["$2 = 6                                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[7.418044,{"lines":{"0":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"1":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"2":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"3":[["End of assembler dump.                                                           ",{}]],"4":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"5":[["his value and the result is compared against the other argument. If the two value",{}]],"6":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"7":[["eax and the function will return false..                                         ",{}]],"8":[["(gdb) stepi                                                                      ",{}]],"9":[["0x080487da in first_check ()                                                     ",{}]],"10":[["(gdb)                                                                            ",{}]],"11":[["0x080487db in first_check ()                                                     ",{}]],"13":[["0x080487dd in first_check ()                                                     ",{}]],"14":[["(gdb) p/d $eax                                                                   ",{}]],"15":[["$1 = 15                                                                          ",{}]],"16":[["(gdb) disas                                                                      ",{}]],"17":[["Dump of assembler code for function first_check:                                 ",{}]],"18":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"19":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"20":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"21":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"22":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"23":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"24":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"25":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"26":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"27":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"28":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"29":[["End of assembler dump.                                                           ",{}]],"30":[["(gdb) stepi                                                                      ",{}]],"31":[["0x080487e0 in first_check ()                                                     ",{}]],"32":[["(gdb) p/d $eax                                                                   ",{}]],"33":[["$2 = 6                                                                           ",{}]],"34":[["(gdb)                                                                            ",{}]],"35":[["$3 = 6                                                                           ",{}]]}}],[2.28565,{"lines":{"36":[["(gdb) s                                                                          ",{}]]},"cursor":{"x":7}}],[0.279934,{"lines":{"36":[["(gdb) st                                                                         ",{}]]},"cursor":{"x":8}}],[0.206102,{"lines":{"36":[["(gdb) ste                                                                        ",{}]]},"cursor":{"x":9}}],[0.119738,{"lines":{"36":[["(gdb) step                                                                       ",{}]]},"cursor":{"x":10}}],[0.077621,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.593033,{"lines":{"0":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"1":[["End of assembler dump.                                                           ",{}]],"2":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"3":[["his value and the result is compared against the other argument. If the two value",{}]],"4":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"5":[["eax and the function will return false..                                         ",{}]],"6":[["(gdb) stepi                                                                      ",{}]],"7":[["0x080487da in first_check ()                                                     ",{}]],"8":[["(gdb)                                                                            ",{}]],"9":[["0x080487db in first_check ()                                                     ",{}]],"11":[["0x080487dd in first_check ()                                                     ",{}]],"12":[["(gdb) p/d $eax                                                                   ",{}]],"13":[["$1 = 15                                                                          ",{}]],"14":[["(gdb) disas                                                                      ",{}]],"15":[["Dump of assembler code for function first_check:                                 ",{}]],"16":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"17":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"18":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"19":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"20":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"21":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"22":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"23":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"24":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"25":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"26":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"27":[["End of assembler dump.                                                           ",{}]],"28":[["(gdb) stepi                                                                      ",{}]],"29":[["0x080487e0 in first_check ()                                                     ",{}]],"30":[["(gdb) p/d $eax                                                                   ",{}]],"31":[["$2 = 6                                                                           ",{}]],"32":[["(gdb)                                                                            ",{}]],"33":[["$3 = 6                                                                           ",{}]],"34":[["(gdb) stepi                                                                      ",{}]],"35":[["0x080487e3 in first_check ()                                                     ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[15.02406,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.470944,{"lines":{"36":[["(gdb) p/d $eax                                                                   ",{}]]},"cursor":{"x":14}}],[0.548099,{"lines":{"0":[["(gdb) # quite simple. One of the argument is moved into eax, then 3 is added to t",{}]],"1":[["his value and the result is compared against the other argument. If the two value",{}]],"2":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"3":[["eax and the function will return false..                                         ",{}]],"4":[["(gdb) stepi                                                                      ",{}]],"5":[["0x080487da in first_check ()                                                     ",{}]],"6":[["(gdb)                                                                            ",{}]],"7":[["0x080487db in first_check ()                                                     ",{}]],"9":[["0x080487dd in first_check ()                                                     ",{}]],"10":[["(gdb) p/d $eax                                                                   ",{}]],"11":[["$1 = 15                                                                          ",{}]],"12":[["(gdb) disas                                                                      ",{}]],"13":[["Dump of assembler code for function first_check:                                 ",{}]],"14":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"15":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"16":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"18":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"19":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"20":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"21":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"22":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"23":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"24":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"25":[["End of assembler dump.                                                           ",{}]],"26":[["(gdb) stepi                                                                      ",{}]],"27":[["0x080487e0 in first_check ()                                                     ",{}]],"28":[["(gdb) p/d $eax                                                                   ",{}]],"29":[["$2 = 6                                                                           ",{}]],"30":[["(gdb)                                                                            ",{}]],"31":[["$3 = 6                                                                           ",{}]],"32":[["(gdb) stepi                                                                      ",{}]],"33":[["0x080487e3 in first_check ()                                                     ",{}]],"34":[["(gdb) p/d $eax                                                                   ",{}]],"35":[["$4 = 9                                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[5.466971,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.281872,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.211938,{"lines":{"36":[["(gdb) x/d                                                                        ",{}]]},"cursor":{"x":9}}],[0.114145,{"cursor":{"x":10}}],[0.747272,{"lines":{"36":[["(gdb) x/d ebp+0x8                                                                ",{}]]},"cursor":{"x":17}}],[0.582753,{"cursor":{"x":16}}],[0.157988,{"cursor":{"x":15}}],[0.150554,{"cursor":{"x":14}}],[0.15797,{"cursor":{"x":13}}],[0.1586,{"cursor":{"x":12}}],[0.150298,{"cursor":{"x":11}}],[0.15004,{"cursor":{"x":10}}],[0.832748,{"lines":{"36":[["(gdb) x/d $ebp+0x8                                                               ",{}]]},"cursor":{"x":11}}],[0.553306,{"lines":{"0":[["s are the same the function will return 1 (true), otherwise 0 will be moved into ",{}]],"1":[["eax and the function will return false..                                         ",{}]],"2":[["(gdb) stepi                                                                      ",{}]],"3":[["0x080487da in first_check ()                                                     ",{}]],"4":[["(gdb)                                                                            ",{}]],"5":[["0x080487db in first_check ()                                                     ",{}]],"7":[["0x080487dd in first_check ()                                                     ",{}]],"8":[["(gdb) p/d $eax                                                                   ",{}]],"9":[["$1 = 15                                                                          ",{}]],"10":[["(gdb) disas                                                                      ",{}]],"11":[["Dump of assembler code for function first_check:                                 ",{}]],"12":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"13":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"14":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"15":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"16":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"17":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"18":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"19":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"20":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"21":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"22":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"23":[["End of assembler dump.                                                           ",{}]],"24":[["(gdb) stepi                                                                      ",{}]],"25":[["0x080487e0 in first_check ()                                                     ",{}]],"26":[["(gdb) p/d $eax                                                                   ",{}]],"27":[["$2 = 6                                                                           ",{}]],"28":[["(gdb)                                                                            ",{}]],"29":[["$3 = 6                                                                           ",{}]],"30":[["(gdb) stepi                                                                      ",{}]],"31":[["0x080487e3 in first_check ()                                                     ",{}]],"32":[["(gdb) p/d $eax                                                                   ",{}]],"33":[["$4 = 9                                                                           ",{}]],"34":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"35":[["0xbffff3e0:     15                                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.553168,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.126178,{"cursor":{"x":8}}],[0.988133,{"lines":{"36":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.158789,{"lines":{"36":[["(gdb) # we                                                                       ",{}]]},"cursor":{"x":10}}],[0.09816,{"cursor":{"x":11}}],[0.178021,{"lines":{"36":[["(gdb) # we c                                                                     ",{}]]},"cursor":{"x":12}}],[0.141301,{"lines":{"36":[["(gdb) # we ca                                                                    ",{}]]},"cursor":{"x":13}}],[0.128666,{"lines":{"36":[["(gdb) # we can                                                                   ",{}]]},"cursor":{"x":14}}],[0.080926,{"cursor":{"x":15}}],[0.201466,{"lines":{"36":[["(gdb) # we can s                                                                 ",{}]]},"cursor":{"x":16}}],[0.255436,{"lines":{"36":[["(gdb) # we can se                                                                ",{}]]},"cursor":{"x":17}}],[0.133812,{"lines":{"36":[["(gdb) # we can see                                                               ",{}]]},"cursor":{"x":18}}],[0.09799099999999999,{"cursor":{"x":19}}],[0.331121,{"lines":{"36":[["(gdb) # we can see t                                                             ",{}]]},"cursor":{"x":20}}],[0.135148,{"lines":{"36":[["(gdb) # we can see th                                                            ",{}]]},"cursor":{"x":21}}],[0.080181,{"lines":{"36":[["(gdb) # we can see tha                                                           ",{}]]},"cursor":{"x":22}}],[0.203737,{"lines":{"36":[["(gdb) # we can see that                                                          ",{}]]},"cursor":{"x":23}}],[0.097479,{"cursor":{"x":24}}],[0.89388,{"lines":{"36":[["(gdb) # we can see that 9                                                        ",{}]]},"cursor":{"x":25}}],[0.102816,{"cursor":{"x":26}}],[0.164608,{"lines":{"36":[["(gdb) # we can see that 9 i                                                      ",{}]]},"cursor":{"x":27}}],[0.110799,{"lines":{"36":[["(gdb) # we can see that 9 is                                                     ",{}]]},"cursor":{"x":28}}],[0.06399000000000001,{"cursor":{"x":29}}],[0.178214,{"lines":{"36":[["(gdb) # we can see that 9 is c                                                   ",{}]]},"cursor":{"x":30}}],[0.041278,{"lines":{"36":[["(gdb) # we can see that 9 is co                                                  ",{}]]},"cursor":{"x":31}}],[0.07704999999999999,{"lines":{"36":[["(gdb) # we can see that 9 is com                                                 ",{}]]},"cursor":{"x":32}}],[0.15861,{"lines":{"36":[["(gdb) # we can see that 9 is comp                                                ",{}]]},"cursor":{"x":33}}],[0.128287,{"lines":{"36":[["(gdb) # we can see that 9 is compa                                               ",{}]]},"cursor":{"x":34}}],[0.507336,{"lines":{"36":[["(gdb) # we can see that 9 is compar                                              ",{}]]},"cursor":{"x":35}}],[0.173389,{"lines":{"36":[["(gdb) # we can see that 9 is compare                                             ",{}]]},"cursor":{"x":36}}],[0.326625,{"lines":{"36":[["(gdb) # we can see that 9 is compared                                            ",{}]]},"cursor":{"x":37}}],[0.113166,{"cursor":{"x":38}}],[1.227782,{"lines":{"36":[["(gdb) # we can see that 9 is compared a                                          ",{}]]},"cursor":{"x":39}}],[0.208186,{"lines":{"36":[["(gdb) # we can see that 9 is compared ag                                         ",{}]]},"cursor":{"x":40}}],[0.148561,{"lines":{"36":[["(gdb) # we can see that 9 is compared aga                                        ",{}]]},"cursor":{"x":41}}],[0.144597,{"lines":{"36":[["(gdb) # we can see that 9 is compared agai                                       ",{}]]},"cursor":{"x":42}}],[0.05453,{"lines":{"36":[["(gdb) # we can see that 9 is compared again                                      ",{}]]},"cursor":{"x":43}}],[0.09297,{"lines":{"36":[["(gdb) # we can see that 9 is compared agains                                     ",{}]]},"cursor":{"x":44}}],[0.222714,{"lines":{"36":[["(gdb) # we can see that 9 is compared against                                    ",{}]]},"cursor":{"x":45}}],[0.073092,{"cursor":{"x":46}}],[0.225448,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 1                                  ",{}]]},"cursor":{"x":47}}],[0.288207,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15                                 ",{}]]},"cursor":{"x":48}}],[0.351781,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15.                                ",{}]]},"cursor":{"x":49}}],[0.18202,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15..                               ",{}]]},"cursor":{"x":50}}],[0.126448,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15...                              ",{}]]},"cursor":{"x":51}}],[0.167584,{"cursor":{"x":52}}],[2.34032,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... t                            ",{}]]},"cursor":{"x":53}}],[0.089684,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... th                           ",{}]]},"cursor":{"x":54}}],[0.148827,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the                          ",{}]]},"cursor":{"x":55}}],[0.081992,{"cursor":{"x":56}}],[0.299422,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the t                        ",{}]]},"cursor":{"x":57}}],[0.221509,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the te                       ",{}]]},"cursor":{"x":58}}],[0.081303,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the teo                      ",{}]]},"cursor":{"x":59}}],[0.110147,{"cursor":{"x":60}}],[0.251801,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the teo v                    ",{}]]},"cursor":{"x":61}}],[0.164876,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the teo va                   ",{}]]},"cursor":{"x":62}}],[0.29056,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the teo v                    ",{}]]},"cursor":{"x":61}}],[0.149838,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the teo                      ",{}]]},"cursor":{"x":60}}],[0.151438,{"cursor":{"x":59}}],[0.133316,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the te                       ",{}]]},"cursor":{"x":58}}],[0.133919,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the t                        ",{}]]},"cursor":{"x":57}}],[0.106955,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the tw                       ",{}]]},"cursor":{"x":58}}],[0.112743,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two                      ",{}]]},"cursor":{"x":59}}],[0.127958,{"cursor":{"x":60}}],[0.266651,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two c                    ",{}]]},"cursor":{"x":61}}],[0.361746,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two                      ",{}]]},"cursor":{"x":60}}],[0.078015,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two v                    ",{}]]},"cursor":{"x":61}}],[0.13802,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two va                   ",{}]]},"cursor":{"x":62}}],[0.177598,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two val                  ",{}]]},"cursor":{"x":63}}],[0.10996,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two valu                 ",{}]]},"cursor":{"x":64}}],[0.143166,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two value                ",{}]]},"cursor":{"x":65}}],[0.162785,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values               ",{}]]},"cursor":{"x":66}}],[0.058375,{"cursor":{"x":67}}],[0.145498,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values a             ",{}]]},"cursor":{"x":68}}],[0.224342,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values ar            ",{}]]},"cursor":{"x":69}}],[0.141418,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are           ",{}]]},"cursor":{"x":70}}],[0.057623,{"cursor":{"x":71}}],[0.170615,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are d         ",{}]]},"cursor":{"x":72}}],[0.09549100000000001,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are di        ",{}]]},"cursor":{"x":73}}],[0.149232,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are dif       ",{}]]},"cursor":{"x":74}}],[0.142868,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are diff      ",{}]]},"cursor":{"x":75}}],[0.173147,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are diffe     ",{}]]},"cursor":{"x":76}}],[0.159108,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are differ    ",{}]]},"cursor":{"x":77}}],[0.125503,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are differe   ",{}]]},"cursor":{"x":78}}],[0.10342,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are differen  ",{}]]},"cursor":{"x":79}}],[0.13362,{"lines":{"36":[["(gdb) # we can see that 9 is compared against 15... the two values are different ",{}]]},"cursor":{"x":80}}],[0.143615,{"lines":{"0":[["eax and the function will return false..                                         ",{}]],"1":[["(gdb) stepi                                                                      ",{}]],"2":[["0x080487da in first_check ()                                                     ",{}]],"3":[["(gdb)                                                                            ",{}]],"4":[["0x080487db in first_check ()                                                     ",{}]],"5":[["(gdb)                                                                            ",{}]],"6":[["0x080487dd in first_check ()                                                     ",{}]],"7":[["(gdb) p/d $eax                                                                   ",{}]],"8":[["$1 = 15                                                                          ",{}]],"9":[["(gdb) disas                                                                      ",{}]],"10":[["Dump of assembler code for function first_check:                                 ",{}]],"11":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"12":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"13":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"14":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"15":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"16":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"17":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"18":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"19":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"20":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"21":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"22":[["End of assembler dump.                                                           ",{}]],"23":[["(gdb) stepi                                                                      ",{}]],"24":[["0x080487e0 in first_check ()                                                     ",{}]],"25":[["(gdb) p/d $eax                                                                   ",{}]],"26":[["$2 = 6                                                                           ",{}]],"27":[["(gdb)                                                                            ",{}]],"28":[["$3 = 6                                                                           ",{}]],"29":[["(gdb) stepi                                                                      ",{}]],"30":[["0x080487e3 in first_check ()                                                     ",{}]],"31":[["(gdb) p/d $eax                                                                   ",{}]],"32":[["$4 = 9                                                                           ",{}]],"33":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"34":[["0xbffff3e0:     15                                                               ",{}]],"35":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.127318,{"cursor":{"x":1}}],[0.364459,{"lines":{"36":[[" h                                                                               ",{}]]},"cursor":{"x":2}}],[0.141642,{"lines":{"36":[[" he                                                                              ",{}]]},"cursor":{"x":3}}],[0.118536,{"lines":{"36":[[" hen                                                                             ",{}]]},"cursor":{"x":4}}],[0.08852400000000001,{"lines":{"36":[[" henc                                                                            ",{}]]},"cursor":{"x":5}}],[0.115491,{"lines":{"36":[[" hence                                                                           ",{}]]},"cursor":{"x":6}}],[0.058186,{"cursor":{"x":7}}],[0.450822,{"lines":{"36":[[" hence t                                                                         ",{}]]},"cursor":{"x":8}}],[0.118806,{"lines":{"36":[[" hence th                                                                        ",{}]]},"cursor":{"x":9}}],[0.132876,{"lines":{"36":[[" hence the                                                                       ",{}]]},"cursor":{"x":10}}],[0.081802,{"cursor":{"x":11}}],[0.17907,{"lines":{"36":[[" hence the f                                                                     ",{}]]},"cursor":{"x":12}}],[0.110258,{"lines":{"36":[[" hence the fu                                                                    ",{}]]},"cursor":{"x":13}}],[0.05589,{"lines":{"36":[[" hence the fun                                                                   ",{}]]},"cursor":{"x":14}}],[0.060718,{"lines":{"36":[[" hence the func                                                                  ",{}]]},"cursor":{"x":15}}],[0.213902,{"lines":{"36":[[" hence the funct                                                                 ",{}]]},"cursor":{"x":16}}],[0.086365,{"lines":{"36":[[" hence the functi                                                                ",{}]]},"cursor":{"x":17}}],[0.127617,{"lines":{"36":[[" hence the functio                                                               ",{}]]},"cursor":{"x":18}}],[0.09446400000000001,{"lines":{"36":[[" hence the function                                                              ",{}]]},"cursor":{"x":19}}],[0.071163,{"cursor":{"x":20}}],[0.923681,{"lines":{"36":[[" hence the function w                                                            ",{}]]},"cursor":{"x":21}}],[0.120416,{"lines":{"36":[[" hence the function wi                                                           ",{}]]},"cursor":{"x":22}}],[0.223294,{"lines":{"36":[[" hence the function wil                                                          ",{}]]},"cursor":{"x":23}}],[0.141409,{"lines":{"36":[[" hence the function will                                                         ",{}]]},"cursor":{"x":24}}],[0.111026,{"cursor":{"x":25}}],[0.180013,{"lines":{"36":[[" hence the function will r                                                       ",{}]]},"cursor":{"x":26}}],[0.149063,{"lines":{"36":[[" hence the function will re                                                      ",{}]]},"cursor":{"x":27}}],[0.215714,{"lines":{"36":[[" hence the function will ret                                                     ",{}]]},"cursor":{"x":28}}],[0.054945,{"lines":{"36":[[" hence the function will retu                                                    ",{}]]},"cursor":{"x":29}}],[0.149006,{"lines":{"36":[[" hence the function will retur                                                   ",{}]]},"cursor":{"x":30}}],[0.126781,{"lines":{"36":[[" hence the function will return                                                  ",{}]]},"cursor":{"x":31}}],[0.320613,{"cursor":{"x":32}}],[0.662621,{"lines":{"36":[[" hence the function will return 0                                                ",{}]]},"cursor":{"x":33}}],[0.278642,{"cursor":{"x":34}}],[0.389038,{"lines":{"36":[[" hence the function will return 0 :                                              ",{}]]},"cursor":{"x":35}}],[0.189672,{"lines":{"36":[[" hence the function will return 0 :/                                             ",{}]]},"cursor":{"x":36}}],[0.327017,{"lines":{"0":[["(gdb) stepi                                                                      ",{}]],"1":[["0x080487da in first_check ()                                                     ",{}]],"2":[["(gdb)                                                                            ",{}]],"3":[["0x080487db in first_check ()                                                     ",{}]],"4":[["(gdb)                                                                            ",{}]],"5":[["0x080487dd in first_check ()                                                     ",{}]],"6":[["(gdb) p/d $eax                                                                   ",{}]],"7":[["$1 = 15                                                                          ",{}]],"8":[["(gdb) disas                                                                      ",{}]],"9":[["Dump of assembler code for function first_check:                                 ",{}]],"10":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"11":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"12":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"13":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"14":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"15":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"16":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"17":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"18":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"19":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"20":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"21":[["End of assembler dump.                                                           ",{}]],"22":[["(gdb) stepi                                                                      ",{}]],"23":[["0x080487e0 in first_check ()                                                     ",{}]],"24":[["(gdb) p/d $eax                                                                   ",{}]],"25":[["$2 = 6                                                                           ",{}]],"26":[["(gdb)                                                                            ",{}]],"27":[["$3 = 6                                                                           ",{}]],"28":[["(gdb) stepi                                                                      ",{}]],"29":[["0x080487e3 in first_check ()                                                     ",{}]],"30":[["(gdb) p/d $eax                                                                   ",{}]],"31":[["$4 = 9                                                                           ",{}]],"32":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"33":[["0xbffff3e0:     15                                                               ",{}]],"34":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"35":[[" hence the function will return 0 :/                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.667309,{"lines":{"36":[["(gdb) s                                                                          ",{}]]},"cursor":{"x":7}}],[0.287707,{"lines":{"36":[["(gdb) st                                                                         ",{}]]},"cursor":{"x":8}}],[0.205767,{"lines":{"36":[["(gdb) ste                                                                        ",{}]]},"cursor":{"x":9}}],[0.088743,{"lines":{"36":[["(gdb) step                                                                       ",{}]]},"cursor":{"x":10}}],[0.982806,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.528838,{"lines":{"0":[["(gdb)                                                                            ",{}]],"1":[["0x080487db in first_check ()                                                     ",{}]],"3":[["0x080487dd in first_check ()                                                     ",{}]],"4":[["(gdb) p/d $eax                                                                   ",{}]],"5":[["$1 = 15                                                                          ",{}]],"6":[["(gdb) disas                                                                      ",{}]],"7":[["Dump of assembler code for function first_check:                                 ",{}]],"8":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"9":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"10":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"11":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"12":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"13":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"14":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"15":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"16":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"17":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"18":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"19":[["End of assembler dump.                                                           ",{}]],"20":[["(gdb) stepi                                                                      ",{}]],"21":[["0x080487e0 in first_check ()                                                     ",{}]],"22":[["(gdb) p/d $eax                                                                   ",{}]],"23":[["$2 = 6                                                                           ",{}]],"24":[["(gdb)                                                                            ",{}]],"25":[["$3 = 6                                                                           ",{}]],"26":[["(gdb) stepi                                                                      ",{}]],"27":[["0x080487e3 in first_check ()                                                     ",{}]],"28":[["(gdb) p/d $eax                                                                   ",{}]],"29":[["$4 = 9                                                                           ",{}]],"30":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"31":[["0xbffff3e0:     15                                                               ",{}]],"32":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"33":[[" hence the function will return 0 :/                                             ",{}]],"34":[["(gdb) stepi                                                                      ",{}]],"35":[["0x080487e6 in first_check ()                                                     ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.775596,{"lines":{"1":[["0x080487dd in first_check ()                                                     ",{}]],"2":[["(gdb) p/d $eax                                                                   ",{}]],"3":[["$1 = 15                                                                          ",{}]],"4":[["(gdb) disas                                                                      ",{}]],"5":[["Dump of assembler code for function first_check:                                 ",{}]],"6":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"7":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"8":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"9":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"10":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"11":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"12":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"13":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"14":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"15":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"16":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"17":[["End of assembler dump.                                                           ",{}]],"18":[["(gdb) stepi                                                                      ",{}]],"19":[["0x080487e0 in first_check ()                                                     ",{}]],"20":[["(gdb) p/d $eax                                                                   ",{}]],"21":[["$2 = 6                                                                           ",{}]],"22":[["(gdb)                                                                            ",{}]],"23":[["$3 = 6                                                                           ",{}]],"24":[["(gdb) stepi                                                                      ",{}]],"25":[["0x080487e3 in first_check ()                                                     ",{}]],"26":[["(gdb) p/d $eax                                                                   ",{}]],"27":[["$4 = 9                                                                           ",{}]],"28":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"29":[["0xbffff3e0:     15                                                               ",{}]],"30":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"31":[[" hence the function will return 0 :/                                             ",{}]],"32":[["(gdb) stepi                                                                      ",{}]],"33":[["0x080487e6 in first_check ()                                                     ",{}]],"34":[["(gdb)                                                                            ",{}]],"35":[["0x080487ef in first_check ()                                                     ",{}]]}}],[0.39761,{"lines":{"0":[["(gdb) p/d $eax                                                                   ",{}]],"1":[["$1 = 15                                                                          ",{}]],"2":[["(gdb) disas                                                                      ",{}]],"3":[["Dump of assembler code for function first_check:                                 ",{}]],"4":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"5":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"6":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"7":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"8":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"9":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"10":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"11":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"12":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"13":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"14":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"15":[["End of assembler dump.                                                           ",{}]],"16":[["(gdb) stepi                                                                      ",{}]],"17":[["0x080487e0 in first_check ()                                                     ",{}]],"18":[["(gdb) p/d $eax                                                                   ",{}]],"19":[["$2 = 6                                                                           ",{}]],"20":[["(gdb)                                                                            ",{}]],"21":[["$3 = 6                                                                           ",{}]],"22":[["(gdb) stepi                                                                      ",{}]],"23":[["0x080487e3 in first_check ()                                                     ",{}]],"24":[["(gdb) p/d $eax                                                                   ",{}]],"25":[["$4 = 9                                                                           ",{}]],"26":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"27":[["0xbffff3e0:     15                                                               ",{}]],"28":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"29":[[" hence the function will return 0 :/                                             ",{}]],"30":[["(gdb) stepi                                                                      ",{}]],"31":[["0x080487e6 in first_check ()                                                     ",{}]],"32":[["(gdb)                                                                            ",{}]],"33":[["0x080487ef in first_check ()                                                     ",{}]],"35":[["0x080487f4 in first_check ()                                                     ",{}]]}}],[0.342612,{"lines":{"0":[["(gdb) disas                                                                      ",{}]],"1":[["Dump of assembler code for function first_check:                                 ",{}]],"2":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"3":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"4":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"5":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"6":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"8":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"9":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"10":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"11":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"12":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"13":[["End of assembler dump.                                                           ",{}]],"14":[["(gdb) stepi                                                                      ",{}]],"15":[["0x080487e0 in first_check ()                                                     ",{}]],"16":[["(gdb) p/d $eax                                                                   ",{}]],"17":[["$2 = 6                                                                           ",{}]],"18":[["(gdb)                                                                            ",{}]],"19":[["$3 = 6                                                                           ",{}]],"20":[["(gdb) stepi                                                                      ",{}]],"21":[["0x080487e3 in first_check ()                                                     ",{}]],"22":[["(gdb) p/d $eax                                                                   ",{}]],"23":[["$4 = 9                                                                           ",{}]],"24":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"25":[["0xbffff3e0:     15                                                               ",{}]],"26":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"27":[[" hence the function will return 0 :/                                             ",{}]],"28":[["(gdb) stepi                                                                      ",{}]],"29":[["0x080487e6 in first_check ()                                                     ",{}]],"30":[["(gdb)                                                                            ",{}]],"31":[["0x080487ef in first_check ()                                                     ",{}]],"33":[["0x080487f4 in first_check ()                                                     ",{}]],"35":[["0x080487f5 in first_check ()                                                     ",{}]]}}],[0.543288,{"lines":{"0":[["   0x080487da <+0>:     push   ebp                                               ",{}]],"1":[["   0x080487db <+1>:     mov    ebp,esp                                           ",{}]],"2":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"3":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"4":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"5":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"6":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"7":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"8":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"9":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"10":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"11":[["End of assembler dump.                                                           ",{}]],"12":[["(gdb) stepi                                                                      ",{}]],"13":[["0x080487e0 in first_check ()                                                     ",{}]],"14":[["(gdb) p/d $eax                                                                   ",{}]],"15":[["$2 = 6                                                                           ",{}]],"16":[["(gdb)                                                                            ",{}]],"17":[["$3 = 6                                                                           ",{}]],"18":[["(gdb) stepi                                                                      ",{}]],"19":[["0x080487e3 in first_check ()                                                     ",{}]],"20":[["(gdb) p/d $eax                                                                   ",{}]],"21":[["$4 = 9                                                                           ",{}]],"22":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"23":[["0xbffff3e0:     15                                                               ",{}]],"24":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"25":[[" hence the function will return 0 :/                                             ",{}]],"26":[["(gdb) stepi                                                                      ",{}]],"27":[["0x080487e6 in first_check ()                                                     ",{}]],"28":[["(gdb)                                                                            ",{}]],"29":[["0x080487ef in first_check ()                                                     ",{}]],"31":[["0x080487f4 in first_check ()                                                     ",{}]],"33":[["0x080487f5 in first_check ()                                                     ",{}]],"35":[["0x08048a0e in crackyou ()                                                        ",{}]]}}],[2.681699,{"lines":{"36":[["(gdb) p                                                                          ",{}]]},"cursor":{"x":7}}],[0.28633,{"lines":{"36":[["(gdb) p/                                                                         ",{}]]},"cursor":{"x":8}}],[1.93399,{"lines":{"36":[["(gdb) p/x                                                                        ",{}]]},"cursor":{"x":9}}],[0.161564,{"cursor":{"x":10}}],[1.148474,{"lines":{"36":[["(gdb) p/x $                                                                      ",{}]]},"cursor":{"x":11}}],[0.372283,{"lines":{"36":[["(gdb) p/x $e                                                                     ",{}]]},"cursor":{"x":12}}],[0.181885,{"lines":{"36":[["(gdb) p/x $ea                                                                    ",{}]]},"cursor":{"x":13}}],[0.190862,{"lines":{"36":[["(gdb) p/x $eax                                                                   ",{}]]},"cursor":{"x":14}}],[0.514374,{"lines":{"0":[["=> 0x080487dd <+3>:     mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"1":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"2":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"3":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"4":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"5":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"6":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"7":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"8":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"9":[["End of assembler dump.                                                           ",{}]],"10":[["(gdb) stepi                                                                      ",{}]],"11":[["0x080487e0 in first_check ()                                                     ",{}]],"12":[["(gdb) p/d $eax                                                                   ",{}]],"13":[["$2 = 6                                                                           ",{}]],"14":[["(gdb)                                                                            ",{}]],"15":[["$3 = 6                                                                           ",{}]],"16":[["(gdb) stepi                                                                      ",{}]],"17":[["0x080487e3 in first_check ()                                                     ",{}]],"18":[["(gdb) p/d $eax                                                                   ",{}]],"19":[["$4 = 9                                                                           ",{}]],"20":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"21":[["0xbffff3e0:     15                                                               ",{}]],"22":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"23":[[" hence the function will return 0 :/                                             ",{}]],"24":[["(gdb) stepi                                                                      ",{}]],"25":[["0x080487e6 in first_check ()                                                     ",{}]],"26":[["(gdb)                                                                            ",{}]],"27":[["0x080487ef in first_check ()                                                     ",{}]],"29":[["0x080487f4 in first_check ()                                                     ",{}]],"31":[["0x080487f5 in first_check ()                                                     ",{}]],"33":[["0x08048a0e in crackyou ()                                                        ",{}]],"34":[["(gdb) p/x $eax                                                                   ",{}]],"35":[["$5 = 0x0                                                                         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.497424,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.414949,{"cursor":{"x":8}}],[1.704057,{"lines":{"36":[["(gdb) # o                                                                        ",{}]]},"cursor":{"x":9}}],[0.070329,{"lines":{"36":[["(gdb) # ok                                                                       ",{}]]},"cursor":{"x":10}}],[0.189776,{"lines":{"36":[["(gdb) # ok,                                                                      ",{}]]},"cursor":{"x":11}}],[0.095328,{"cursor":{"x":12}}],[0.1722,{"lines":{"36":[["(gdb) # ok, n                                                                    ",{}]]},"cursor":{"x":13}}],[0.167218,{"lines":{"36":[["(gdb) # ok, no                                                                   ",{}]]},"cursor":{"x":14}}],[0.1106,{"lines":{"36":[["(gdb) # ok, now                                                                  ",{}]]},"cursor":{"x":15}}],[0.071503,{"cursor":{"x":16}}],[0.354785,{"lines":{"36":[["(gdb) # ok, now w                                                                ",{}]]},"cursor":{"x":17}}],[0.141857,{"lines":{"36":[["(gdb) # ok, now we                                                               ",{}]]},"cursor":{"x":18}}],[0.066428,{"cursor":{"x":19}}],[0.187992,{"lines":{"36":[["(gdb) # ok, now we k                                                             ",{}]]},"cursor":{"x":20}}],[0.262063,{"lines":{"36":[["(gdb) # ok, now we kn                                                            ",{}]]},"cursor":{"x":21}}],[0.183129,{"lines":{"36":[["(gdb) # ok, now we kno                                                           ",{}]]},"cursor":{"x":22}}],[0.155673,{"lines":{"36":[["(gdb) # ok, now we know                                                          ",{}]]},"cursor":{"x":23}}],[0.09085799999999999,{"cursor":{"x":24}}],[0.46768,{"lines":{"36":[["(gdb) # ok, now we know t                                                        ",{}]]},"cursor":{"x":25}}],[0.10257,{"lines":{"36":[["(gdb) # ok, now we know th                                                       ",{}]]},"cursor":{"x":26}}],[0.123849,{"lines":{"36":[["(gdb) # ok, now we know tha                                                      ",{}]]},"cursor":{"x":27}}],[0.199889,{"lines":{"36":[["(gdb) # ok, now we know that                                                     ",{}]]},"cursor":{"x":28}}],[0.057097,{"cursor":{"x":29}}],[0.469104,{"lines":{"36":[["(gdb) # ok, now we know that o                                                   ",{}]]},"cursor":{"x":30}}],[0.110196,{"lines":{"36":[["(gdb) # ok, now we know that ou                                                  ",{}]]},"cursor":{"x":31}}],[0.13283,{"lines":{"36":[["(gdb) # ok, now we know that our                                                 ",{}]]},"cursor":{"x":32}}],[0.065359,{"cursor":{"x":33}}],[0.06937500000000001,{"lines":{"36":[["(gdb) # ok, now we know that our p                                               ",{}]]},"cursor":{"x":34}}],[0.121928,{"lines":{"36":[["(gdb) # ok, now we know that our pa                                              ",{}]]},"cursor":{"x":35}}],[0.27126,{"lines":{"36":[["(gdb) # ok, now we know that our pas                                             ",{}]]},"cursor":{"x":36}}],[0.157826,{"lines":{"36":[["(gdb) # ok, now we know that our pass                                            ",{}]]},"cursor":{"x":37}}],[0.134518,{"lines":{"36":[["(gdb) # ok, now we know that our passw                                           ",{}]]},"cursor":{"x":38}}],[0.102237,{"lines":{"36":[["(gdb) # ok, now we know that our passwo                                          ",{}]]},"cursor":{"x":39}}],[0.102968,{"lines":{"36":[["(gdb) # ok, now we know that our passwor                                         ",{}]]},"cursor":{"x":40}}],[0.173768,{"lines":{"36":[["(gdb) # ok, now we know that our password                                        ",{}]]},"cursor":{"x":41}}],[0.033929,{"cursor":{"x":42}}],[0.524226,{"lines":{"36":[["(gdb) # ok, now we know that our password m                                      ",{}]]},"cursor":{"x":43}}],[0.229983,{"lines":{"36":[["(gdb) # ok, now we know that our password mu                                     ",{}]]},"cursor":{"x":44}}],[0.108776,{"lines":{"36":[["(gdb) # ok, now we know that our password mus                                    ",{}]]},"cursor":{"x":45}}],[0.231443,{"lines":{"36":[["(gdb) # ok, now we know that our password must                                   ",{}]]},"cursor":{"x":46}}],[0.118317,{"cursor":{"x":47}}],[0.422574,{"lines":{"36":[["(gdb) # ok, now we know that our password must b                                 ",{}]]},"cursor":{"x":48}}],[0.149602,{"lines":{"36":[["(gdb) # ok, now we know that our password must be                                ",{}]]},"cursor":{"x":49}}],[0.06708600000000001,{"cursor":{"x":50}}],[0.37964,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9                              ",{}]]},"cursor":{"x":51}}],[0.399961,{"cursor":{"x":52}}],[0.235069,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 c                            ",{}]]},"cursor":{"x":53}}],[0.079802,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 ch                           ",{}]]},"cursor":{"x":54}}],[0.094012,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 cha                          ",{}]]},"cursor":{"x":55}}],[0.237649,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 char                         ",{}]]},"cursor":{"x":56}}],[0.20498,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 chars                        ",{}]]},"cursor":{"x":57}}],[0.058288,{"cursor":{"x":58}}],[0.180651,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 chars l                      ",{}]]},"cursor":{"x":59}}],[0.175091,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 chars lo                     ",{}]]},"cursor":{"x":60}}],[0.085074,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 chars lon                    ",{}]]},"cursor":{"x":61}}],[0.112486,{"lines":{"36":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]]},"cursor":{"x":62}}],[1.191101,{"lines":{"0":[["   0x080487e0 <+6>:     add    eax,0x3                                           ",{}]],"1":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"2":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"3":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"4":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"5":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"6":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"7":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"8":[["End of assembler dump.                                                           ",{}]],"9":[["(gdb) stepi                                                                      ",{}]],"10":[["0x080487e0 in first_check ()                                                     ",{}]],"11":[["(gdb) p/d $eax                                                                   ",{}]],"12":[["$2 = 6                                                                           ",{}]],"13":[["(gdb)                                                                            ",{}]],"14":[["$3 = 6                                                                           ",{}]],"15":[["(gdb) stepi                                                                      ",{}]],"16":[["0x080487e3 in first_check ()                                                     ",{}]],"17":[["(gdb) p/d $eax                                                                   ",{}]],"18":[["$4 = 9                                                                           ",{}]],"19":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"20":[["0xbffff3e0:     15                                                               ",{}]],"21":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"22":[[" hence the function will return 0 :/                                             ",{}]],"23":[["(gdb) stepi                                                                      ",{}]],"24":[["0x080487e6 in first_check ()                                                     ",{}]],"25":[["(gdb)                                                                            ",{}]],"26":[["0x080487ef in first_check ()                                                     ",{}]],"27":[["(gdb)                                                                            ",{}]],"28":[["0x080487f4 in first_check ()                                                     ",{}]],"29":[["(gdb)                                                                            ",{}]],"30":[["0x080487f5 in first_check ()                                                     ",{}]],"31":[["(gdb)                                                                            ",{}]],"32":[["0x08048a0e in crackyou ()                                                        ",{}]],"33":[["(gdb) p/x $eax                                                                   ",{}]],"34":[["$5 = 0x0                                                                         ",{}]],"35":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.056708,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.503481,{"cursor":{"x":8}}],[0.387194,{"lines":{"36":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.134207,{"lines":{"36":[["(gdb) # we                                                                       ",{}]]},"cursor":{"x":10}}],[0.074652,{"cursor":{"x":11}}],[0.193521,{"lines":{"36":[["(gdb) # we s                                                                     ",{}]]},"cursor":{"x":12}}],[0.134448,{"lines":{"36":[["(gdb) # we se                                                                    ",{}]]},"cursor":{"x":13}}],[0.199099,{"lines":{"36":[["(gdb) # we set                                                                   ",{}]]},"cursor":{"x":14}}],[0.08162800000000001,{"cursor":{"x":15}}],[0.938485,{"lines":{"36":[["(gdb) # we set a                                                                 ",{}]]},"cursor":{"x":16}}],[0.066815,{"cursor":{"x":17}}],[0.651425,{"lines":{"36":[["(gdb) # we set a b                                                               ",{}]]},"cursor":{"x":18}}],[0.110283,{"lines":{"36":[["(gdb) # we set a br                                                              ",{}]]},"cursor":{"x":19}}],[0.166063,{"lines":{"36":[["(gdb) # we set a bre                                                             ",{}]]},"cursor":{"x":20}}],[0.148902,{"lines":{"36":[["(gdb) # we set a brea                                                            ",{}]]},"cursor":{"x":21}}],[0.137156,{"lines":{"36":[["(gdb) # we set a break                                                           ",{}]]},"cursor":{"x":22}}],[0.198882,{"lines":{"36":[["(gdb) # we set a breakp                                                          ",{}]]},"cursor":{"x":23}}],[0.173873,{"lines":{"36":[["(gdb) # we set a breakpo                                                         ",{}]]},"cursor":{"x":24}}],[0.20593,{"lines":{"36":[["(gdb) # we set a breakpoi                                                        ",{}]]},"cursor":{"x":25}}],[0.070261,{"lines":{"36":[["(gdb) # we set a breakpoin                                                       ",{}]]},"cursor":{"x":26}}],[0.140945,{"lines":{"36":[["(gdb) # we set a breakpoint                                                      ",{}]]},"cursor":{"x":27}}],[0.138357,{"cursor":{"x":28}}],[1.186865,{"lines":{"36":[["(gdb) # we set a breakpoint a                                                    ",{}]]},"cursor":{"x":29}}],[0.191621,{"lines":{"36":[["(gdb) # we set a breakpoint af                                                   ",{}]]},"cursor":{"x":30}}],[0.15839,{"lines":{"36":[["(gdb) # we set a breakpoint aft                                                  ",{}]]},"cursor":{"x":31}}],[0.205436,{"lines":{"36":[["(gdb) # we set a breakpoint afte                                                 ",{}]]},"cursor":{"x":32}}],[0.111096,{"lines":{"36":[["(gdb) # we set a breakpoint after                                                ",{}]]},"cursor":{"x":33}}],[0.089115,{"cursor":{"x":34}}],[0.202795,{"lines":{"36":[["(gdb) # we set a breakpoint after t                                              ",{}]]},"cursor":{"x":35}}],[0.247171,{"lines":{"36":[["(gdb) # we set a breakpoint after th                                             ",{}]]},"cursor":{"x":36}}],[0.149485,{"lines":{"36":[["(gdb) # we set a breakpoint after the                                            ",{}]]},"cursor":{"x":37}}],[0.089809,{"cursor":{"x":38}}],[0.467615,{"lines":{"36":[["(gdb) # we set a breakpoint after the f                                          ",{}]]},"cursor":{"x":39}}],[0.086185,{"lines":{"36":[["(gdb) # we set a breakpoint after the fi                                         ",{}]]},"cursor":{"x":40}}],[0.087934,{"lines":{"36":[["(gdb) # we set a breakpoint after the fir                                        ",{}]]},"cursor":{"x":41}}],[0.187162,{"lines":{"36":[["(gdb) # we set a breakpoint after the firs                                       ",{}]]},"cursor":{"x":42}}],[0.231228,{"lines":{"36":[["(gdb) # we set a breakpoint after the first                                      ",{}]]},"cursor":{"x":43}}],[0.368,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_                                     ",{}]]},"cursor":{"x":44}}],[0.242637,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_c                                    ",{}]]},"cursor":{"x":45}}],[0.095273,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_ch                                   ",{}]]},"cursor":{"x":46}}],[0.085634,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_che                                  ",{}]]},"cursor":{"x":47}}],[0.141774,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_chec                                 ",{}]]},"cursor":{"x":48}}],[0.101948,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check                                ",{}]]},"cursor":{"x":49}}],[0.112749,{"cursor":{"x":50}}],[0.235798,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check c                              ",{}]]},"cursor":{"x":51}}],[0.173268,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check ca                             ",{}]]},"cursor":{"x":52}}],[0.209332,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check cal                            ",{}]]},"cursor":{"x":53}}],[0.134311,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call                           ",{}]]},"cursor":{"x":54}}],[0.49579,{"cursor":{"x":55}}],[0.410975,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call a                         ",{}]]},"cursor":{"x":56}}],[0.985664,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call an                        ",{}]]},"cursor":{"x":57}}],[0.124833,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and                       ",{}]]},"cursor":{"x":58}}],[0.065633,{"cursor":{"x":59}}],[0.779447,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and w                     ",{}]]},"cursor":{"x":60}}],[0.142572,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we                    ",{}]]},"cursor":{"x":61}}],[0.117923,{"cursor":{"x":62}}],[0.118774,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we e                  ",{}]]},"cursor":{"x":63}}],[0.213674,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we ex                 ",{}]]},"cursor":{"x":64}}],[0.16721,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we exe                ",{}]]},"cursor":{"x":65}}],[0.173283,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we exec               ",{}]]},"cursor":{"x":66}}],[0.167584,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execu              ",{}]]},"cursor":{"x":67}}],[0.141696,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execut             ",{}]]},"cursor":{"x":68}}],[0.213618,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute            ",{}]]},"cursor":{"x":69}}],[0.058021,{"cursor":{"x":70}}],[0.259075,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute t          ",{}]]},"cursor":{"x":71}}],[0.095082,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute th         ",{}]]},"cursor":{"x":72}}],[0.236996,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the        ",{}]]},"cursor":{"x":73}}],[0.09823900000000001,{"cursor":{"x":74}}],[0.332951,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the p      ",{}]]},"cursor":{"x":75}}],[0.188295,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the pr     ",{}]]},"cursor":{"x":76}}],[0.095932,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the pro    ",{}]]},"cursor":{"x":77}}],[0.120228,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the prog   ",{}]]},"cursor":{"x":78}}],[0.154405,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the progr  ",{}]]},"cursor":{"x":79}}],[0.164829,{"lines":{"36":[["(gdb) # we set a breakpoint after the first_check call and we execute the progra ",{}]]},"cursor":{"x":80}}],[0.304999,{"lines":{"0":[["   0x080487e3 <+9>:     cmp    eax,DWORD PTR [ebp+0x8]                           ",{}]],"1":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"2":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"3":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"4":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"5":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"6":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"7":[["End of assembler dump.                                                           ",{}]],"8":[["(gdb) stepi                                                                      ",{}]],"9":[["0x080487e0 in first_check ()                                                     ",{}]],"10":[["(gdb) p/d $eax                                                                   ",{}]],"11":[["$2 = 6                                                                           ",{}]],"12":[["(gdb)                                                                            ",{}]],"13":[["$3 = 6                                                                           ",{}]],"14":[["(gdb) stepi                                                                      ",{}]],"15":[["0x080487e3 in first_check ()                                                     ",{}]],"16":[["(gdb) p/d $eax                                                                   ",{}]],"17":[["$4 = 9                                                                           ",{}]],"18":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"19":[["0xbffff3e0:     15                                                               ",{}]],"20":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"21":[[" hence the function will return 0 :/                                             ",{}]],"22":[["(gdb) stepi                                                                      ",{}]],"23":[["0x080487e6 in first_check ()                                                     ",{}]],"24":[["(gdb)                                                                            ",{}]],"25":[["0x080487ef in first_check ()                                                     ",{}]],"26":[["(gdb)                                                                            ",{}]],"27":[["0x080487f4 in first_check ()                                                     ",{}]],"28":[["(gdb)                                                                            ",{}]],"29":[["0x080487f5 in first_check ()                                                     ",{}]],"30":[["(gdb)                                                                            ",{}]],"31":[["0x08048a0e in crackyou ()                                                        ",{}]],"32":[["(gdb) p/x $eax                                                                   ",{}]],"33":[["$5 = 0x0                                                                         ",{}]],"34":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"35":[["(gdb) # we set a breakpoint after the first_check call and we execute the program",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.151654,{"cursor":{"x":1}}],[0.202414,{"lines":{"36":[[" a                                                                               ",{}]]},"cursor":{"x":2}}],[0.248202,{"lines":{"36":[[" ag                                                                              ",{}]]},"cursor":{"x":3}}],[0.148591,{"lines":{"36":[[" aga                                                                             ",{}]]},"cursor":{"x":4}}],[0.321255,{"lines":{"36":[[" agai                                                                            ",{}]]},"cursor":{"x":5}}],[0.237652,{"lines":{"36":[[" again                                                                           ",{}]]},"cursor":{"x":6}}],[0.216422,{"cursor":{"x":7}}],[0.845492,{"lines":{"36":[[" again u                                                                         ",{}]]},"cursor":{"x":8}}],[0.124278,{"lines":{"36":[[" again us                                                                        ",{}]]},"cursor":{"x":9}}],[0.104596,{"lines":{"36":[[" again usi                                                                       ",{}]]},"cursor":{"x":10}}],[0.062387,{"lines":{"36":[[" again usin                                                                      ",{}]]},"cursor":{"x":11}}],[0.141339,{"lines":{"36":[[" again using                                                                     ",{}]]},"cursor":{"x":12}}],[0.07272199999999999,{"cursor":{"x":13}}],[0.682152,{"lines":{"36":[[" again using a                                                                   ",{}]]},"cursor":{"x":14}}],[0.107399,{"cursor":{"x":15}}],[0.180925,{"lines":{"36":[[" again using a p                                                                 ",{}]]},"cursor":{"x":16}}],[0.080058,{"lines":{"36":[[" again using a pa                                                                ",{}]]},"cursor":{"x":17}}],[0.217398,{"lines":{"36":[[" again using a pas                                                               ",{}]]},"cursor":{"x":18}}],[0.142207,{"lines":{"36":[[" again using a pass                                                              ",{}]]},"cursor":{"x":19}}],[0.150023,{"lines":{"36":[[" again using a passw                                                             ",{}]]},"cursor":{"x":20}}],[0.094651,{"lines":{"36":[[" again using a passwo                                                            ",{}]]},"cursor":{"x":21}}],[0.118993,{"lines":{"36":[[" again using a passwor                                                           ",{}]]},"cursor":{"x":22}}],[0.173772,{"lines":{"36":[[" again using a password                                                          ",{}]]},"cursor":{"x":23}}],[0.081872,{"cursor":{"x":24}}],[0.22871,{"lines":{"36":[[" again using a password o                                                        ",{}]]},"cursor":{"x":25}}],[0.100207,{"lines":{"36":[[" again using a password of                                                       ",{}]]},"cursor":{"x":26}}],[0.065549,{"cursor":{"x":27}}],[0.201713,{"lines":{"36":[[" again using a password of a                                                     ",{}]]},"cursor":{"x":28}}],[0.218752,{"cursor":{"x":29}}],[0.407066,{"cursor":{"x":28}}],[0.132946,{"lines":{"36":[[" again using a password of                                                       ",{}]]},"cursor":{"x":27}}],[0.500918,{"lines":{"36":[[" again using a password of t                                                     ",{}]]},"cursor":{"x":28}}],[0.150441,{"lines":{"36":[[" again using a password of th                                                    ",{}]]},"cursor":{"x":29}}],[0.140932,{"lines":{"36":[[" again using a password of the                                                   ",{}]]},"cursor":{"x":30}}],[0.098258,{"cursor":{"x":31}}],[1.49307,{"lines":{"36":[[" again using a password of the c                                                 ",{}]]},"cursor":{"x":32}}],[0.264132,{"lines":{"36":[[" again using a password of the co                                                ",{}]]},"cursor":{"x":33}}],[0.172578,{"lines":{"36":[[" again using a password of the cor                                               ",{}]]},"cursor":{"x":34}}],[0.142589,{"lines":{"36":[[" again using a password of the corr                                              ",{}]]},"cursor":{"x":35}}],[0.221615,{"lines":{"36":[[" again using a password of the corre                                             ",{}]]},"cursor":{"x":36}}],[0.911666,{"lines":{"36":[[" again using a password of the correc                                            ",{}]]},"cursor":{"x":37}}],[0.23084,{"lines":{"36":[[" again using a password of the correct                                           ",{}]]},"cursor":{"x":38}}],[0.089542,{"cursor":{"x":39}}],[0.132762,{"lines":{"36":[[" again using a password of the correct l                                         ",{}]]},"cursor":{"x":40}}],[0.163372,{"lines":{"36":[[" again using a password of the correct le                                        ",{}]]},"cursor":{"x":41}}],[0.488255,{"lines":{"36":[[" again using a password of the correct len                                       ",{}]]},"cursor":{"x":42}}],[0.132996,{"lines":{"36":[[" again using a password of the correct leng                                      ",{}]]},"cursor":{"x":43}}],[0.18282,{"lines":{"36":[[" again using a password of the correct lengt                                     ",{}]]},"cursor":{"x":44}}],[0.110458,{"lines":{"36":[[" again using a password of the correct length                                    ",{}]]},"cursor":{"x":45}}],[0.328665,{"lines":{"0":[["   0x080487e6 <+12>:    jne    0x80487ef <first_check+21>                        ",{}]],"1":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"2":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"3":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"4":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"5":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"6":[["End of assembler dump.                                                           ",{}]],"7":[["(gdb) stepi                                                                      ",{}]],"8":[["0x080487e0 in first_check ()                                                     ",{}]],"9":[["(gdb) p/d $eax                                                                   ",{}]],"10":[["$2 = 6                                                                           ",{}]],"11":[["(gdb)                                                                            ",{}]],"12":[["$3 = 6                                                                           ",{}]],"13":[["(gdb) stepi                                                                      ",{}]],"14":[["0x080487e3 in first_check ()                                                     ",{}]],"15":[["(gdb) p/d $eax                                                                   ",{}]],"16":[["$4 = 9                                                                           ",{}]],"17":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"18":[["0xbffff3e0:     15                                                               ",{}]],"19":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"20":[[" hence the function will return 0 :/                                             ",{}]],"21":[["(gdb) stepi                                                                      ",{}]],"22":[["0x080487e6 in first_check ()                                                     ",{}]],"23":[["(gdb)                                                                            ",{}]],"24":[["0x080487ef in first_check ()                                                     ",{}]],"25":[["(gdb)                                                                            ",{}]],"26":[["0x080487f4 in first_check ()                                                     ",{}]],"27":[["(gdb)                                                                            ",{}]],"28":[["0x080487f5 in first_check ()                                                     ",{}]],"29":[["(gdb)                                                                            ",{}]],"30":[["0x08048a0e in crackyou ()                                                        ",{}]],"31":[["(gdb) p/x $eax                                                                   ",{}]],"32":[["$5 = 0x0                                                                         ",{}]],"33":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"34":[["(gdb) # we set a breakpoint after the first_check call and we execute the program",{}]],"35":[[" again using a password of the correct length                                    ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.165248,{"lines":{"36":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.081888,{"cursor":{"x":8}}],[0.958635,{"cursor":{"x":7}}],[0.284416,{"lines":{"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.158083,{}],[0.5479540000000001,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.166606,{"lines":{"36":[["(gdb) de                                                                         ",{}]]},"cursor":{"x":8}}],[0.079517,{"lines":{"36":[["(gdb) del                                                                        ",{}]]},"cursor":{"x":9}}],[0.061164,{"lines":{"36":[["(gdb) dele                                                                       ",{}]]},"cursor":{"x":10}}],[0.253951,{"lines":{"36":[["(gdb) delet                                                                      ",{}]]},"cursor":{"x":11}}],[0.254211,{"lines":{"36":[["(gdb) delete                                                                     ",{}]]},"cursor":{"x":12}}],[0.409474,{"lines":{"0":[["   0x080487e8 <+14>:    mov    eax,0x1                                           ",{}]],"1":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"2":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"3":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"4":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"5":[["End of assembler dump.                                                           ",{}]],"6":[["(gdb) stepi                                                                      ",{}]],"7":[["0x080487e0 in first_check ()                                                     ",{}]],"8":[["(gdb) p/d $eax                                                                   ",{}]],"9":[["$2 = 6                                                                           ",{}]],"10":[["(gdb)                                                                            ",{}]],"11":[["$3 = 6                                                                           ",{}]],"12":[["(gdb) stepi                                                                      ",{}]],"13":[["0x080487e3 in first_check ()                                                     ",{}]],"14":[["(gdb) p/d $eax                                                                   ",{}]],"15":[["$4 = 9                                                                           ",{}]],"16":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"17":[["0xbffff3e0:     15                                                               ",{}]],"18":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"19":[[" hence the function will return 0 :/                                             ",{}]],"20":[["(gdb) stepi                                                                      ",{}]],"21":[["0x080487e6 in first_check ()                                                     ",{}]],"22":[["(gdb)                                                                            ",{}]],"23":[["0x080487ef in first_check ()                                                     ",{}]],"24":[["(gdb)                                                                            ",{}]],"25":[["0x080487f4 in first_check ()                                                     ",{}]],"26":[["(gdb)                                                                            ",{}]],"27":[["0x080487f5 in first_check ()                                                     ",{}]],"28":[["(gdb)                                                                            ",{}]],"29":[["0x08048a0e in crackyou ()                                                        ",{}]],"30":[["(gdb) p/x $eax                                                                   ",{}]],"31":[["$5 = 0x0                                                                         ",{}]],"32":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"33":[["(gdb) # we set a breakpoint after the first_check call and we execute the program",{}]],"34":[[" again using a password of the correct length                                    ",{}]],"35":[["(gdb) delete                                                                     ",{}]],"36":[["Delete all breakpoints? (y or n)                                                 ",{}]]},"cursor":{"x":33}}],[0.925551,{"lines":{"36":[["Delete all breakpoints? (y or n) y                                               ",{}]]},"cursor":{"x":34}}],[0.119729,{"lines":{"0":[["   0x080487ed <+19>:    jmp    0x80487f4 <first_check+26>                        ",{}]],"1":[["   0x080487ef <+21>:    mov    eax,0x0                                           ",{}]],"2":[["   0x080487f4 <+26>:    pop    ebp                                               ",{}]],"3":[["   0x080487f5 <+27>:    ret                                                      ",{}]],"4":[["End of assembler dump.                                                           ",{}]],"5":[["(gdb) stepi                                                                      ",{}]],"6":[["0x080487e0 in first_check ()                                                     ",{}]],"7":[["(gdb) p/d $eax                                                                   ",{}]],"8":[["$2 = 6                                                                           ",{}]],"9":[["(gdb)                                                                            ",{}]],"10":[["$3 = 6                                                                           ",{}]],"11":[["(gdb) stepi                                                                      ",{}]],"12":[["0x080487e3 in first_check ()                                                     ",{}]],"13":[["(gdb) p/d $eax                                                                   ",{}]],"14":[["$4 = 9                                                                           ",{}]],"15":[["(gdb) x/d $ebp+0x8                                                               ",{}]],"16":[["0xbffff3e0:     15                                                               ",{}]],"17":[["(gdb) # we can see that 9 is compared against 15... the two values are different,",{}]],"18":[[" hence the function will return 0 :/                                             ",{}]],"19":[["(gdb) stepi                                                                      ",{}]],"20":[["0x080487e6 in first_check ()                                                     ",{}]],"21":[["(gdb)                                                                            ",{}]],"22":[["0x080487ef in first_check ()                                                     ",{}]],"23":[["(gdb)                                                                            ",{}]],"24":[["0x080487f4 in first_check ()                                                     ",{}]],"25":[["(gdb)                                                                            ",{}]],"26":[["0x080487f5 in first_check ()                                                     ",{}]],"27":[["(gdb)                                                                            ",{}]],"28":[["0x08048a0e in crackyou ()                                                        ",{}]],"29":[["(gdb) p/x $eax                                                                   ",{}]],"30":[["$5 = 0x0                                                                         ",{}]],"31":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"32":[["(gdb) # we set a breakpoint after the first_check call and we execute the program",{}]],"33":[[" again using a password of the correct length                                    ",{}]],"34":[["(gdb) delete                                                                     ",{}]],"35":[["Delete all breakpoints? (y or n) y                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.7564340000000001,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.048757,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.163225,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.181624,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.159024,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.163,{"lines":{"0":[["0x080487ef in first_check ()                                                     ",{}]],"1":[["(gdb)                                                                            ",{}]],"2":[["0x080487f4 in first_check ()                                                     ",{}]],"3":[["(gdb)                                                                            ",{}]],"4":[["0x080487f5 in first_check ()                                                     ",{}]],"5":[["(gdb)                                                                            ",{}]],"6":[["0x08048a0e in crackyou ()                                                        ",{}]],"7":[["(gdb) p/x $eax                                                                   ",{}]],"8":[["$5 = 0x0                                                                         ",{}]],"9":[["(gdb) # ok, now we know that our password must be 9 chars long                   ",{}]],"10":[["(gdb) # we set a breakpoint after the first_check call and we execute the program",{}]],"11":[[" again using a password of the correct length                                    ",{}]],"12":[["(gdb) delete                                                                     ",{}]],"13":[["Delete all breakpoints? (y or n) y                                               ",{}]],"14":[["(gdb) disas                                                                      ",{}]],"15":[["Dump of assembler code for function crackyou:                                    ",{}]],"16":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"17":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"18":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"19":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"20":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"21":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"22":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"23":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"24":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"26":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"27":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"28":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"29":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"30":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"31":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"32":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"33":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"34":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"35":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"36":[["   0x08048969 <+65>:    mov    B                                                 ",{}]]},"cursor":{"x":32}}],[3.4e-05,{"lines":{"0":[["Dump of assembler code for function crackyou:                                    ",{}]],"1":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"2":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"4":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"5":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"6":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"8":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"9":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"10":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"11":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"12":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"13":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"14":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"15":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"16":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"17":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"18":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"19":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"20":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"21":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"22":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"23":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"24":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"25":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"26":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"27":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"28":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"29":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"30":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"31":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"32":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"33":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"34":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"35":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.623122,{"lines":{"0":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"1":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"2":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"3":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"4":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"5":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"6":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"7":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"8":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"9":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"10":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"11":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"12":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"13":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"14":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"15":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"18":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"19":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"20":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"21":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"22":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"23":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"24":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"26":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"27":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"30":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"31":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"32":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"33":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"34":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"35":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"36":[["   0x0                                                                           ",{}]]},"cursor":{"x":6}}],[5.1e-05,{"lines":{"0":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"1":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"2":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"3":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"4":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"5":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"6":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"7":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"9":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"10":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"15":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"18":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"19":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"20":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"21":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"24":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"26":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"27":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"28":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"29":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"30":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"31":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"32":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"33":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"34":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"35":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.938154,{"lines":{"36":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]]},"cursor":{"x":55}}],[0.466116,{"lines":{"0":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"1":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"2":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"3":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"4":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"5":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"7":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"8":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"9":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"10":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"12":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"13":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"16":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"17":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"18":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"19":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"20":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"21":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"22":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"24":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"25":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"26":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"27":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"28":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"29":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"30":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"31":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"32":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"33":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"34":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"35":[["Quit                                                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[4.483232,{"lines":{"36":[["(gdb) b                                                                          ",{}]]},"cursor":{"x":7}}],[0.128358,{"cursor":{"x":8}}],[0.348292,{"lines":{"36":[["(gdb) b *                                                                        ",{}]]},"cursor":{"x":9}}],[0.476083,{"lines":{"36":[["(gdb) b *0x08048a0e                                                              ",{}]]},"cursor":{"x":19}}],[0.66893,{"lines":{"0":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"1":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"2":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"3":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"5":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"6":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"7":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"8":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"10":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"11":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"12":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"15":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"16":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"17":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"18":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"19":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"20":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"22":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"23":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"24":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"25":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"26":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"27":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"30":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"31":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"32":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"33":[["Quit                                                                             ",{}]],"34":[["(gdb) b *0x08048a0e                                                              ",{}]],"35":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.356418,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.184916,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.293473,{"lines":{"36":[["(gdb) x/i                                                                        ",{}]]},"cursor":{"x":9}}],[0.095377,{"cursor":{"x":10}}],[0.700103,{"lines":{"36":[["(gdb) x/i 0x08048a0e                                                             ",{}]]},"cursor":{"x":20}}],[1.414076,{"lines":{"0":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"1":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"3":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"4":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"5":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"6":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"8":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"9":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"10":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"12":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"13":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"14":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"15":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"16":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"17":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"18":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"20":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"21":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"22":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"23":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"24":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"25":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"26":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"27":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"28":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"29":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"30":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"31":[["Quit                                                                             ",{}]],"32":[["(gdb) b *0x08048a0e                                                              ",{}]],"33":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"34":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"35":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.384605,{"lines":{"36":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.120112,{"cursor":{"x":8}}],[1.314614,{"lines":{"36":[["(gdb) r A                                                                        ",{}]]},"cursor":{"x":9}}],[0.406727,{"lines":{"36":[["(gdb) r AA                                                                       ",{}]]},"cursor":{"x":10}}],[0.39797,{"lines":{"36":[["(gdb) r AAA                                                                      ",{}]]},"cursor":{"x":11}}],[2.55202,{"lines":{"36":[["(gdb) r AAAAAA                                                                   ",{}]]},"cursor":{"x":14}}],[0.523028,{"lines":{"36":[["(gdb) r AAAAAAAAA                                                                ",{}]]},"cursor":{"x":17}}],[1.813575,{"lines":{"0":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"1":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"2":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"3":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"4":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"6":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"7":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"8":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"10":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"11":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"12":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"13":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"14":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"15":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"16":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"18":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"19":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"20":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"21":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"22":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"23":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"24":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"25":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"26":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"27":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"28":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"29":[["Quit                                                                             ",{}]],"30":[["(gdb) b *0x08048a0e                                                              ",{}]],"31":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"32":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"33":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"34":[["(gdb) r AAAAAAAAA                                                                ",{}]],"35":[["The program being debugged has been started already.                             ",{}]],"36":[["Start it from the beginning? (y or n)                                            ",{}]]},"cursor":{"x":38}}],[1.221906,{"lines":{"36":[["Start it from the beginning? (y or n) y                                          ",{}]]},"cursor":{"x":39}}],[0.633327,{"lines":{"0":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"1":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"2":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"3":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"6":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"9":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"10":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"11":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"12":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"13":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"14":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"15":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"17":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"18":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"19":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"20":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"21":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"23":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"24":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"25":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"26":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"28":[["Quit                                                                             ",{}]],"29":[["(gdb) b *0x08048a0e                                                              ",{}]],"30":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"31":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"32":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"33":[["(gdb) r AAAAAAAAA                                                                ",{}]],"34":[["The program being debugged has been started already.                             ",{}]],"35":[["Start it from the beginning? (y or n) y                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.007541,{"lines":{"0":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"1":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"2":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"3":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"5":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"6":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"7":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"8":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"9":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"10":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"11":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"13":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"14":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"15":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"16":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"17":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"18":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"19":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"20":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"21":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"22":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"23":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"24":[["Quit                                                                             ",{}]],"25":[["(gdb) b *0x08048a0e                                                              ",{}]],"26":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"27":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"28":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"29":[["(gdb) r AAAAAAAAA                                                                ",{}]],"30":[["The program being debugged has been started already.                             ",{}]],"31":[["Start it from the beginning? (y or n) y                                          ",{}]],"32":[["                                                                                 ",{}]],"33":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"34":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"35":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]]}}],[0.035466,{"lines":{"0":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"1":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"2":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"4":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"5":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"6":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"7":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"8":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"9":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"10":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"12":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"13":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"14":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"15":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"16":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"17":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"18":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"19":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"20":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"21":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"22":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"23":[["Quit                                                                             ",{}]],"24":[["(gdb) b *0x08048a0e                                                              ",{}]],"25":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"26":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"27":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"28":[["(gdb) r AAAAAAAAA                                                                ",{}]],"29":[["The program being debugged has been started already.                             ",{}]],"30":[["Start it from the beginning? (y or n) y                                          ",{}]],"31":[["                                                                                 ",{}]],"32":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"33":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"34":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"35":[["                                                                                 ",{}]]}}],[0.000292,{"lines":{"0":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"1":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"3":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"4":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"5":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"6":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"7":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"8":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"9":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"11":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"12":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"13":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"14":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"15":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"16":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"17":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"18":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"19":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"20":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"21":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"22":[["Quit                                                                             ",{}]],"23":[["(gdb) b *0x08048a0e                                                              ",{}]],"24":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"25":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"26":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"27":[["(gdb) r AAAAAAAAA                                                                ",{}]],"28":[["The program being debugged has been started already.                             ",{}]],"29":[["Start it from the beginning? (y or n) y                                          ",{}]],"30":[["                                                                                 ",{}]],"31":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"32":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"33":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 3, 0x08048a0e in crackyou ()                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.069406,{"lines":{"36":[["(gdb) p                                                                          ",{}]]},"cursor":{"x":7}}],[0.502543,{"lines":{"36":[["(gdb) p/                                                                         ",{}]]},"cursor":{"x":8}}],[0.748417,{"lines":{"36":[["(gdb) p/d                                                                        ",{}]]},"cursor":{"x":9}}],[0.241622,{"cursor":{"x":10}}],[1.060456,{"lines":{"36":[["(gdb) p/d $                                                                      ",{}]]},"cursor":{"x":11}}],[0.549331,{"lines":{"36":[["(gdb) p/d $e                                                                     ",{}]]},"cursor":{"x":12}}],[0.180952,{"lines":{"36":[["(gdb) p/d $ea                                                                    ",{}]]},"cursor":{"x":13}}],[0.206942,{"lines":{"36":[["(gdb) p/d $eax                                                                   ",{}]]},"cursor":{"x":14}}],[2.782616,{"lines":{"0":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"1":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"2":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"3":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"4":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"5":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"6":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"7":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"9":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"10":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"11":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"12":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"13":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"14":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"15":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"16":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"17":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"18":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"19":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"20":[["Quit                                                                             ",{}]],"21":[["(gdb) b *0x08048a0e                                                              ",{}]],"22":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"23":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"24":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"25":[["(gdb) r AAAAAAAAA                                                                ",{}]],"26":[["The program being debugged has been started already.                             ",{}]],"27":[["Start it from the beginning? (y or n) y                                          ",{}]],"28":[["                                                                                 ",{}]],"29":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"30":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"31":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"32":[["                                                                                 ",{}]],"33":[["Breakpoint 3, 0x08048a0e in crackyou ()                                          ",{}]],"34":[["(gdb) p/d $eax                                                                   ",{}]],"35":[["$6 = 1                                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.495504,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.495516,{"cursor":{"x":8}}],[0.668432,{"lines":{"36":[["(gdb) # g                                                                        ",{}]]},"cursor":{"x":9}}],[0.197431,{"lines":{"36":[["(gdb) # gr                                                                       ",{}]]},"cursor":{"x":10}}],[0.158209,{"lines":{"36":[["(gdb) # gre                                                                      ",{}]]},"cursor":{"x":11}}],[0.125136,{"lines":{"36":[["(gdb) # grea                                                                     ",{}]]},"cursor":{"x":12}}],[0.215698,{"lines":{"36":[["(gdb) # great                                                                    ",{}]]},"cursor":{"x":13}}],[0.389463,{"lines":{"36":[["(gdb) # great\"                                                                   ",{}]]},"cursor":{"x":14}}],[0.561088,{"lines":{"36":[["(gdb) # great                                                                    ",{}]]},"cursor":{"x":13}}],[0.104875,{"lines":{"36":[["(gdb) # great!                                                                   ",{}]]},"cursor":{"x":14}}],[0.345883,{"cursor":{"x":15}}],[0.46701,{"lines":{"36":[["(gdb) # great! w                                                                 ",{}]]},"cursor":{"x":16}}],[0.166491,{"lines":{"36":[["(gdb) # great! we                                                                ",{}]]},"cursor":{"x":17}}],[0.08232200000000001,{"cursor":{"x":18}}],[1.598385,{"lines":{"36":[["(gdb) # great! we j                                                              ",{}]]},"cursor":{"x":19}}],[0.149716,{"lines":{"36":[["(gdb) # great! we ju                                                             ",{}]]},"cursor":{"x":20}}],[0.084272,{"lines":{"36":[["(gdb) # great! we jus                                                            ",{}]]},"cursor":{"x":21}}],[0.2557,{"lines":{"36":[["(gdb) # great! we just                                                           ",{}]]},"cursor":{"x":22}}],[0.041433,{"cursor":{"x":23}}],[0.172786,{"lines":{"36":[["(gdb) # great! we just p                                                         ",{}]]},"cursor":{"x":24}}],[0.08475199999999999,{"lines":{"36":[["(gdb) # great! we just pa                                                        ",{}]]},"cursor":{"x":25}}],[0.244765,{"lines":{"36":[["(gdb) # great! we just pas                                                       ",{}]]},"cursor":{"x":26}}],[0.142385,{"lines":{"36":[["(gdb) # great! we just pass                                                      ",{}]]},"cursor":{"x":27}}],[0.254902,{"lines":{"36":[["(gdb) # great! we just passe                                                     ",{}]]},"cursor":{"x":28}}],[0.173993,{"lines":{"36":[["(gdb) # great! we just passed                                                    ",{}]]},"cursor":{"x":29}}],[0.059164,{"cursor":{"x":30}}],[0.210036,{"lines":{"36":[["(gdb) # great! we just passed t                                                  ",{}]]},"cursor":{"x":31}}],[0.118769,{"lines":{"36":[["(gdb) # great! we just passed th                                                 ",{}]]},"cursor":{"x":32}}],[0.117187,{"lines":{"36":[["(gdb) # great! we just passed the                                                ",{}]]},"cursor":{"x":33}}],[0.057894,{"cursor":{"x":34}}],[0.315316,{"lines":{"36":[["(gdb) # great! we just passed the f                                              ",{}]]},"cursor":{"x":35}}],[0.094724,{"lines":{"36":[["(gdb) # great! we just passed the fi                                             ",{}]]},"cursor":{"x":36}}],[0.181285,{"lines":{"36":[["(gdb) # great! we just passed the fir                                            ",{}]]},"cursor":{"x":37}}],[0.26157,{"lines":{"36":[["(gdb) # great! we just passed the firs                                           ",{}]]},"cursor":{"x":38}}],[0.207183,{"lines":{"36":[["(gdb) # great! we just passed the first                                          ",{}]]},"cursor":{"x":39}}],[0.094726,{"cursor":{"x":40}}],[0.221224,{"lines":{"36":[["(gdb) # great! we just passed the first c                                        ",{}]]},"cursor":{"x":41}}],[0.103546,{"lines":{"36":[["(gdb) # great! we just passed the first ch                                       ",{}]]},"cursor":{"x":42}}],[0.061875,{"lines":{"36":[["(gdb) # great! we just passed the first che                                      ",{}]]},"cursor":{"x":43}}],[0.141788,{"lines":{"36":[["(gdb) # great! we just passed the first chec                                     ",{}]]},"cursor":{"x":44}}],[0.12758,{"lines":{"36":[["(gdb) # great! we just passed the first check                                    ",{}]]},"cursor":{"x":45}}],[0.450694,{"lines":{"36":[["(gdb) # great! we just passed the first check!                                   ",{}]]},"cursor":{"x":46}}],[0.370446,{"cursor":{"x":47}}],[0.805186,{"lines":{"36":[["(gdb) # great! we just passed the first check! n                                 ",{}]]},"cursor":{"x":48}}],[0.174831,{"lines":{"36":[["(gdb) # great! we just passed the first check! no                                ",{}]]},"cursor":{"x":49}}],[0.095961,{"lines":{"36":[["(gdb) # great! we just passed the first check! now                               ",{}]]},"cursor":{"x":50}}],[0.086976,{"cursor":{"x":51}}],[0.249604,{"lines":{"36":[["(gdb) # great! we just passed the first check! now w                             ",{}]]},"cursor":{"x":52}}],[0.150481,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we                            ",{}]]},"cursor":{"x":53}}],[0.081938,{"cursor":{"x":54}}],[0.916018,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we g                          ",{}]]},"cursor":{"x":55}}],[0.110957,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we gi                         ",{}]]},"cursor":{"x":56}}],[0.07996499999999999,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we giv                        ",{}]]},"cursor":{"x":57}}],[0.163309,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give                       ",{}]]},"cursor":{"x":58}}],[0.042071,{"cursor":{"x":59}}],[0.161013,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a                     ",{}]]},"cursor":{"x":60}}],[0.066942,{"cursor":{"x":61}}],[0.21267,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a l                   ",{}]]},"cursor":{"x":62}}],[0.246172,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a lo                  ",{}]]},"cursor":{"x":63}}],[0.133853,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a loo                 ",{}]]},"cursor":{"x":64}}],[0.102928,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look                ",{}]]},"cursor":{"x":65}}],[0.117597,{"cursor":{"x":66}}],[0.243712,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look a              ",{}]]},"cursor":{"x":67}}],[0.22387,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at             ",{}]]},"cursor":{"x":68}}],[0.06540899999999999,{"cursor":{"x":69}}],[0.155086,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at t           ",{}]]},"cursor":{"x":70}}],[0.150533,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at th          ",{}]]},"cursor":{"x":71}}],[0.149546,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the         ",{}]]},"cursor":{"x":72}}],[0.057719,{"cursor":{"x":73}}],[0.233252,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the s       ",{}]]},"cursor":{"x":74}}],[0.103556,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the se      ",{}]]},"cursor":{"x":75}}],[0.198293,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the sec     ",{}]]},"cursor":{"x":76}}],[0.104165,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the seco    ",{}]]},"cursor":{"x":77}}],[0.086641,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the secon   ",{}]]},"cursor":{"x":78}}],[0.115266,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the second  ",{}]]},"cursor":{"x":79}}],[0.126613,{"cursor":{"x":80}}],[2.068632,{"cursor":{"x":79}}],[0.268871,{"lines":{"36":[["(gdb) # great! we just passed the first check! now we give a look at the second_ ",{}]]},"cursor":{"x":80}}],[0.763736,{"lines":{"0":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"1":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"2":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"3":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"4":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"5":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"6":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"8":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"9":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"10":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"11":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"12":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"13":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"14":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"15":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"17":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"18":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"19":[["Quit                                                                             ",{}]],"20":[["(gdb) b *0x08048a0e                                                              ",{}]],"21":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"22":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"23":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"24":[["(gdb) r AAAAAAAAA                                                                ",{}]],"25":[["The program being debugged has been started already.                             ",{}]],"26":[["Start it from the beginning? (y or n) y                                          ",{}]],"27":[["                                                                                 ",{}]],"28":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"29":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"30":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"31":[["                                                                                 ",{}]],"32":[["Breakpoint 3, 0x08048a0e in crackyou ()                                          ",{}]],"33":[["(gdb) p/d $eax                                                                   ",{}]],"34":[["$6 = 1                                                                           ",{}]],"35":[["(gdb) # great! we just passed the first check! now we give a look at the second_c",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.143275,{"lines":{"36":[["h                                                                                ",{}]]},"cursor":{"x":1}}],[0.108481,{"lines":{"36":[["he                                                                               ",{}]]},"cursor":{"x":2}}],[0.158943,{"lines":{"36":[["hec                                                                              ",{}]]},"cursor":{"x":3}}],[0.103364,{"lines":{"36":[["heck                                                                             ",{}]]},"cursor":{"x":4}}],[0.095721,{"cursor":{"x":5}}],[0.73268,{"lines":{"36":[["heck f                                                                           ",{}]]},"cursor":{"x":6}}],[0.110274,{"lines":{"36":[["heck fu                                                                          ",{}]]},"cursor":{"x":7}}],[0.206595,{"lines":{"36":[["heck fun                                                                         ",{}]]},"cursor":{"x":8}}],[0.10461,{"lines":{"36":[["heck func                                                                        ",{}]]},"cursor":{"x":9}}],[0.219345,{"lines":{"36":[["heck funct                                                                       ",{}]]},"cursor":{"x":10}}],[0.056261,{"lines":{"36":[["heck functi                                                                      ",{}]]},"cursor":{"x":11}}],[0.157501,{"lines":{"36":[["heck functio                                                                     ",{}]]},"cursor":{"x":12}}],[0.094153,{"lines":{"36":[["heck function                                                                    ",{}]]},"cursor":{"x":13}}],[0.56876,{"lines":{"0":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"1":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"2":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"3":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"4":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"5":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"7":[["=> 0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"8":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"9":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"10":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"11":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"12":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"13":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"14":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"15":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"16":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"17":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"18":[["Quit                                                                             ",{}]],"19":[["(gdb) b *0x08048a0e                                                              ",{}]],"20":[["Breakpoint 3 at 0x8048a0e                                                        ",{}]],"21":[["(gdb) x/i 0x08048a0e                                                             ",{}]],"22":[["=> 0x8048a0e <crackyou+230>:    test   eax,eax                                   ",{}]],"23":[["(gdb) r AAAAAAAAA                                                                ",{}]],"24":[["The program being debugged has been started already.                             ",{}]],"25":[["Start it from the beginning? (y or n) y                                          ",{}]],"26":[["                                                                                 ",{}]],"27":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"28":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"29":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"30":[["                                                                                 ",{}]],"31":[["Breakpoint 3, 0x08048a0e in crackyou ()                                          ",{}]],"32":[["(gdb) p/d $eax                                                                   ",{}]],"33":[["$6 = 1                                                                           ",{}]],"34":[["(gdb) # great! we just passed the first check! now we give a look at the second_c",{}]],"35":[["heck function                                                                    ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.717702,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.08704000000000001,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.115751,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.1099,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.270653,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.110694,{"cursor":{"x":12}}],[2.161341,{"lines":{"36":[["(gdb) disas second_check                                                         ",{}]]},"cursor":{"x":24}}],[1.175071,{"lines":{"0":[["(gdb) r AAAAAAAAA                                                                ",{}]],"1":[["The program being debugged has been started already.                             ",{}]],"2":[["Start it from the beginning? (y or n) y                                          ",{}]],"3":[["                                                                                 ",{}]],"4":[["Starting program: /opt/shared/gdb/crackyou AAAAAAAAA                             ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"7":[["                                                                                 ",{}]],"8":[["Breakpoint 3, 0x08048a0e in crackyou ()                                          ",{}]],"9":[["(gdb) p/d $eax                                                                   ",{}]],"10":[["$6 = 1                                                                           ",{}]],"11":[["(gdb) # great! we just passed the first check! now we give a look at the second_c",{}]],"12":[["heck function                                                                    ",{}]],"13":[["(gdb) disas second_check                                                         ",{}]],"14":[["Dump of assembler code for function second_check:                                ",{}]],"15":[["   0x080487f6 <+0>:     push   ebp                                               ",{}]],"16":[["   0x080487f7 <+1>:     mov    ebp,esp                                           ",{}]],"17":[["   0x080487f9 <+3>:     push   esi                                               ",{}]],"18":[["   0x080487fa <+4>:     push   ebx                                               ",{}]],"19":[["   0x080487fb <+5>:     sub    esp,0x20                                          ",{}]],"20":[["   0x080487fe <+8>:     mov    DWORD PTR [ebp-0x14],0x0                          ",{}]],"21":[["   0x08048805 <+15>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"22":[["   0x08048808 <+18>:    mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x0804880b <+21>:    call   0x8048520 <malloc@plt>                            ",{}]],"24":[["   0x08048810 <+26>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x08048813 <+29>:    mov    DWORD PTR [ebp-0x10],0x0                          ",{}]],"26":[["   0x0804881a <+36>:    jmp    0x8048886 <second_check+144>                      ",{}]],"27":[["   0x0804881c <+38>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"28":[["   0x0804881f <+41>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"29":[["   0x08048822 <+44>:    lea    ebx,[edx+eax*1]                                   ",{}]],"30":[["   0x08048825 <+47>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"31":[["   0x08048828 <+50>:    mov    edx,DWORD PTR [ebp+0x8]                           ",{}]],"32":[["   0x0804882b <+53>:    add    eax,edx                                           ",{}]],"33":[["   0x0804882d <+55>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"34":[["   0x08048830 <+58>:    movsx  eax,al                                            ",{}]],"35":[["   0x08048833 <+61>:    mov    DWORD PTR [esp],eax                               ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":1}}],[5.4e-05,{"lines":{"0":[["Dump of assembler code for function second_check:                                ",{}]],"1":[["   0x080487f6 <+0>:     push   ebp                                               ",{}]],"2":[["   0x080487f7 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x080487f9 <+3>:     push   esi                                               ",{}]],"4":[["   0x080487fa <+4>:     push   ebx                                               ",{}]],"5":[["   0x080487fb <+5>:     sub    esp,0x20                                          ",{}]],"6":[["   0x080487fe <+8>:     mov    DWORD PTR [ebp-0x14],0x0                          ",{}]],"7":[["   0x08048805 <+15>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x08048808 <+18>:    mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x0804880b <+21>:    call   0x8048520 <malloc@plt>                            ",{}]],"10":[["   0x08048810 <+26>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"11":[["   0x08048813 <+29>:    mov    DWORD PTR [ebp-0x10],0x0                          ",{}]],"12":[["   0x0804881a <+36>:    jmp    0x8048886 <second_check+144>                      ",{}]],"13":[["   0x0804881c <+38>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"14":[["   0x0804881f <+41>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"15":[["   0x08048822 <+44>:    lea    ebx,[edx+eax*1]                                   ",{}]],"16":[["   0x08048825 <+47>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"17":[["   0x08048828 <+50>:    mov    edx,DWORD PTR [ebp+0x8]                           ",{}]],"18":[["   0x0804882b <+53>:    add    eax,edx                                           ",{}]],"19":[["   0x0804882d <+55>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"20":[["   0x08048830 <+58>:    movsx  eax,al                                            ",{}]],"21":[["   0x08048833 <+61>:    mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048836 <+64>:    call   0x8048590 <toupper@plt>                           ",{}]],"23":[["   0x0804883b <+69>:    lea    esi,[eax-0x41]                                    ",{}]],"24":[["   0x0804883e <+72>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"25":[["   0x08048841 <+75>:    mov    edx,0x0                                           ",{}]],"26":[["   0x08048846 <+80>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"27":[["   0x08048849 <+83>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"28":[["   0x0804884c <+86>:    add    eax,edx                                           ",{}]],"29":[["   0x0804884e <+88>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"30":[["   0x08048851 <+91>:    movsx  eax,al                                            ",{}]],"31":[["   0x08048854 <+94>:    mov    DWORD PTR [esp],eax                               ",{}]],"32":[["   0x08048857 <+97>:    call   0x8048590 <toupper@plt>                           ",{}]],"33":[["   0x0804885c <+102>:   add    eax,esi                                           ",{}]],"34":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"35":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[2.48955,{"lines":{"0":[["   0x0804883b <+69>:    lea    esi,[eax-0x41]                                    ",{}]],"1":[["   0x0804883e <+72>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"2":[["   0x08048841 <+75>:    mov    edx,0x0                                           ",{}]],"3":[["   0x08048846 <+80>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"4":[["   0x08048849 <+83>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"5":[["   0x0804884c <+86>:    add    eax,edx                                           ",{}]],"6":[["   0x0804884e <+88>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"7":[["   0x08048851 <+91>:    movsx  eax,al                                            ",{}]],"8":[["   0x08048854 <+94>:    mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x08048857 <+97>:    call   0x8048590 <toupper@plt>                           ",{}]],"10":[["   0x0804885c <+102>:   add    eax,esi                                           ",{}]],"11":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"12":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"13":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"14":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"15":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"16":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"17":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"18":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"19":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"20":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"21":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"22":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"23":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"24":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"25":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"26":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"27":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"28":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"29":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"30":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"31":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"32":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"33":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"34":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"35":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"36":[["   0x08048                                                                       ",{}]]},"cursor":{"x":10}}],[4.3e-05,{"lines":{"0":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"1":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"2":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"3":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"4":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"5":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"6":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"7":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"8":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"9":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"10":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"11":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"12":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"13":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"14":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"15":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"16":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"17":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"18":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"19":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"20":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"21":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"22":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"24":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"26":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"27":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"28":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"29":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"30":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"31":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"32":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"33":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"34":[["   0x080488bb <+197>:   ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.176018,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.631186,{"cursor":{"x":8}}],[0.51657,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.12664,{"lines":{"36":[["(gdb) # th                                                                       ",{}]]},"cursor":{"x":10}}],[0.047196,{"lines":{"36":[["(gdb) # thi                                                                      ",{}]]},"cursor":{"x":11}}],[0.147152,{"lines":{"36":[["(gdb) # this                                                                     ",{}]]},"cursor":{"x":12}}],[0.066715,{"cursor":{"x":13}}],[0.212298,{"lines":{"36":[["(gdb) # this i                                                                   ",{}]]},"cursor":{"x":14}}],[0.084165,{"lines":{"36":[["(gdb) # this is                                                                  ",{}]]},"cursor":{"x":15}}],[0.082123,{"cursor":{"x":16}}],[0.45841,{"lines":{"36":[["(gdb) # this is q                                                                ",{}]]},"cursor":{"x":17}}],[0.175708,{"lines":{"36":[["(gdb) # this is qu                                                               ",{}]]},"cursor":{"x":18}}],[0.039591,{"lines":{"36":[["(gdb) # this is qui                                                              ",{}]]},"cursor":{"x":19}}],[0.136071,{"lines":{"36":[["(gdb) # this is quit                                                             ",{}]]},"cursor":{"x":20}}],[0.209534,{"lines":{"36":[["(gdb) # this is quite                                                            ",{}]]},"cursor":{"x":21}}],[0.050254,{"cursor":{"x":22}}],[0.451192,{"lines":{"36":[["(gdb) # this is quite c                                                          ",{}]]},"cursor":{"x":23}}],[0.352919,{"lines":{"36":[["(gdb) # this is quite co                                                         ",{}]]},"cursor":{"x":24}}],[0.196914,{"lines":{"36":[["(gdb) # this is quite com                                                        ",{}]]},"cursor":{"x":25}}],[0.199967,{"lines":{"36":[["(gdb) # this is quite comp                                                       ",{}]]},"cursor":{"x":26}}],[0.07842499999999999,{"lines":{"36":[["(gdb) # this is quite compl                                                      ",{}]]},"cursor":{"x":27}}],[0.172673,{"lines":{"36":[["(gdb) # this is quite compli                                                     ",{}]]},"cursor":{"x":28}}],[0.156522,{"lines":{"36":[["(gdb) # this is quite complic                                                    ",{}]]},"cursor":{"x":29}}],[0.205716,{"lines":{"36":[["(gdb) # this is quite complica                                                   ",{}]]},"cursor":{"x":30}}],[0.255976,{"lines":{"36":[["(gdb) # this is quite complicat                                                  ",{}]]},"cursor":{"x":31}}],[0.238433,{"lines":{"36":[["(gdb) # this is quite complicate                                                 ",{}]]},"cursor":{"x":32}}],[0.278006,{"lines":{"36":[["(gdb) # this is quite complicated                                                ",{}]]},"cursor":{"x":33}}],[0.208131,{"lines":{"36":[["(gdb) # this is quite complicated.                                               ",{}]]},"cursor":{"x":34}}],[0.165933,{"lines":{"36":[["(gdb) # this is quite complicated..                                              ",{}]]},"cursor":{"x":35}}],[0.126272,{"lines":{"36":[["(gdb) # this is quite complicated...                                             ",{}]]},"cursor":{"x":36}}],[0.119151,{"cursor":{"x":37}}],[0.124455,{"lines":{"36":[["(gdb) # this is quite complicated... n                                           ",{}]]},"cursor":{"x":38}}],[0.072217,{"lines":{"36":[["(gdb) # this is quite complicated... no                                          ",{}]]},"cursor":{"x":39}}],[0.171841,{"lines":{"36":[["(gdb) # this is quite complicated... not                                         ",{}]]},"cursor":{"x":40}}],[0.048925,{"cursor":{"x":41}}],[0.185711,{"lines":{"36":[["(gdb) # this is quite complicated... not a                                       ",{}]]},"cursor":{"x":42}}],[0.222974,{"lines":{"36":[["(gdb) # this is quite complicated... not as                                      ",{}]]},"cursor":{"x":43}}],[0.10661,{"cursor":{"x":44}}],[0.305998,{"lines":{"36":[["(gdb) # this is quite complicated... not as s                                    ",{}]]},"cursor":{"x":45}}],[0.152348,{"lines":{"36":[["(gdb) # this is quite complicated... not as si                                   ",{}]]},"cursor":{"x":46}}],[0.09492399999999999,{"lines":{"36":[["(gdb) # this is quite complicated... not as sim                                  ",{}]]},"cursor":{"x":47}}],[0.206681,{"lines":{"36":[["(gdb) # this is quite complicated... not as simp                                 ",{}]]},"cursor":{"x":48}}],[0.078403,{"lines":{"36":[["(gdb) # this is quite complicated... not as simpl                                ",{}]]},"cursor":{"x":49}}],[0.123208,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple                               ",{}]]},"cursor":{"x":50}}],[0.09013500000000001,{"cursor":{"x":51}}],[0.185449,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple a                             ",{}]]},"cursor":{"x":52}}],[0.182789,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as                            ",{}]]},"cursor":{"x":53}}],[0.177778,{"cursor":{"x":54}}],[1.133543,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as t                          ",{}]]},"cursor":{"x":55}}],[0.110558,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as th                         ",{}]]},"cursor":{"x":56}}],[0.141149,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the                        ",{}]]},"cursor":{"x":57}}],[0.06611400000000001,{"cursor":{"x":58}}],[0.46731,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the f                      ",{}]]},"cursor":{"x":59}}],[0.143022,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the fi                     ",{}]]},"cursor":{"x":60}}],[0.26975,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the fir                    ",{}]]},"cursor":{"x":61}}],[0.213218,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the firs                   ",{}]]},"cursor":{"x":62}}],[0.207124,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first                  ",{}]]},"cursor":{"x":63}}],[0.31171,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_                 ",{}]]},"cursor":{"x":64}}],[0.24279,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_c                ",{}]]},"cursor":{"x":65}}],[0.174395,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_ce               ",{}]]},"cursor":{"x":66}}],[0.151198,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_ceh              ",{}]]},"cursor":{"x":67}}],[0.038065,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_cehc             ",{}]]},"cursor":{"x":68}}],[0.262606,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_cehck            ",{}]]},"cursor":{"x":69}}],[0.143998,{"cursor":{"x":70}}],[0.238215,{"cursor":{"x":69}}],[0.142138,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_cehc             ",{}]]},"cursor":{"x":68}}],[0.134528,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_ceh              ",{}]]},"cursor":{"x":67}}],[0.158224,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_ce               ",{}]]},"cursor":{"x":66}}],[0.117829,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_c                ",{}]]},"cursor":{"x":65}}],[0.26918,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_ch               ",{}]]},"cursor":{"x":66}}],[0.421903,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_che              ",{}]]},"cursor":{"x":67}}],[0.189543,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_chec             ",{}]]},"cursor":{"x":68}}],[0.111854,{"lines":{"36":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]]},"cursor":{"x":69}}],[1.818921,{"lines":{"0":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"1":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"2":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"3":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"4":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"5":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"6":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"7":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"8":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"9":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"10":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"11":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"12":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"13":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"14":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"15":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"16":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"18":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"19":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"20":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"21":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"22":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"23":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"24":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"25":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"26":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"27":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"28":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"29":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"30":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"31":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"32":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"33":[["   0x080488bb <+197>:   ret                                                      ",{}]],"34":[["End of assembler dump.                                                           ",{}]],"35":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.671619,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.150829,{"cursor":{"x":8}}],[1.279037,{"lines":{"36":[["(gdb) # l                                                                        ",{}]]},"cursor":{"x":9}}],[0.222495,{"lines":{"36":[["(gdb) # lo                                                                       ",{}]]},"cursor":{"x":10}}],[0.141566,{"lines":{"36":[["(gdb) # loo                                                                      ",{}]]},"cursor":{"x":11}}],[0.07897700000000001,{"lines":{"36":[["(gdb) # look                                                                     ",{}]]},"cursor":{"x":12}}],[0.095513,{"cursor":{"x":13}}],[0.186045,{"lines":{"36":[["(gdb) # look a                                                                   ",{}]]},"cursor":{"x":14}}],[0.295855,{"lines":{"36":[["(gdb) # look at                                                                  ",{}]]},"cursor":{"x":15}}],[0.085365,{"cursor":{"x":16}}],[0.142834,{"lines":{"36":[["(gdb) # look at t                                                                ",{}]]},"cursor":{"x":17}}],[0.14233,{"lines":{"36":[["(gdb) # look at th                                                               ",{}]]},"cursor":{"x":18}}],[0.141761,{"lines":{"36":[["(gdb) # look at the                                                              ",{}]]},"cursor":{"x":19}}],[0.041189,{"cursor":{"x":20}}],[0.34779,{"lines":{"36":[["(gdb) # look at the b                                                            ",{}]]},"cursor":{"x":21}}],[0.11152,{"lines":{"36":[["(gdb) # look at the bo                                                           ",{}]]},"cursor":{"x":22}}],[0.17274,{"lines":{"36":[["(gdb) # look at the bot                                                          ",{}]]},"cursor":{"x":23}}],[0.141759,{"lines":{"36":[["(gdb) # look at the bott                                                         ",{}]]},"cursor":{"x":24}}],[0.176025,{"lines":{"36":[["(gdb) # look at the botto                                                        ",{}]]},"cursor":{"x":25}}],[0.293753,{"lines":{"36":[["(gdb) # look at the bottom                                                       ",{}]]},"cursor":{"x":26}}],[0.248354,{"cursor":{"x":27}}],[0.234448,{"lines":{"36":[["(gdb) # look at the bottom a                                                     ",{}]]},"cursor":{"x":28}}],[0.13635,{"lines":{"36":[["(gdb) # look at the bottom an                                                    ",{}]]},"cursor":{"x":29}}],[0.222066,{"lines":{"36":[["(gdb) # look at the bottom any                                                   ",{}]]},"cursor":{"x":30}}],[0.252843,{"lines":{"36":[["(gdb) # look at the bottom anyw                                                  ",{}]]},"cursor":{"x":31}}],[0.158092,{"lines":{"36":[["(gdb) # look at the bottom anywa                                                 ",{}]]},"cursor":{"x":32}}],[0.096621,{"lines":{"36":[["(gdb) # look at the bottom anyway                                                ",{}]]},"cursor":{"x":33}}],[0.342418,{"lines":{"36":[["(gdb) # look at the bottom anyway,                                               ",{}]]},"cursor":{"x":34}}],[0.151747,{"cursor":{"x":35}}],[0.276271,{"lines":{"36":[["(gdb) # look at the bottom anyway, t                                             ",{}]]},"cursor":{"x":36}}],[0.09389699999999999,{"lines":{"36":[["(gdb) # look at the bottom anyway, th                                            ",{}]]},"cursor":{"x":37}}],[0.149475,{"lines":{"36":[["(gdb) # look at the bottom anyway, the                                           ",{}]]},"cursor":{"x":38}}],[0.158623,{"lines":{"36":[["(gdb) # look at the bottom anyway, ther                                          ",{}]]},"cursor":{"x":39}}],[0.334299,{"lines":{"36":[["(gdb) # look at the bottom anyway, there                                         ",{}]]},"cursor":{"x":40}}],[0.225395,{"cursor":{"x":41}}],[0.2607,{"lines":{"36":[["(gdb) # look at the bottom anyway, there i                                       ",{}]]},"cursor":{"x":42}}],[0.124411,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is                                      ",{}]]},"cursor":{"x":43}}],[0.066482,{"cursor":{"x":44}}],[0.385916,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a                                    ",{}]]},"cursor":{"x":45}}],[0.091266,{"cursor":{"x":46}}],[0.226007,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a c                                  ",{}]]},"cursor":{"x":47}}],[0.093427,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a ca                                 ",{}]]},"cursor":{"x":48}}],[0.201338,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a cal                                ",{}]]},"cursor":{"x":49}}],[0.142096,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call                               ",{}]]},"cursor":{"x":50}}],[0.086966,{"cursor":{"x":51}}],[0.292161,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call t                             ",{}]]},"cursor":{"x":52}}],[0.095182,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call to                            ",{}]]},"cursor":{"x":53}}],[0.07080699999999999,{"cursor":{"x":54}}],[0.162682,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call to a                          ",{}]]},"cursor":{"x":55}}],[0.091337,{"cursor":{"x":56}}],[3.402824,{"cursor":{"x":55}}],[0.158034,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call to                            ",{}]]},"cursor":{"x":54}}],[1.391471,{"lines":{"36":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]]},"cursor":{"x":61}}],[1.875762,{"lines":{"0":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"1":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"2":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"3":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"4":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"5":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"6":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"7":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"8":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"9":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"10":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"11":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"12":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"13":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"14":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"15":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"16":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"17":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"18":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"19":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"20":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"21":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"22":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"24":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"25":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"26":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"27":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"28":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"29":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"30":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"31":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"32":[["   0x080488bb <+197>:   ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"35":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.357934,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.271326,{"cursor":{"x":8}}],[0.387704,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.110791,{"lines":{"36":[["(gdb) # th                                                                       ",{}]]},"cursor":{"x":10}}],[0.055321,{"lines":{"36":[["(gdb) # thi                                                                      ",{}]]},"cursor":{"x":11}}],[0.131309,{"lines":{"36":[["(gdb) # this                                                                     ",{}]]},"cursor":{"x":12}}],[0.06653199999999999,{"cursor":{"x":13}}],[0.371628,{"lines":{"36":[["(gdb) # this f                                                                   ",{}]]},"cursor":{"x":14}}],[0.118297,{"lines":{"36":[["(gdb) # this fu                                                                  ",{}]]},"cursor":{"x":15}}],[0.07091799999999999,{"lines":{"36":[["(gdb) # this fun                                                                 ",{}]]},"cursor":{"x":16}}],[0.094931,{"lines":{"36":[["(gdb) # this func                                                                ",{}]]},"cursor":{"x":17}}],[0.212411,{"lines":{"36":[["(gdb) # this funct                                                               ",{}]]},"cursor":{"x":18}}],[0.087337,{"lines":{"36":[["(gdb) # this functi                                                              ",{}]]},"cursor":{"x":19}}],[0.150391,{"lines":{"36":[["(gdb) # this functio                                                             ",{}]]},"cursor":{"x":20}}],[0.125782,{"lines":{"36":[["(gdb) # this function                                                            ",{}]]},"cursor":{"x":21}}],[0.704694,{"cursor":{"x":22}}],[0.268689,{"lines":{"36":[["(gdb) # this function t                                                          ",{}]]},"cursor":{"x":23}}],[0.18788,{"lines":{"36":[["(gdb) # this function ta                                                         ",{}]]},"cursor":{"x":24}}],[0.177061,{"lines":{"36":[["(gdb) # this function tak                                                        ",{}]]},"cursor":{"x":25}}],[0.124379,{"lines":{"36":[["(gdb) # this function take                                                       ",{}]]},"cursor":{"x":26}}],[0.205913,{"lines":{"36":[["(gdb) # this function takes                                                      ",{}]]},"cursor":{"x":27}}],[0.129834,{"cursor":{"x":28}}],[0.660867,{"lines":{"36":[["(gdb) # this function takes t                                                    ",{}]]},"cursor":{"x":29}}],[0.357525,{"lines":{"36":[["(gdb) # this function takes tw                                                   ",{}]]},"cursor":{"x":30}}],[1.443122,{"lines":{"36":[["(gdb) # this function takes two                                                  ",{}]]},"cursor":{"x":31}}],[0.166579,{"cursor":{"x":32}}],[0.242791,{"lines":{"36":[["(gdb) # this function takes two s                                                ",{}]]},"cursor":{"x":33}}],[0.247345,{"lines":{"36":[["(gdb) # this function takes two st                                               ",{}]]},"cursor":{"x":34}}],[0.15061,{"lines":{"36":[["(gdb) # this function takes two str                                              ",{}]]},"cursor":{"x":35}}],[0.095236,{"lines":{"36":[["(gdb) # this function takes two stri                                             ",{}]]},"cursor":{"x":36}}],[0.062821,{"lines":{"36":[["(gdb) # this function takes two strin                                            ",{}]]},"cursor":{"x":37}}],[0.077024,{"lines":{"36":[["(gdb) # this function takes two string                                           ",{}]]},"cursor":{"x":38}}],[0.340674,{"lines":{"36":[["(gdb) # this function takes two strings                                          ",{}]]},"cursor":{"x":39}}],[0.193575,{"cursor":{"x":40}}],[0.587515,{"lines":{"36":[["(gdb) # this function takes two strings a                                        ",{}]]},"cursor":{"x":41}}],[0.151907,{"lines":{"36":[["(gdb) # this function takes two strings an                                       ",{}]]},"cursor":{"x":42}}],[0.094038,{"lines":{"36":[["(gdb) # this function takes two strings and                                      ",{}]]},"cursor":{"x":43}}],[0.056928,{"cursor":{"x":44}}],[0.194656,{"lines":{"36":[["(gdb) # this function takes two strings and c                                    ",{}]]},"cursor":{"x":45}}],[0.102137,{"lines":{"36":[["(gdb) # this function takes two strings and co                                   ",{}]]},"cursor":{"x":46}}],[0.064059,{"lines":{"36":[["(gdb) # this function takes two strings and com                                  ",{}]]},"cursor":{"x":47}}],[0.158633,{"lines":{"36":[["(gdb) # this function takes two strings and comp                                 ",{}]]},"cursor":{"x":48}}],[0.128736,{"lines":{"36":[["(gdb) # this function takes two strings and compa                                ",{}]]},"cursor":{"x":49}}],[0.354114,{"lines":{"36":[["(gdb) # this function takes two strings and compar                               ",{}]]},"cursor":{"x":50}}],[0.182114,{"lines":{"36":[["(gdb) # this function takes two strings and compare                              ",{}]]},"cursor":{"x":51}}],[0.189725,{"lines":{"36":[["(gdb) # this function takes two strings and compares                             ",{}]]},"cursor":{"x":52}}],[0.058147,{"cursor":{"x":53}}],[1.036789,{"lines":{"36":[["(gdb) # this function takes two strings and compares t                           ",{}]]},"cursor":{"x":54}}],[0.134191,{"lines":{"36":[["(gdb) # this function takes two strings and compares th                          ",{}]]},"cursor":{"x":55}}],[0.149479,{"lines":{"36":[["(gdb) # this function takes two strings and compares the                         ",{}]]},"cursor":{"x":56}}],[0.098135,{"cursor":{"x":57}}],[0.419132,{"lines":{"36":[["(gdb) # this function takes two strings and compares the f                       ",{}]]},"cursor":{"x":58}}],[0.143226,{"lines":{"36":[["(gdb) # this function takes two strings and compares the fi                      ",{}]]},"cursor":{"x":59}}],[0.109135,{"lines":{"36":[["(gdb) # this function takes two strings and compares the fir                     ",{}]]},"cursor":{"x":60}}],[0.2057,{"lines":{"36":[["(gdb) # this function takes two strings and compares the firs                    ",{}]]},"cursor":{"x":61}}],[0.239358,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first                   ",{}]]},"cursor":{"x":62}}],[0.109874,{"cursor":{"x":63}}],[0.407421,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n                 ",{}]]},"cursor":{"x":64}}],[0.56867,{"cursor":{"x":65}}],[0.444653,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n b               ",{}]]},"cursor":{"x":66}}],[0.35877,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n by              ",{}]]},"cursor":{"x":67}}],[0.230147,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n byt             ",{}]]},"cursor":{"x":68}}],[0.261837,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n byte            ",{}]]},"cursor":{"x":69}}],[0.238597,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes           ",{}]]},"cursor":{"x":70}}],[0.089972,{"cursor":{"x":71}}],[1.149953,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes o         ",{}]]},"cursor":{"x":72}}],[0.436771,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes of        ",{}]]},"cursor":{"x":73}}],[0.057414,{"cursor":{"x":74}}],[0.194837,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes of t      ",{}]]},"cursor":{"x":75}}],[0.118947,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes of th     ",{}]]},"cursor":{"x":76}}],[0.149008,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes of the    ",{}]]},"cursor":{"x":77}}],[0.159412,{"lines":{"36":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]]},"cursor":{"x":78}}],[1.378553,{"lines":{"0":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"1":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"2":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"3":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"4":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"5":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"6":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"7":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"8":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"9":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"10":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"11":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"12":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"13":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"14":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"15":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"16":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"18":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"19":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"20":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"21":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"23":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"24":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"25":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"26":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"27":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"28":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"29":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"30":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"31":[["   0x080488bb <+197>:   ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"34":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"35":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.21832,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.134605,{"cursor":{"x":8}}],[0.451951,{"lines":{"36":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.165824,{"lines":{"36":[["(gdb) # we                                                                       ",{}]]},"cursor":{"x":10}}],[0.08386399999999999,{"cursor":{"x":11}}],[0.537397,{"lines":{"36":[["(gdb) # we s                                                                     ",{}]]},"cursor":{"x":12}}],[0.158042,{"lines":{"36":[["(gdb) # we se                                                                    ",{}]]},"cursor":{"x":13}}],[0.207671,{"lines":{"36":[["(gdb) # we set                                                                   ",{}]]},"cursor":{"x":14}}],[0.125723,{"cursor":{"x":15}}],[0.260984,{"lines":{"36":[["(gdb) # we set a                                                                 ",{}]]},"cursor":{"x":16}}],[0.082653,{"cursor":{"x":17}}],[0.444275,{"lines":{"36":[["(gdb) # we set a b                                                               ",{}]]},"cursor":{"x":18}}],[0.096183,{"lines":{"36":[["(gdb) # we set a br                                                              ",{}]]},"cursor":{"x":19}}],[0.140139,{"lines":{"36":[["(gdb) # we set a bre                                                             ",{}]]},"cursor":{"x":20}}],[0.157235,{"lines":{"36":[["(gdb) # we set a brea                                                            ",{}]]},"cursor":{"x":21}}],[0.110038,{"lines":{"36":[["(gdb) # we set a break                                                           ",{}]]},"cursor":{"x":22}}],[0.194013,{"lines":{"36":[["(gdb) # we set a breakp                                                          ",{}]]},"cursor":{"x":23}}],[0.918841,{"lines":{"36":[["(gdb) # we set a breakpo                                                         ",{}]]},"cursor":{"x":24}}],[0.221991,{"lines":{"36":[["(gdb) # we set a breakpoi                                                        ",{}]]},"cursor":{"x":25}}],[0.078012,{"lines":{"36":[["(gdb) # we set a breakpoin                                                       ",{}]]},"cursor":{"x":26}}],[0.135,{"lines":{"36":[["(gdb) # we set a breakpoint                                                      ",{}]]},"cursor":{"x":27}}],[0.124576,{"cursor":{"x":28}}],[0.678881,{"lines":{"36":[["(gdb) # we set a breakpoint b                                                    ",{}]]},"cursor":{"x":29}}],[0.221469,{"lines":{"36":[["(gdb) # we set a breakpoint be                                                   ",{}]]},"cursor":{"x":30}}],[0.158909,{"lines":{"36":[["(gdb) # we set a breakpoint bef                                                  ",{}]]},"cursor":{"x":31}}],[0.151631,{"lines":{"36":[["(gdb) # we set a breakpoint befo                                                 ",{}]]},"cursor":{"x":32}}],[0.086811,{"lines":{"36":[["(gdb) # we set a breakpoint befor                                                ",{}]]},"cursor":{"x":33}}],[0.164618,{"lines":{"36":[["(gdb) # we set a breakpoint before                                               ",{}]]},"cursor":{"x":34}}],[0.101418,{"cursor":{"x":35}}],[0.904237,{"lines":{"36":[["(gdb) # we set a breakpoint before t                                             ",{}]]},"cursor":{"x":36}}],[0.102609,{"lines":{"36":[["(gdb) # we set a breakpoint before th                                            ",{}]]},"cursor":{"x":37}}],[0.132141,{"lines":{"36":[["(gdb) # we set a breakpoint before tha                                           ",{}]]},"cursor":{"x":38}}],[0.784965,{"lines":{"36":[["(gdb) # we set a breakpoint before that                                          ",{}]]},"cursor":{"x":39}}],[0.136805,{"cursor":{"x":40}}],[0.210869,{"lines":{"36":[["(gdb) # we set a breakpoint before that c                                        ",{}]]},"cursor":{"x":41}}],[0.188979,{"lines":{"36":[["(gdb) # we set a breakpoint before that ca                                       ",{}]]},"cursor":{"x":42}}],[0.185866,{"lines":{"36":[["(gdb) # we set a breakpoint before that cal                                      ",{}]]},"cursor":{"x":43}}],[0.142038,{"lines":{"36":[["(gdb) # we set a breakpoint before that call                                     ",{}]]},"cursor":{"x":44}}],[0.1269,{"cursor":{"x":45}}],[0.354819,{"lines":{"36":[["(gdb) # we set a breakpoint before that call a                                   ",{}]]},"cursor":{"x":46}}],[0.160241,{"lines":{"36":[["(gdb) # we set a breakpoint before that call an                                  ",{}]]},"cursor":{"x":47}}],[0.165759,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and                                 ",{}]]},"cursor":{"x":48}}],[0.049052,{"cursor":{"x":49}}],[1.653374,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and w                               ",{}]]},"cursor":{"x":50}}],[0.173885,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we                              ",{}]]},"cursor":{"x":51}}],[0.08266999999999999,{"cursor":{"x":52}}],[0.132261,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we l                            ",{}]]},"cursor":{"x":53}}],[0.214062,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we lo                           ",{}]]},"cursor":{"x":54}}],[0.15811,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we loo                          ",{}]]},"cursor":{"x":55}}],[0.63244,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we lo                           ",{}]]},"cursor":{"x":54}}],[0.8230690000000001,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we l                            ",{}]]},"cursor":{"x":53}}],[0.134788,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we                              ",{}]]},"cursor":{"x":52}}],[0.268652,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we i                            ",{}]]},"cursor":{"x":53}}],[0.07874399999999999,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we in                           ",{}]]},"cursor":{"x":54}}],[0.16328,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we ins                          ",{}]]},"cursor":{"x":55}}],[0.089132,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we insp                         ",{}]]},"cursor":{"x":56}}],[0.107229,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspe                        ",{}]]},"cursor":{"x":57}}],[0.44816,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspec                       ",{}]]},"cursor":{"x":58}}],[0.230129,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect                      ",{}]]},"cursor":{"x":59}}],[0.14442,{"cursor":{"x":60}}],[0.533586,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect i                    ",{}]]},"cursor":{"x":61}}],[0.119226,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect it                   ",{}]]},"cursor":{"x":62}}],[0.259277,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its                  ",{}]]},"cursor":{"x":63}}],[0.066645,{"cursor":{"x":64}}],[0.330072,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its a                ",{}]]},"cursor":{"x":65}}],[0.239163,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its ar               ",{}]]},"cursor":{"x":66}}],[0.190822,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its arg              ",{}]]},"cursor":{"x":67}}],[0.127233,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its argu             ",{}]]},"cursor":{"x":68}}],[0.245338,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its argum            ",{}]]},"cursor":{"x":69}}],[0.085977,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its argume           ",{}]]},"cursor":{"x":70}}],[0.133515,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its argumen          ",{}]]},"cursor":{"x":71}}],[0.097659,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its argument         ",{}]]},"cursor":{"x":72}}],[0.234542,{"lines":{"36":[["(gdb) # we set a breakpoint before that call and we inspect its arguments        ",{}]]},"cursor":{"x":73}}],[0.594489,{"lines":{"0":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"1":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"2":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"3":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"4":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"5":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"6":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"7":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"8":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"9":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"10":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"11":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"12":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"13":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"14":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"15":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"16":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"17":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"18":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"19":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"20":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"22":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"23":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"24":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"25":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"26":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"27":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"28":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"29":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"30":[["   0x080488bb <+197>:   ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"33":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"34":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]],"35":[["(gdb) # we set a breakpoint before that call and we inspect its arguments        ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.10915,{"lines":{"36":[["(gdb) b                                                                          ",{}]]},"cursor":{"x":7}}],[0.0965,{"cursor":{"x":8}}],[3.168543,{"lines":{"36":[["(gdb) b *                                                                        ",{}]]},"cursor":{"x":9}}],[0.560704,{"lines":{"36":[["(gdb) b *0x080488a2                                                              ",{}]]},"cursor":{"x":19}}],[0.840634,{"lines":{"0":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"1":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"2":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"3":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"4":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"5":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"6":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"7":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"8":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"9":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"10":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"11":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"12":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"13":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"14":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"15":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"16":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"17":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"18":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"20":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"21":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"22":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"23":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"24":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"25":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"26":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"27":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"28":[["   0x080488bb <+197>:   ret                                                      ",{}]],"29":[["End of assembler dump.                                                           ",{}]],"30":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"31":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"32":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]],"33":[["(gdb) # we set a breakpoint before that call and we inspect its arguments        ",{}]],"34":[["(gdb) b *0x080488a2                                                              ",{}]],"35":[["Breakpoint 4 at 0x80488a2                                                        ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.292944,{"lines":{"36":[["(gdb) c                                                                          ",{}]]},"cursor":{"x":7}}],[0.762781,{"lines":{"0":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"1":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"2":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"3":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"4":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"5":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"6":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"7":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"9":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"10":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"11":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"12":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"13":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"14":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"16":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"17":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"18":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"19":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"20":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"21":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"22":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"23":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"24":[["   0x080488bb <+197>:   ret                                                      ",{}]],"25":[["End of assembler dump.                                                           ",{}]],"26":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"27":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"28":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]],"29":[["(gdb) # we set a breakpoint before that call and we inspect its arguments        ",{}]],"30":[["(gdb) b *0x080488a2                                                              ",{}]],"31":[["Breakpoint 4 at 0x80488a2                                                        ",{}]],"32":[["(gdb) c                                                                          ",{}]],"33":[["Continuing.                                                                      ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 4, 0x080488a2 in second_check ()                                      ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.710523,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.07943500000000001,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.10805,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.189805,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.167431,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.138429,{"lines":{"0":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"1":[["   0x080488bb <+197>:   ret                                                      ",{}]],"2":[["End of assembler dump.                                                           ",{}]],"3":[["(gdb) # this is quite complicated... not as simple as the first_check            ",{}]],"4":[["(gdb) # look at the bottom anyway, there is a call to strncmp                    ",{}]],"5":[["(gdb) # this function takes two strings and compares the first n bytes of them   ",{}]],"6":[["(gdb) # we set a breakpoint before that call and we inspect its arguments        ",{}]],"7":[["(gdb) b *0x080488a2                                                              ",{}]],"8":[["Breakpoint 4 at 0x80488a2                                                        ",{}]],"9":[["(gdb) c                                                                          ",{}]],"10":[["Continuing.                                                                      ",{}]],"11":[["                                                                                 ",{}]],"12":[["Breakpoint 4, 0x080488a2 in second_check ()                                      ",{}]],"13":[["(gdb) disas                                                                      ",{}]],"14":[["Dump of assembler code for function second_check:                                ",{}]],"15":[["   0x080487f6 <+0>:     push   ebp                                               ",{}]],"16":[["   0x080487f7 <+1>:     mov    ebp,esp                                           ",{}]],"17":[["   0x080487f9 <+3>:     push   esi                                               ",{}]],"18":[["   0x080487fa <+4>:     push   ebx                                               ",{}]],"19":[["   0x080487fb <+5>:     sub    esp,0x20                                          ",{}]],"20":[["   0x080487fe <+8>:     mov    DWORD PTR [ebp-0x14],0x0                          ",{}]],"21":[["   0x08048805 <+15>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"22":[["   0x08048808 <+18>:    mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x0804880b <+21>:    call   0x8048520 <malloc@plt>                            ",{}]],"24":[["   0x08048810 <+26>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x08048813 <+29>:    mov    DWORD PTR [ebp-0x10],0x0                          ",{}]],"26":[["   0x0804881a <+36>:    jmp    0x8048886 <second_check+144>                      ",{}]],"27":[["   0x0804881c <+38>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"28":[["   0x0804881f <+41>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"29":[["   0x08048822 <+44>:    lea    ebx,[edx+eax*1]                                   ",{}]],"30":[["   0x08048825 <+47>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"31":[["   0x08048828 <+50>:    mov    edx,DWORD PTR [ebp+0x8]                           ",{}]],"32":[["   0x0804882b <+53>:    add    eax,edx                                           ",{}]],"33":[["   0x0804882d <+55>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"34":[["   0x08048830 <+58>:    movsx  eax,al                                            ",{}]],"35":[["   0x08048833 <+61>:    mov    DWORD PTR [esp],eax                               ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":1}}],[4.9e-05,{"lines":{"0":[["Dump of assembler code for function second_check:                                ",{}]],"1":[["   0x080487f6 <+0>:     push   ebp                                               ",{}]],"2":[["   0x080487f7 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x080487f9 <+3>:     push   esi                                               ",{}]],"4":[["   0x080487fa <+4>:     push   ebx                                               ",{}]],"5":[["   0x080487fb <+5>:     sub    esp,0x20                                          ",{}]],"6":[["   0x080487fe <+8>:     mov    DWORD PTR [ebp-0x14],0x0                          ",{}]],"7":[["   0x08048805 <+15>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x08048808 <+18>:    mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x0804880b <+21>:    call   0x8048520 <malloc@plt>                            ",{}]],"10":[["   0x08048810 <+26>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"11":[["   0x08048813 <+29>:    mov    DWORD PTR [ebp-0x10],0x0                          ",{}]],"12":[["   0x0804881a <+36>:    jmp    0x8048886 <second_check+144>                      ",{}]],"13":[["   0x0804881c <+38>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"14":[["   0x0804881f <+41>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"15":[["   0x08048822 <+44>:    lea    ebx,[edx+eax*1]                                   ",{}]],"16":[["   0x08048825 <+47>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"17":[["   0x08048828 <+50>:    mov    edx,DWORD PTR [ebp+0x8]                           ",{}]],"18":[["   0x0804882b <+53>:    add    eax,edx                                           ",{}]],"19":[["   0x0804882d <+55>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"20":[["   0x08048830 <+58>:    movsx  eax,al                                            ",{}]],"21":[["   0x08048833 <+61>:    mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048836 <+64>:    call   0x8048590 <toupper@plt>                           ",{}]],"23":[["   0x0804883b <+69>:    lea    esi,[eax-0x41]                                    ",{}]],"24":[["   0x0804883e <+72>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"25":[["   0x08048841 <+75>:    mov    edx,0x0                                           ",{}]],"26":[["   0x08048846 <+80>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"27":[["   0x08048849 <+83>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"28":[["   0x0804884c <+86>:    add    eax,edx                                           ",{}]],"29":[["   0x0804884e <+88>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"30":[["   0x08048851 <+91>:    movsx  eax,al                                            ",{}]],"31":[["   0x08048854 <+94>:    mov    DWORD PTR [esp],eax                               ",{}]],"32":[["   0x08048857 <+97>:    call   0x8048590 <toupper@plt>                           ",{}]],"33":[["   0x0804885c <+102>:   add    eax,esi                                           ",{}]],"34":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"35":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.598789,{"lines":{"0":[["   0x0804883b <+69>:    lea    esi,[eax-0x41]                                    ",{}]],"1":[["   0x0804883e <+72>:    mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"2":[["   0x08048841 <+75>:    mov    edx,0x0                                           ",{}]],"3":[["   0x08048846 <+80>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"4":[["   0x08048849 <+83>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"5":[["   0x0804884c <+86>:    add    eax,edx                                           ",{}]],"6":[["   0x0804884e <+88>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"7":[["   0x08048851 <+91>:    movsx  eax,al                                            ",{}]],"8":[["   0x08048854 <+94>:    mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x08048857 <+97>:    call   0x8048590 <toupper@plt>                           ",{}]],"10":[["   0x0804885c <+102>:   add    eax,esi                                           ",{}]],"11":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"12":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"13":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"14":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"15":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"16":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"17":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"18":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"19":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"20":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"21":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"22":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"23":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"24":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"25":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"26":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"27":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"28":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"29":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"30":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"31":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"32":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"33":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"34":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"35":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"36":[["=> 0x08048                                                                       ",{}]]},"cursor":{"x":10}}],[4.4e-05,{"lines":{"0":[["   0x0804885e <+104>:   lea    ecx,[eax-0x41]                                    ",{}]],"1":[["   0x08048861 <+107>:   mov    edx,0x4ec4ec4f                                    ",{}]],"2":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"3":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"4":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"5":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"6":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"7":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"8":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"9":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"10":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"11":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"12":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"13":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"14":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"15":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"16":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"17":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"18":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"19":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"20":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"21":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"22":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"24":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"26":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"27":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"28":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"29":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"30":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"31":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"32":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"33":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"34":[["   0x080488bb <+197>:   ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[5.875094,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.185314,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.379534,{"lines":{"36":[["(gdb) x/w                                                                        ",{}]]},"cursor":{"x":9}}],[0.438968,{"lines":{"36":[["(gdb) x/wx                                                                       ",{}]]},"cursor":{"x":10}}],[0.153306,{"cursor":{"x":11}}],[1.661579,{"lines":{"36":[["(gdb) x/wx $                                                                     ",{}]]},"cursor":{"x":12}}],[0.54445,{"lines":{"36":[["(gdb) x/wx $esp                                                                  ",{}]]},"cursor":{"x":15}}],[1.001463,{"lines":{"0":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"1":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"2":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"3":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"4":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"5":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"6":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"7":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"8":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"9":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"10":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"11":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"12":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"13":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"14":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"15":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"16":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"17":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"18":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"19":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"20":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"21":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"22":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"24":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"25":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"26":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"27":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"28":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"29":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"30":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"31":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"32":[["   0x080488bb <+197>:   ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) x/wx $esp                                                                  ",{}]],"35":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.454582,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.136753,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.106721,{"lines":{"36":[["(gdb) x/s                                                                        ",{}]]},"cursor":{"x":9}}],[0.442659,{"cursor":{"x":10}}],[2.064956,{"lines":{"36":[["(gdb) x/s 0x0804d8b0                                                             ",{}]]},"cursor":{"x":20}}],[0.361089,{"lines":{"0":[["   0x08048866 <+112>:   mov    eax,ecx                                           ",{}]],"1":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"2":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"3":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"4":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"5":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"6":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"7":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"8":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"9":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"10":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"11":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"12":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"13":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"14":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"15":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"16":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"17":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"18":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"19":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"20":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"21":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"22":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"23":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"24":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"25":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"26":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"27":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"28":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"29":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"30":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"31":[["   0x080488bb <+197>:   ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) x/wx $esp                                                                  ",{}]],"34":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"35":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.01234,{"lines":{"0":[["   0x08048868 <+114>:   imul   edx                                               ",{}]],"1":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"2":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"3":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"4":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"5":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"6":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"7":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"8":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"9":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"10":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"11":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"12":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"13":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"14":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"15":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"16":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"17":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"18":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"19":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"20":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"22":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"23":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"24":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"25":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"26":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"27":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"28":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"29":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"30":[["   0x080488bb <+197>:   ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) x/wx $esp                                                                  ",{}]],"33":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"34":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"35":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.732296,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.126341,{"cursor":{"x":8}}],[0.579218,{"lines":{"36":[["(gdb) # w                                                                        ",{}]]},"cursor":{"x":9}}],[0.063487,{"lines":{"36":[["(gdb) # wh                                                                       ",{}]]},"cursor":{"x":10}}],[0.116378,{"lines":{"36":[["(gdb) # wha                                                                      ",{}]]},"cursor":{"x":11}}],[0.207938,{"lines":{"36":[["(gdb) # what                                                                     ",{}]]},"cursor":{"x":12}}],[0.102267,{"cursor":{"x":13}}],[0.140295,{"lines":{"36":[["(gdb) # what a                                                                   ",{}]]},"cursor":{"x":14}}],[0.12345,{"cursor":{"x":15}}],[0.5783160000000001,{"lines":{"36":[["(gdb) # what a s                                                                 ",{}]]},"cursor":{"x":16}}],[0.872482,{"lines":{"36":[["(gdb) # what a st                                                                ",{}]]},"cursor":{"x":17}}],[0.166574,{"lines":{"36":[["(gdb) # what a str                                                               ",{}]]},"cursor":{"x":18}}],[0.357007,{"lines":{"36":[["(gdb) # what a stra                                                              ",{}]]},"cursor":{"x":19}}],[0.135737,{"lines":{"36":[["(gdb) # what a stran                                                             ",{}]]},"cursor":{"x":20}}],[0.133807,{"lines":{"36":[["(gdb) # what a strang                                                            ",{}]]},"cursor":{"x":21}}],[0.1738,{"lines":{"36":[["(gdb) # what a strange                                                           ",{}]]},"cursor":{"x":22}}],[0.049646,{"cursor":{"x":23}}],[0.25036,{"lines":{"36":[["(gdb) # what a strange s                                                         ",{}]]},"cursor":{"x":24}}],[0.215133,{"lines":{"36":[["(gdb) # what a strange st                                                        ",{}]]},"cursor":{"x":25}}],[0.142335,{"lines":{"36":[["(gdb) # what a strange str                                                       ",{}]]},"cursor":{"x":26}}],[0.119009,{"lines":{"36":[["(gdb) # what a strange stri                                                      ",{}]]},"cursor":{"x":27}}],[0.054771,{"lines":{"36":[["(gdb) # what a strange strin                                                     ",{}]]},"cursor":{"x":28}}],[0.180483,{"lines":{"36":[["(gdb) # what a strange string                                                    ",{}]]},"cursor":{"x":29}}],[0.344636,{"lines":{"36":[["(gdb) # what a strange string.                                                   ",{}]]},"cursor":{"x":30}}],[0.166211,{"lines":{"36":[["(gdb) # what a strange string..                                                  ",{}]]},"cursor":{"x":31}}],[0.149906,{"lines":{"36":[["(gdb) # what a strange string...                                                 ",{}]]},"cursor":{"x":32}}],[1.041434,{"lines":{"0":[["   0x0804886a <+116>:   sar    edx,0x3                                           ",{}]],"1":[["   0x0804886d <+119>:   mov    eax,ecx                                           ",{}]],"2":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"3":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"4":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"5":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"6":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"7":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"8":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"9":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"10":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"11":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"12":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"13":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"14":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"15":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"16":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"17":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"18":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"19":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"20":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"21":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"22":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"23":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"24":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"25":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"26":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"27":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"28":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"29":[["   0x080488bb <+197>:   ret                                                      ",{}]],"30":[["End of assembler dump.                                                           ",{}]],"31":[["(gdb) x/wx $esp                                                                  ",{}]],"32":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"33":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"34":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"35":[["(gdb) # what a strange string...                                                 ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.043179,{"lines":{"36":[["(gdb) x/wx                                                                       ",{}]]},"cursor":{"x":10}}],[0.200482,{"cursor":{"x":11}}],[1.197183,{"lines":{"36":[["(gdb) x/wx $esp                                                                  ",{}]]},"cursor":{"x":15}}],[4.222519,{"lines":{"36":[["(gdb) x/wx $esp+                                                                 ",{}]]},"cursor":{"x":16}}],[0.602149,{"lines":{"36":[["(gdb) x/wx $esp+0x4                                                              ",{}]]},"cursor":{"x":19}}],[1.006906,{"lines":{"0":[["   0x0804886f <+121>:   sar    eax,0x1f                                          ",{}]],"1":[["   0x08048872 <+124>:   sub    edx,eax                                           ",{}]],"2":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"3":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"4":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"5":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"6":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"7":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"8":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"9":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"10":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"11":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"12":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"13":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"14":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"15":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"16":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"17":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"18":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"19":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"20":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"21":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"22":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"23":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"24":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"25":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"26":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"27":[["   0x080488bb <+197>:   ret                                                      ",{}]],"28":[["End of assembler dump.                                                           ",{}]],"29":[["(gdb) x/wx $esp                                                                  ",{}]],"30":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"31":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"32":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"33":[["(gdb) # what a strange string...                                                 ",{}]],"34":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"35":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.89339,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.152623,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.131454,{"lines":{"36":[["(gdb) x/s                                                                        ",{}]]},"cursor":{"x":9}}],[0.138454,{"cursor":{"x":10}}],[1.714258,{"lines":{"36":[["(gdb) x/s 0xbffff682                                                             ",{}]]},"cursor":{"x":20}}],[0.422984,{"lines":{"0":[["   0x08048874 <+126>:   mov    eax,edx                                           ",{}]],"1":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"2":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"3":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"4":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"5":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"6":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"7":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"8":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"9":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"10":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"11":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"12":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"13":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"14":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"15":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"17":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"18":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"19":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"20":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"21":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"22":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"23":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"24":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"25":[["   0x080488bb <+197>:   ret                                                      ",{}]],"26":[["End of assembler dump.                                                           ",{}]],"27":[["(gdb) x/wx $esp                                                                  ",{}]],"28":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"29":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"30":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"31":[["(gdb) # what a strange string...                                                 ",{}]],"32":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"33":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"34":[["(gdb) x/s 0xbffff682                                                             ",{}]],"35":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.926219,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.110749,{"cursor":{"x":8}}],[0.335604,{"lines":{"36":[["(gdb) # o                                                                        ",{}]]},"cursor":{"x":9}}],[0.171406,{"lines":{"36":[["(gdb) # oh                                                                       ",{}]]},"cursor":{"x":10}}],[0.118136,{"cursor":{"x":11}}],[0.141813,{"lines":{"36":[["(gdb) # oh t                                                                     ",{}]]},"cursor":{"x":12}}],[0.08647299999999999,{"lines":{"36":[["(gdb) # oh th                                                                    ",{}]]},"cursor":{"x":13}}],[0.039621,{"lines":{"36":[["(gdb) # oh thi                                                                   ",{}]]},"cursor":{"x":14}}],[0.147731,{"lines":{"36":[["(gdb) # oh this                                                                  ",{}]]},"cursor":{"x":15}}],[0.042194,{"cursor":{"x":16}}],[0.180987,{"lines":{"36":[["(gdb) # oh this i                                                                ",{}]]},"cursor":{"x":17}}],[0.101885,{"lines":{"36":[["(gdb) # oh this is                                                               ",{}]]},"cursor":{"x":18}}],[0.03144,{"cursor":{"x":19}}],[0.31673,{"lines":{"36":[["(gdb) # oh this is o                                                             ",{}]]},"cursor":{"x":20}}],[0.11826,{"lines":{"36":[["(gdb) # oh this is ou                                                            ",{}]]},"cursor":{"x":21}}],[0.173122,{"lines":{"36":[["(gdb) # oh this is our                                                           ",{}]]},"cursor":{"x":22}}],[0.057015,{"cursor":{"x":23}}],[0.124686,{"lines":{"36":[["(gdb) # oh this is our p                                                         ",{}]]},"cursor":{"x":24}}],[0.107062,{"lines":{"36":[["(gdb) # oh this is our pa                                                        ",{}]]},"cursor":{"x":25}}],[0.246442,{"lines":{"36":[["(gdb) # oh this is our pas                                                       ",{}]]},"cursor":{"x":26}}],[0.158707,{"lines":{"36":[["(gdb) # oh this is our pass                                                      ",{}]]},"cursor":{"x":27}}],[0.142303,{"lines":{"36":[["(gdb) # oh this is our passw                                                     ",{}]]},"cursor":{"x":28}}],[0.094232,{"lines":{"36":[["(gdb) # oh this is our passwo                                                    ",{}]]},"cursor":{"x":29}}],[0.134779,{"lines":{"36":[["(gdb) # oh this is our passwor                                                   ",{}]]},"cursor":{"x":30}}],[0.174005,{"lines":{"36":[["(gdb) # oh this is our password                                                  ",{}]]},"cursor":{"x":31}}],[0.396575,{"lines":{"36":[["(gdb) # oh this is our password!                                                 ",{}]]},"cursor":{"x":32}}],[2.340897,{"lines":{"0":[["   0x08048876 <+128>:   imul   eax,eax,0x1a                                      ",{}]],"1":[["   0x08048879 <+131>:   sub    ecx,eax                                           ",{}]],"2":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"3":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"4":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"5":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"6":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"7":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"9":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"10":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"11":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"12":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"13":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"14":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"16":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"17":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"18":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"19":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"20":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"21":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"22":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"23":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"24":[["   0x080488bb <+197>:   ret                                                      ",{}]],"25":[["End of assembler dump.                                                           ",{}]],"26":[["(gdb) x/wx $esp                                                                  ",{}]],"27":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"28":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"29":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"30":[["(gdb) # what a strange string...                                                 ",{}]],"31":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"32":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"33":[["(gdb) x/s 0xbffff682                                                             ",{}]],"34":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"35":[["(gdb) # oh this is our password!                                                 ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[4.697913,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.2572,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.411947,{"lines":{"36":[["(gdb) x/w                                                                        ",{}]]},"cursor":{"x":9}}],[0.214253,{"lines":{"36":[["(gdb) x/wx                                                                       ",{}]]},"cursor":{"x":10}}],[0.137429,{"cursor":{"x":11}}],[2.136768,{"lines":{"36":[["(gdb) x/wx $esp+0x4                                                              ",{}]]},"cursor":{"x":19}}],[0.505831,{"lines":{"36":[["(gdb) x/wx $esp+0x                                                               ",{}]]},"cursor":{"x":18}}],[0.35665,{"lines":{"36":[["(gdb) x/wx $esp+0x8                                                              ",{}]]},"cursor":{"x":19}}],[0.841433,{"lines":{"0":[["   0x0804887b <+133>:   mov    eax,ecx                                           ",{}]],"1":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"2":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"3":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"4":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"5":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"6":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"7":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"9":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"10":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"11":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"12":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"14":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"15":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"16":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"17":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"18":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"19":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"20":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"21":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"22":[["   0x080488bb <+197>:   ret                                                      ",{}]],"23":[["End of assembler dump.                                                           ",{}]],"24":[["(gdb) x/wx $esp                                                                  ",{}]],"25":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"26":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"27":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"28":[["(gdb) # what a strange string...                                                 ",{}]],"29":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"30":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"31":[["(gdb) x/s 0xbffff682                                                             ",{}]],"32":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"33":[["(gdb) # oh this is our password!                                                 ",{}]],"34":[["(gdb) x/wx $esp+0x8                                                              ",{}]],"35":[["0xbffff3b8:     0x00000006                                                       ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.497268,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.0866,{"cursor":{"x":8}}],[0.77159,{"lines":{"36":[["(gdb) # s                                                                        ",{}]]},"cursor":{"x":9}}],[0.07281600000000001,{"lines":{"36":[["(gdb) # so                                                                       ",{}]]},"cursor":{"x":10}}],[0.261857,{"lines":{"36":[["(gdb) # so,                                                                      ",{}]]},"cursor":{"x":11}}],[0.119815,{"cursor":{"x":12}}],[0.852781,{"lines":{"36":[["(gdb) # so, t                                                                    ",{}]]},"cursor":{"x":13}}],[0.150835,{"lines":{"36":[["(gdb) # so, th                                                                   ",{}]]},"cursor":{"x":14}}],[0.141059,{"lines":{"36":[["(gdb) # so, the                                                                  ",{}]]},"cursor":{"x":15}}],[0.057991,{"cursor":{"x":16}}],[0.195059,{"lines":{"36":[["(gdb) # so, the f                                                                ",{}]]},"cursor":{"x":17}}],[0.086689,{"lines":{"36":[["(gdb) # so, the fi                                                               ",{}]]},"cursor":{"x":18}}],[0.109766,{"lines":{"36":[["(gdb) # so, the fir                                                              ",{}]]},"cursor":{"x":19}}],[0.197284,{"lines":{"36":[["(gdb) # so, the firs                                                             ",{}]]},"cursor":{"x":20}}],[0.207101,{"lines":{"36":[["(gdb) # so, the first                                                            ",{}]]},"cursor":{"x":21}}],[0.089727,{"cursor":{"x":22}}],[0.227258,{"lines":{"36":[["(gdb) # so, the first 6                                                          ",{}]]},"cursor":{"x":23}}],[0.073714,{"cursor":{"x":24}}],[0.330288,{"lines":{"36":[["(gdb) # so, the first 6 b                                                        ",{}]]},"cursor":{"x":25}}],[0.166712,{"lines":{"36":[["(gdb) # so, the first 6 by                                                       ",{}]]},"cursor":{"x":26}}],[0.150101,{"lines":{"36":[["(gdb) # so, the first 6 byt                                                      ",{}]]},"cursor":{"x":27}}],[0.238327,{"lines":{"36":[["(gdb) # so, the first 6 byte                                                     ",{}]]},"cursor":{"x":28}}],[0.197324,{"lines":{"36":[["(gdb) # so, the first 6 bytes                                                    ",{}]]},"cursor":{"x":29}}],[0.050384,{"cursor":{"x":30}}],[0.212415,{"lines":{"36":[["(gdb) # so, the first 6 bytes o                                                  ",{}]]},"cursor":{"x":31}}],[0.108755,{"lines":{"36":[["(gdb) # so, the first 6 bytes of                                                 ",{}]]},"cursor":{"x":32}}],[0.08823,{"cursor":{"x":33}}],[2.55467,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ                                          ",{}]]},"cursor":{"x":39}}],[0.24075,{"cursor":{"x":40}}],[0.241813,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ a                                        ",{}]]},"cursor":{"x":41}}],[0.104436,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ an                                       ",{}]]},"cursor":{"x":42}}],[0.116584,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and                                      ",{}]]},"cursor":{"x":43}}],[0.057904,{"cursor":{"x":44}}],[1.908121,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA                            ",{}]]},"cursor":{"x":53}}],[0.100456,{"cursor":{"x":54}}],[0.266717,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA a                          ",{}]]},"cursor":{"x":55}}],[0.231965,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA ar                         ",{}]]},"cursor":{"x":56}}],[0.149893,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are                        ",{}]]},"cursor":{"x":57}}],[0.057444,{"cursor":{"x":58}}],[0.179055,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are c                      ",{}]]},"cursor":{"x":59}}],[0.06457599999999999,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are co                     ",{}]]},"cursor":{"x":60}}],[0.068912,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are com                    ",{}]]},"cursor":{"x":61}}],[0.126885,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are comp                   ",{}]]},"cursor":{"x":62}}],[0.107518,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compa                  ",{}]]},"cursor":{"x":63}}],[0.254853,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compar                 ",{}]]},"cursor":{"x":64}}],[0.174,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compare                ",{}]]},"cursor":{"x":65}}],[0.182229,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared               ",{}]]},"cursor":{"x":66}}],[0.7459750000000001,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared.              ",{}]]},"cursor":{"x":67}}],[0.102399,{"cursor":{"x":68}}],[0.997459,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. I            ",{}]]},"cursor":{"x":69}}],[0.30837,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If           ",{}]]},"cursor":{"x":70}}],[0.049287,{"cursor":{"x":71}}],[0.988394,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If t         ",{}]]},"cursor":{"x":72}}],[0.126468,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If th        ",{}]]},"cursor":{"x":73}}],[0.293378,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If the       ",{}]]},"cursor":{"x":74}}],[0.296199,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they      ",{}]]},"cursor":{"x":75}}],[0.103521,{"cursor":{"x":76}}],[0.402584,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they a    ",{}]]},"cursor":{"x":77}}],[0.311779,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they ar   ",{}]]},"cursor":{"x":78}}],[0.16626,{"lines":{"36":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they are  ",{}]]},"cursor":{"x":79}}],[0.066166,{"cursor":{"x":80}}],[0.346556,{"lines":{"0":[["   0x0804887d <+135>:   add    eax,0x41                                          ",{}]],"1":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"2":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"3":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"4":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"5":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"6":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"7":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"8":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"9":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"10":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"11":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"12":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"13":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"14":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"15":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"16":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"17":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"18":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"19":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"20":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"21":[["   0x080488bb <+197>:   ret                                                      ",{}]],"22":[["End of assembler dump.                                                           ",{}]],"23":[["(gdb) x/wx $esp                                                                  ",{}]],"24":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"25":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"26":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"27":[["(gdb) # what a strange string...                                                 ",{}]],"28":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"29":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"30":[["(gdb) x/s 0xbffff682                                                             ",{}]],"31":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"32":[["(gdb) # oh this is our password!                                                 ",{}]],"33":[["(gdb) x/wx $esp+0x8                                                              ",{}]],"34":[["0xbffff3b8:     0x00000006                                                       ",{}]],"35":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they are e",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.269321,{"lines":{"36":[["q                                                                                ",{}]]},"cursor":{"x":1}}],[0.136302,{"lines":{"36":[["qu                                                                               ",{}]]},"cursor":{"x":2}}],[0.108101,{"lines":{"36":[["qua                                                                              ",{}]]},"cursor":{"x":3}}],[0.185325,{"lines":{"36":[["qual                                                                             ",{}]]},"cursor":{"x":4}}],[0.343313,{"cursor":{"x":5}}],[0.315937,{"lines":{"36":[["qual t                                                                           ",{}]]},"cursor":{"x":6}}],[0.103114,{"lines":{"36":[["qual th                                                                          ",{}]]},"cursor":{"x":7}}],[0.148877,{"lines":{"36":[["qual the                                                                         ",{}]]},"cursor":{"x":8}}],[0.09836399999999999,{"cursor":{"x":9}}],[0.194409,{"lines":{"36":[["qual the f                                                                       ",{}]]},"cursor":{"x":10}}],[0.126818,{"lines":{"36":[["qual the fu                                                                      ",{}]]},"cursor":{"x":11}}],[0.071464,{"lines":{"36":[["qual the fun                                                                     ",{}]]},"cursor":{"x":12}}],[0.103048,{"lines":{"36":[["qual the func                                                                    ",{}]]},"cursor":{"x":13}}],[0.203607,{"lines":{"36":[["qual the funct                                                                   ",{}]]},"cursor":{"x":14}}],[0.064027,{"lines":{"36":[["qual the functi                                                                  ",{}]]},"cursor":{"x":15}}],[0.157905,{"lines":{"36":[["qual the functio                                                                 ",{}]]},"cursor":{"x":16}}],[0.08624,{"lines":{"36":[["qual the function                                                                ",{}]]},"cursor":{"x":17}}],[0.143458,{"cursor":{"x":18}}],[0.51522,{"lines":{"36":[["qual the function w                                                              ",{}]]},"cursor":{"x":19}}],[0.144209,{"lines":{"36":[["qual the function wi                                                             ",{}]]},"cursor":{"x":20}}],[0.198831,{"lines":{"36":[["qual the function wil                                                            ",{}]]},"cursor":{"x":21}}],[0.142094,{"lines":{"36":[["qual the function will                                                           ",{}]]},"cursor":{"x":22}}],[0.119127,{"cursor":{"x":23}}],[0.24381,{"lines":{"36":[["qual the function will r                                                         ",{}]]},"cursor":{"x":24}}],[0.165522,{"lines":{"36":[["qual the function will re                                                        ",{}]]},"cursor":{"x":25}}],[0.215302,{"lines":{"36":[["qual the function will ret                                                       ",{}]]},"cursor":{"x":26}}],[0.094662,{"lines":{"36":[["qual the function will retu                                                      ",{}]]},"cursor":{"x":27}}],[0.109034,{"lines":{"36":[["qual the function will retur                                                     ",{}]]},"cursor":{"x":28}}],[0.127151,{"lines":{"36":[["qual the function will return                                                    ",{}]]},"cursor":{"x":29}}],[0.104398,{"cursor":{"x":30}}],[0.851149,{"lines":{"36":[["qual the function will return 1                                                  ",{}]]},"cursor":{"x":31}}],[0.216974,{"lines":{"36":[["qual the function will return 1,                                                 ",{}]]},"cursor":{"x":32}}],[0.159528,{"cursor":{"x":33}}],[0.133685,{"lines":{"36":[["qual the function will return 1, o                                               ",{}]]},"cursor":{"x":34}}],[0.268948,{"lines":{"36":[["qual the function will return 1, ot                                              ",{}]]},"cursor":{"x":35}}],[0.142289,{"lines":{"36":[["qual the function will return 1, oth                                             ",{}]]},"cursor":{"x":36}}],[0.181892,{"lines":{"36":[["qual the function will return 1, othe                                            ",{}]]},"cursor":{"x":37}}],[0.150179,{"lines":{"36":[["qual the function will return 1, other                                           ",{}]]},"cursor":{"x":38}}],[0.318149,{"lines":{"36":[["qual the function will return 1, otherw                                          ",{}]]},"cursor":{"x":39}}],[0.111414,{"lines":{"36":[["qual the function will return 1, otherwi                                         ",{}]]},"cursor":{"x":40}}],[0.09384199999999999,{"lines":{"36":[["qual the function will return 1, otherwis                                        ",{}]]},"cursor":{"x":41}}],[0.181299,{"lines":{"36":[["qual the function will return 1, otherwise                                       ",{}]]},"cursor":{"x":42}}],[0.698588,{"cursor":{"x":43}}],[0.340538,{"lines":{"36":[["qual the function will return 1, otherwise i                                     ",{}]]},"cursor":{"x":44}}],[0.14147,{"lines":{"36":[["qual the function will return 1, otherwise it                                    ",{}]]},"cursor":{"x":45}}],[0.065189,{"cursor":{"x":46}}],[0.314236,{"lines":{"36":[["qual the function will return 1, otherwise it w                                  ",{}]]},"cursor":{"x":47}}],[0.128649,{"lines":{"36":[["qual the function will return 1, otherwise it wi                                 ",{}]]},"cursor":{"x":48}}],[0.238191,{"lines":{"36":[["qual the function will return 1, otherwise it wil                                ",{}]]},"cursor":{"x":49}}],[0.134341,{"lines":{"36":[["qual the function will return 1, otherwise it will                               ",{}]]},"cursor":{"x":50}}],[0.191627,{"cursor":{"x":51}}],[0.380128,{"lines":{"36":[["qual the function will return 1, otherwise it will f                             ",{}]]},"cursor":{"x":52}}],[0.164897,{"lines":{"36":[["qual the function will return 1, otherwise it will fa                            ",{}]]},"cursor":{"x":53}}],[0.173752,{"lines":{"36":[["qual the function will return 1, otherwise it will fai                           ",{}]]},"cursor":{"x":54}}],[0.201485,{"lines":{"36":[["qual the function will return 1, otherwise it will fail                          ",{}]]},"cursor":{"x":55}}],[0.48314,{"lines":{"36":[["qual the function will return 1, otherwise it will fail!                         ",{}]]},"cursor":{"x":56}}],[3.318513,{"lines":{"0":[["   0x08048880 <+138>:   mov    BYTE PTR [ebx],al                                 ",{}]],"1":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"2":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"3":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"4":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"5":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"6":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"7":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"8":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"9":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"10":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"12":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"13":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"14":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"15":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"16":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"17":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"18":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"19":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"20":[["   0x080488bb <+197>:   ret                                                      ",{}]],"21":[["End of assembler dump.                                                           ",{}]],"22":[["(gdb) x/wx $esp                                                                  ",{}]],"23":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"24":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"25":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"26":[["(gdb) # what a strange string...                                                 ",{}]],"27":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"28":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"29":[["(gdb) x/s 0xbffff682                                                             ",{}]],"30":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"31":[["(gdb) # oh this is our password!                                                 ",{}]],"32":[["(gdb) x/wx $esp+0x8                                                              ",{}]],"33":[["0xbffff3b8:     0x00000006                                                       ",{}]],"34":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they are e",{}]],"35":[["qual the function will return 1, otherwise it will fail!                         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.654794,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.085731,{"cursor":{"x":8}}],[2.073391,{"lines":{"36":[["(gdb) # l                                                                        ",{}]]},"cursor":{"x":9}}],[0.122957,{"lines":{"36":[["(gdb) # le                                                                       ",{}]]},"cursor":{"x":10}}],[0.528072,{"lines":{"36":[["(gdb) # let                                                                      ",{}]]},"cursor":{"x":11}}],[0.232079,{"lines":{"36":[["(gdb) # let'                                                                     ",{}]]},"cursor":{"x":12}}],[0.163091,{"lines":{"36":[["(gdb) # let's                                                                    ",{}]]},"cursor":{"x":13}}],[0.082595,{"cursor":{"x":14}}],[0.427422,{"lines":{"36":[["(gdb) # let's t                                                                  ",{}]]},"cursor":{"x":15}}],[0.158073,{"lines":{"36":[["(gdb) # let's tr                                                                 ",{}]]},"cursor":{"x":16}}],[0.199279,{"lines":{"36":[["(gdb) # let's try                                                                ",{}]]},"cursor":{"x":17}}],[0.081024,{"cursor":{"x":18}}],[0.395226,{"lines":{"36":[["(gdb) # let's try t                                                              ",{}]]},"cursor":{"x":19}}],[0.167363,{"lines":{"36":[["(gdb) # let's try to                                                             ",{}]]},"cursor":{"x":20}}],[0.111243,{"cursor":{"x":21}}],[0.622762,{"lines":{"36":[["(gdb) # let's try to l                                                           ",{}]]},"cursor":{"x":22}}],[0.108055,{"lines":{"36":[["(gdb) # let's try to la                                                          ",{}]]},"cursor":{"x":23}}],[0.158358,{"lines":{"36":[["(gdb) # let's try to lan                                                         ",{}]]},"cursor":{"x":24}}],[0.149646,{"lines":{"36":[["(gdb) # let's try to land                                                        ",{}]]},"cursor":{"x":25}}],[0.04214,{"cursor":{"x":26}}],[0.541296,{"lines":{"36":[["(gdb) # let's try to land o                                                      ",{}]]},"cursor":{"x":27}}],[0.08549900000000001,{"lines":{"36":[["(gdb) # let's try to land on                                                     ",{}]]},"cursor":{"x":28}}],[0.207264,{"cursor":{"x":29}}],[0.812903,{"lines":{"36":[["(gdb) # let's try to land on t                                                   ",{}]]},"cursor":{"x":30}}],[0.118781,{"lines":{"36":[["(gdb) # let's try to land on th                                                  ",{}]]},"cursor":{"x":31}}],[0.095664,{"lines":{"36":[["(gdb) # let's try to land on thi                                                 ",{}]]},"cursor":{"x":32}}],[0.172027,{"lines":{"36":[["(gdb) # let's try to land on thir                                                ",{}]]},"cursor":{"x":33}}],[0.222322,{"lines":{"36":[["(gdb) # let's try to land on third                                               ",{}]]},"cursor":{"x":34}}],[0.287643,{"lines":{"36":[["(gdb) # let's try to land on third_                                              ",{}]]},"cursor":{"x":35}}],[0.251013,{"lines":{"36":[["(gdb) # let's try to land on third_c                                             ",{}]]},"cursor":{"x":36}}],[0.08627899999999999,{"lines":{"36":[["(gdb) # let's try to land on third_ch                                            ",{}]]},"cursor":{"x":37}}],[0.104051,{"lines":{"36":[["(gdb) # let's try to land on third_che                                           ",{}]]},"cursor":{"x":38}}],[0.11654,{"lines":{"36":[["(gdb) # let's try to land on third_chec                                          ",{}]]},"cursor":{"x":39}}],[0.151266,{"lines":{"36":[["(gdb) # let's try to land on third_check                                         ",{}]]},"cursor":{"x":40}}],[0.448228,{"cursor":{"x":41}}],[0.228516,{"lines":{"36":[["(gdb) # let's try to land on third_check n                                       ",{}]]},"cursor":{"x":42}}],[0.135067,{"lines":{"36":[["(gdb) # let's try to land on third_check no                                      ",{}]]},"cursor":{"x":43}}],[0.235952,{"lines":{"36":[["(gdb) # let's try to land on third_check now                                     ",{}]]},"cursor":{"x":44}}],[0.272807,{"lines":{"36":[["(gdb) # let's try to land on third_check now.                                    ",{}]]},"cursor":{"x":45}}],[0.157978,{"lines":{"36":[["(gdb) # let's try to land on third_check now..                                   ",{}]]},"cursor":{"x":46}}],[0.142461,{"lines":{"36":[["(gdb) # let's try to land on third_check now...                                  ",{}]]},"cursor":{"x":47}}],[0.103111,{"lines":{"0":[["   0x08048882 <+140>:   add    DWORD PTR [ebp-0x10],0x1                          ",{}]],"1":[["   0x08048886 <+144>:   mov    eax,DWORD PTR [ebp-0x10]                          ",{}]],"2":[["   0x08048889 <+147>:   cmp    eax,DWORD PTR [ebp+0xc]                           ",{}]],"3":[["   0x0804888c <+150>:   jb     0x804881c <second_check+38>                       ",{}]],"4":[["   0x0804888e <+152>:   mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"5":[["   0x08048891 <+155>:   mov    DWORD PTR [esp+0x8],eax                           ",{}]],"6":[["   0x08048895 <+159>:   mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"7":[["   0x08048898 <+162>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"8":[["   0x0804889c <+166>:   mov    eax,DWORD PTR [ebp-0xc]                           ",{}]],"9":[["   0x0804889f <+169>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["=> 0x080488a2 <+172>:   call   0x80485a0 <strncmp@plt>                           ",{}]],"11":[["   0x080488a7 <+177>:   test   eax,eax                                           ",{}]],"12":[["   0x080488a9 <+179>:   jne    0x80488b2 <second_check+188>                      ",{}]],"13":[["   0x080488ab <+181>:   mov    DWORD PTR [ebp-0x14],0x1                          ",{}]],"14":[["   0x080488b2 <+188>:   mov    eax,DWORD PTR [ebp-0x14]                          ",{}]],"15":[["   0x080488b5 <+191>:   add    esp,0x20                                          ",{}]],"16":[["   0x080488b8 <+194>:   pop    ebx                                               ",{}]],"17":[["   0x080488b9 <+195>:   pop    esi                                               ",{}]],"18":[["   0x080488ba <+196>:   pop    ebp                                               ",{}]],"19":[["   0x080488bb <+197>:   ret                                                      ",{}]],"20":[["End of assembler dump.                                                           ",{}]],"21":[["(gdb) x/wx $esp                                                                  ",{}]],"22":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"23":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"24":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"25":[["(gdb) # what a strange string...                                                 ",{}]],"26":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"27":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"28":[["(gdb) x/s 0xbffff682                                                             ",{}]],"29":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"30":[["(gdb) # oh this is our password!                                                 ",{}]],"31":[["(gdb) x/wx $esp+0x8                                                              ",{}]],"32":[["0xbffff3b8:     0x00000006                                                       ",{}]],"33":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they are e",{}]],"34":[["qual the function will return 1, otherwise it will fail!                         ",{}]],"35":[["(gdb) # let's try to land on third_check now...                                  ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[3.152216,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.071767,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.132299,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.141642,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.174663,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.185772,{"cursor":{"x":12}}],[0.932396,{"lines":{"36":[["(gdb) disas c                                                                    ",{}]]},"cursor":{"x":13}}],[0.231004,{"lines":{"36":[["(gdb) disas cr                                                                   ",{}]]},"cursor":{"x":14}}],[0.253102,{"lines":{"36":[["(gdb) disas cra                                                                  ",{}]]},"cursor":{"x":15}}],[0.19892,{"lines":{"36":[["(gdb) disas crac                                                                 ",{}]]},"cursor":{"x":16}}],[0.192067,{"lines":{"36":[["(gdb) disas crack                                                                ",{}]]},"cursor":{"x":17}}],[0.9356370000000001,{"lines":{"36":[["(gdb) disas cracky                                                               ",{}]]},"cursor":{"x":18}}],[0.125499,{"lines":{"36":[["(gdb) disas crackyo                                                              ",{}]]},"cursor":{"x":19}}],[0.071142,{"lines":{"36":[["(gdb) disas crackyou                                                             ",{}]]},"cursor":{"x":20}}],[5.930335,{"lines":{"0":[["0xbffff3b0:     0x0804d8b0                                                       ",{}]],"1":[["(gdb) x/s 0x0804d8b0                                                             ",{}]],"2":[["0x804d8b0:      \"VFHFOQ\"                                                         ",{}]],"3":[["(gdb) # what a strange string...                                                 ",{}]],"4":[["(gdb) x/wx $esp+0x4                                                              ",{}]],"5":[["0xbffff3b4:     0xbffff682                                                       ",{}]],"6":[["(gdb) x/s 0xbffff682                                                             ",{}]],"7":[["0xbffff682:     \"AAAAAAAAA\"                                                      ",{}]],"8":[["(gdb) # oh this is our password!                                                 ",{}]],"9":[["(gdb) x/wx $esp+0x8                                                              ",{}]],"10":[["0xbffff3b8:     0x00000006                                                       ",{}]],"11":[["(gdb) # so, the first 6 bytes of VFHFOQ and AAAAAAAAA are compared. If they are e",{}]],"12":[["qual the function will return 1, otherwise it will fail!                         ",{}]],"13":[["(gdb) # let's try to land on third_check now...                                  ",{}]],"14":[["(gdb) disas crackyou                                                             ",{}]],"15":[["Dump of assembler code for function crackyou:                                    ",{}]],"16":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"17":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"18":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"19":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"20":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"21":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"22":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"23":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"24":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"25":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"26":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"27":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"28":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"29":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"30":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"31":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"32":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"33":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"34":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"35":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"36":[["   0x08048969 <+65>:    mov    B                                                 ",{}]]},"cursor":{"x":32}}],[4.5e-05,{"lines":{"0":[["Dump of assembler code for function crackyou:                                    ",{}]],"1":[["   0x08048928 <+0>:     push   ebp                                               ",{}]],"2":[["   0x08048929 <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x0804892b <+3>:     push   esi                                               ",{}]],"4":[["   0x0804892c <+4>:     push   ebx                                               ",{}]],"5":[["   0x0804892d <+5>:     sub    esp,0x60                                          ",{}]],"6":[["   0x08048930 <+8>:     mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x08048933 <+11>:    mov    DWORD PTR [ebp-0x4c],eax                          ",{}]],"8":[["   0x08048936 <+14>:    mov    eax,gs:0x14                                       ",{}]],"9":[["   0x0804893c <+20>:    mov    DWORD PTR [ebp-0xc],eax                           ",{}]],"10":[["   0x0804893f <+23>:    xor    eax,eax                                           ",{}]],"11":[["   0x08048941 <+25>:    mov    BYTE PTR [ebp-0x2a],0x6b                          ",{}]],"12":[["   0x08048945 <+29>:    mov    BYTE PTR [ebp-0x29],0x46                          ",{}]],"13":[["   0x08048949 <+33>:    mov    BYTE PTR [ebp-0x28],0x6d                          ",{}]],"14":[["   0x0804894d <+37>:    mov    BYTE PTR [ebp-0x27],0x78                          ",{}]],"15":[["   0x08048951 <+41>:    mov    BYTE PTR [ebp-0x26],0x57                          ",{}]],"16":[["   0x08048955 <+45>:    mov    BYTE PTR [ebp-0x25],0x6a                          ",{}]],"17":[["   0x08048959 <+49>:    mov    BYTE PTR [ebp-0x24],0x48                          ",{}]],"18":[["   0x0804895d <+53>:    mov    BYTE PTR [ebp-0x23],0x58                          ",{}]],"19":[["   0x08048961 <+57>:    mov    BYTE PTR [ebp-0x22],0x55                          ",{}]],"20":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"21":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"22":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"23":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"24":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"25":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"26":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"27":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"28":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"29":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"30":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"31":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"32":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"33":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"34":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"35":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[0.734554,{"lines":{"0":[["   0x08048965 <+61>:    mov    BYTE PTR [ebp-0x21],0x48                          ",{}]],"1":[["   0x08048969 <+65>:    mov    BYTE PTR [ebp-0x20],0x71                          ",{}]],"2":[["   0x0804896d <+69>:    mov    BYTE PTR [ebp-0x1f],0x6b                          ",{}]],"3":[["   0x08048971 <+73>:    mov    BYTE PTR [ebp-0x1e],0x4c                          ",{}]],"4":[["   0x08048975 <+77>:    mov    BYTE PTR [ebp-0x1d],0x58                          ",{}]],"5":[["   0x08048979 <+81>:    mov    BYTE PTR [ebp-0x1c],0x69                          ",{}]],"6":[["   0x0804897d <+85>:    mov    BYTE PTR [ebp-0x1b],0x51                          ",{}]],"7":[["   0x08048981 <+89>:    mov    BYTE PTR [ebp-0x1a],0x62                          ",{}]],"8":[["   0x08048985 <+93>:    mov    BYTE PTR [ebp-0x19],0x76                          ",{}]],"9":[["   0x08048989 <+97>:    mov    BYTE PTR [ebp-0x18],0x47                          ",{}]],"10":[["   0x0804898d <+101>:   mov    BYTE PTR [ebp-0x17],0x78                          ",{}]],"11":[["   0x08048991 <+105>:   mov    BYTE PTR [ebp-0x16],0x77                          ",{}]],"12":[["   0x08048995 <+109>:   mov    BYTE PTR [ebp-0x15],0x4e                          ",{}]],"13":[["   0x08048999 <+113>:   mov    BYTE PTR [ebp-0x14],0x6a                          ",{}]],"14":[["   0x0804899d <+117>:   mov    BYTE PTR [ebp-0x13],0x50                          ",{}]],"15":[["   0x080489a1 <+121>:   mov    BYTE PTR [ebp-0x12],0x54                          ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"18":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"19":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"20":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"21":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"22":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"23":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"24":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"26":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"27":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"30":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"31":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"32":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"33":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"34":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"35":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"36":[["   0x0                                                                           ",{}]]},"cursor":{"x":6}}],[4e-05,{"lines":{"0":[["   0x080489a5 <+125>:   mov    BYTE PTR [ebp-0x11],0x76                          ",{}]],"1":[["   0x080489a9 <+129>:   mov    BYTE PTR [ebp-0x10],0x43                          ",{}]],"2":[["   0x080489ad <+133>:   mov    BYTE PTR [ebp-0xf],0x4e                           ",{}]],"3":[["   0x080489b1 <+137>:   mov    BYTE PTR [ebp-0xe],0x68                           ",{}]],"4":[["   0x080489b5 <+141>:   mov    BYTE PTR [ebp-0xd],0x50                           ",{}]],"5":[["   0x080489b9 <+145>:   mov    DWORD PTR [ebp-0x40],0x0                          ",{}]],"6":[["   0x080489c0 <+152>:   call   0x8048510 <getuid@plt>                            ",{}]],"7":[["   0x080489c5 <+157>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x080489c8 <+160>:   call   0x80484d0 <getpwuid@plt>                          ",{}]],"9":[["   0x080489cd <+165>:   mov    DWORD PTR [ebp-0x3c],eax                          ",{}]],"10":[["   0x080489d0 <+168>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x080489d3 <+171>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x080489d5 <+173>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x080489d8 <+176>:   call   0x8048550 <strlen@plt>                            ",{}]],"14":[["   0x080489dd <+181>:   mov    DWORD PTR [ebp-0x38],eax                          ",{}]],"15":[["   0x080489e0 <+184>:   mov    eax,DWORD PTR [ebp-0x4c]                          ",{}]],"16":[["   0x080489e3 <+187>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x080489e6 <+190>:   call   0x8048550 <strlen@plt>                            ",{}]],"18":[["   0x080489eb <+195>:   mov    DWORD PTR [ebp-0x34],eax                          ",{}]],"19":[["   0x080489ee <+198>:   mov    DWORD PTR [ebp-0x30],0x1e                         ",{}]],"20":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"21":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"22":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"23":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"24":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"26":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"27":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"28":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"29":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"30":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"31":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"32":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"33":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"34":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"35":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[2.61874,{"lines":{"0":[["   0x080489f5 <+205>:   mov    DWORD PTR [ebp-0x44],0xa                          ",{}]],"1":[["   0x080489fc <+212>:   mov    eax,DWORD PTR [ebp-0x38]                          ",{}]],"2":[["   0x080489ff <+215>:   mov    DWORD PTR [esp+0x4],eax                           ",{}]],"3":[["   0x08048a03 <+219>:   mov    eax,DWORD PTR [ebp-0x34]                          ",{}]],"4":[["   0x08048a06 <+222>:   mov    DWORD PTR [esp],eax                               ",{}]],"5":[["   0x08048a09 <+225>:   call   0x80487da <first_check>                           ",{}]],"6":[["   0x08048a0e <+230>:   test   eax,eax                                           ",{}]],"7":[["   0x08048a10 <+232>:   je     0x8048a81 <crackyou+345>                          ",{}]],"8":[["   0x08048a12 <+234>:   mov    DWORD PTR [ebp-0x44],0x5                          ",{}]],"9":[["   0x08048a19 <+241>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"10":[["   0x08048a1c <+244>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"11":[["   0x08048a1f <+247>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"12":[["   0x08048a22 <+250>:   mov    eax,DWORD PTR [eax]                               ",{}]],"13":[["   0x08048a24 <+252>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"14":[["   0x08048a27 <+255>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"15":[["   0x08048a2b <+259>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x08048a2f <+263>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"18":[["   0x08048a32 <+266>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"19":[["   0x08048a36 <+270>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"20":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"22":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"23":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"24":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"25":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"26":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"27":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"28":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"29":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"30":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"31":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"32":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"33":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"34":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"35":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"36":[["   0x08048a71 <+329>:   call   0x804                                             ",{}]]},"cursor":{"x":36}}],[4.5e-05,{"lines":{"0":[["   0x08048a2f <+263>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"1":[["   0x08048a32 <+266>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"2":[["   0x08048a36 <+270>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"3":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"5":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"6":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"7":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"8":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"9":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"10":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"11":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"12":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"13":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"14":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"15":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"16":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"17":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"18":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"20":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"21":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"22":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"23":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"24":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"25":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"26":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"27":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"28":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"29":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"30":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"31":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"32":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"33":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"34":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"35":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[3.173364,{"lines":{"36":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]]},"cursor":{"x":55}}],[2.662222,{"lines":{"0":[["   0x08048a36 <+270>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"1":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"3":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"4":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"5":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"6":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"7":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"8":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"9":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"10":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"11":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"12":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"13":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"14":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"15":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"16":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"18":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"19":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"20":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"21":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"22":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"23":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"24":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"25":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"26":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"27":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"28":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"29":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"30":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"31":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"32":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"33":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"34":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"35":[["Quit                                                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.092737,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.174095,{"lines":{"36":[["(gdb) de                                                                         ",{}]]},"cursor":{"x":8}}],[0.071953,{"lines":{"36":[["(gdb) del                                                                        ",{}]]},"cursor":{"x":9}}],[0.09453400000000001,{"lines":{"36":[["(gdb) dele                                                                       ",{}]]},"cursor":{"x":10}}],[0.252635,{"lines":{"36":[["(gdb) delet                                                                      ",{}]]},"cursor":{"x":11}}],[0.237937,{"lines":{"36":[["(gdb) delete                                                                     ",{}]]},"cursor":{"x":12}}],[0.169059,{"lines":{"0":[["   0x08048a3a <+274>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"2":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"3":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"4":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"5":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"6":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"7":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"8":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"9":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"10":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"11":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"12":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"13":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"14":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"15":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"17":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"18":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"19":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"20":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"21":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"22":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"23":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"24":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"25":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"26":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"27":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"28":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"29":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"30":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"31":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"32":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"33":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"34":[["Quit                                                                             ",{}]],"35":[["(gdb) delete                                                                     ",{}]],"36":[["Delete all breakpoints? (y or n)                                                 ",{}]]},"cursor":{"x":33}}],[0.957601,{"lines":{"36":[["Delete all breakpoints? (y or n) y                                               ",{}]]},"cursor":{"x":34}}],[0.272601,{"lines":{"0":[["   0x08048a3d <+277>:   call   0x80487f6 <second_check>                          ",{}]],"1":[["   0x08048a42 <+282>:   test   eax,eax                                           ",{}]],"2":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"3":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"4":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"5":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"6":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"7":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"8":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"9":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"10":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"11":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"12":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"13":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"14":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"16":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"17":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"18":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"19":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"20":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"21":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"22":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"23":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"24":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"25":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"26":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"27":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"28":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"29":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"30":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"31":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"32":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"33":[["Quit                                                                             ",{}]],"34":[["(gdb) delete                                                                     ",{}]],"35":[["Delete all breakpoints? (y or n) y                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.836964,{"lines":{"36":[["(gdb) b                                                                          ",{}]]},"cursor":{"x":7}}],[0.112498,{"cursor":{"x":8}}],[0.284063,{"lines":{"36":[["(gdb) b *                                                                        ",{}]]},"cursor":{"x":9}}],[1.336962,{"lines":{"36":[["(gdb) b *0x08048a71                                                              ",{}]]},"cursor":{"x":19}}],[2.20374,{"lines":{"0":[["   0x08048a44 <+284>:   je     0x8048a81 <crackyou+345>                          ",{}]],"1":[["   0x08048a46 <+286>:   mov    DWORD PTR [ebp-0x44],0x1                          ",{}]],"2":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"3":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"4":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"5":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"6":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"7":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"8":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"9":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"10":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"11":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"12":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"14":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"15":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"16":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"17":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"18":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"19":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"20":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"21":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"22":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"23":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"24":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"25":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"26":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"27":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"28":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"29":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"30":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"31":[["Quit                                                                             ",{}]],"32":[["(gdb) delete                                                                     ",{}]],"33":[["Delete all breakpoints? (y or n) y                                               ",{}]],"34":[["(gdb) b *0x08048a71                                                              ",{}]],"35":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.5164,{"lines":{"36":[["(gdb) x                                                                          ",{}]]},"cursor":{"x":7}}],[0.145086,{"lines":{"36":[["(gdb) x/                                                                         ",{}]]},"cursor":{"x":8}}],[0.317763,{"lines":{"36":[["(gdb) x/i                                                                        ",{}]]},"cursor":{"x":9}}],[0.159553,{"cursor":{"x":10}}],[0.766548,{"lines":{"36":[["(gdb) x/i 0x08048a71                                                             ",{}]]},"cursor":{"x":20}}],[0.514456,{"lines":{"0":[["   0x08048a4d <+293>:   mov    ecx,DWORD PTR [ebp-0x30]                          ",{}]],"1":[["   0x08048a50 <+296>:   mov    edx,DWORD PTR [ebp-0x38]                          ",{}]],"2":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"3":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"4":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"5":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"6":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"7":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"8":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"9":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"10":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"12":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"13":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"14":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"15":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"16":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"17":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"18":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"19":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"20":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"21":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"22":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"23":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"24":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"25":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"26":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"27":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"28":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"29":[["Quit                                                                             ",{}]],"30":[["(gdb) delete                                                                     ",{}]],"31":[["Delete all breakpoints? (y or n) y                                               ",{}]],"32":[["(gdb) b *0x08048a71                                                              ",{}]],"33":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"34":[["(gdb) x/i 0x08048a71                                                             ",{}]],"35":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.598968,{"lines":{"36":[["(gdb) r                                                                          ",{}]]},"cursor":{"x":7}}],[0.113877,{"cursor":{"x":8}}],[3.374077,{"lines":{"36":[["(gdb) r VFHFOQ                                                                   ",{}]]},"cursor":{"x":14}}],[2.5721,{"lines":{"36":[["(gdb) r VFHFOQH                                                                  ",{}]]},"cursor":{"x":15}}],[0.24694,{"lines":{"36":[["(gdb) r VFHFOQHJ                                                                 ",{}]]},"cursor":{"x":16}}],[0.246423,{"lines":{"36":[["(gdb) r VFHFOQHJK                                                                ",{}]]},"cursor":{"x":17}}],[3.635333,{"lines":{"0":[["   0x08048a53 <+299>:   mov    eax,DWORD PTR [ebp-0x3c]                          ",{}]],"1":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"2":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"3":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"4":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"5":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"6":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"7":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"8":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"10":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"11":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"12":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"13":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"14":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"15":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"17":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"18":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"19":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"20":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"21":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"22":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"23":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"24":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"25":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"26":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"27":[["Quit                                                                             ",{}]],"28":[["(gdb) delete                                                                     ",{}]],"29":[["Delete all breakpoints? (y or n) y                                               ",{}]],"30":[["(gdb) b *0x08048a71                                                              ",{}]],"31":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"32":[["(gdb) x/i 0x08048a71                                                             ",{}]],"33":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"34":[["(gdb) r VFHFOQHJK                                                                ",{}]],"35":[["The program being debugged has been started already.                             ",{}]],"36":[["Start it from the beginning? (y or n)                                            ",{}]]},"cursor":{"x":38}}],[1.05341,{"lines":{"36":[["Start it from the beginning? (y or n) y                                          ",{}]]},"cursor":{"x":39}}],[0.609227,{"lines":{"0":[["   0x08048a56 <+302>:   mov    eax,DWORD PTR [eax]                               ",{}]],"1":[["   0x08048a58 <+304>:   mov    ebx,DWORD PTR [ebp-0x4c]                          ",{}]],"2":[["   0x08048a5b <+307>:   mov    DWORD PTR [esp+0x10],ebx                          ",{}]],"3":[["   0x08048a5f <+311>:   mov    DWORD PTR [esp+0xc],ecx                           ",{}]],"4":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"5":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"6":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"7":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"9":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"10":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"11":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"12":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"13":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"14":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"16":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"17":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"18":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"19":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"20":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"21":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"22":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"23":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"24":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"25":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"26":[["Quit                                                                             ",{}]],"27":[["(gdb) delete                                                                     ",{}]],"28":[["Delete all breakpoints? (y or n) y                                               ",{}]],"29":[["(gdb) b *0x08048a71                                                              ",{}]],"30":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"31":[["(gdb) x/i 0x08048a71                                                             ",{}]],"32":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"33":[["(gdb) r VFHFOQHJK                                                                ",{}]],"34":[["The program being debugged has been started already.                             ",{}]],"35":[["Start it from the beginning? (y or n) y                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.008129000000000001,{"lines":{"0":[["   0x08048a63 <+315>:   lea    ecx,[ebp-0x2a]                                    ",{}]],"1":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"2":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"3":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"4":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"5":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"6":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"7":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"8":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"9":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"10":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"11":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"12":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"13":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"14":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"15":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"16":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"17":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"18":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"19":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"20":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"21":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"22":[["Quit                                                                             ",{}]],"23":[["(gdb) delete                                                                     ",{}]],"24":[["Delete all breakpoints? (y or n) y                                               ",{}]],"25":[["(gdb) b *0x08048a71                                                              ",{}]],"26":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"27":[["(gdb) x/i 0x08048a71                                                             ",{}]],"28":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"29":[["(gdb) r VFHFOQHJK                                                                ",{}]],"30":[["The program being debugged has been started already.                             ",{}]],"31":[["Start it from the beginning? (y or n) y                                          ",{}]],"32":[["                                                                                 ",{}]],"33":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"34":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"35":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]]}}],[0.034859,{"lines":{"0":[["   0x08048a66 <+318>:   mov    DWORD PTR [esp+0x8],ecx                           ",{}]],"1":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"2":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"3":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"4":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"5":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"6":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"7":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"8":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"9":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"10":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"11":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"12":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"13":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"14":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"15":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"16":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"17":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"18":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"19":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"20":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"21":[["Quit                                                                             ",{}]],"22":[["(gdb) delete                                                                     ",{}]],"23":[["Delete all breakpoints? (y or n) y                                               ",{}]],"24":[["(gdb) b *0x08048a71                                                              ",{}]],"25":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"26":[["(gdb) x/i 0x08048a71                                                             ",{}]],"27":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"28":[["(gdb) r VFHFOQHJK                                                                ",{}]],"29":[["The program being debugged has been started already.                             ",{}]],"30":[["Start it from the beginning? (y or n) y                                          ",{}]],"31":[["                                                                                 ",{}]],"32":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"33":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"34":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"35":[["                                                                                 ",{}]]}}],[0.0006089999999999999,{"lines":{"0":[["   0x08048a6a <+322>:   mov    DWORD PTR [esp+0x4],edx                           ",{}]],"1":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"2":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"3":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"4":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"5":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"6":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"7":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"8":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"9":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"10":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"11":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"12":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"13":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"14":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"15":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"16":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"17":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"18":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"19":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"20":[["Quit                                                                             ",{}]],"21":[["(gdb) delete                                                                     ",{}]],"22":[["Delete all breakpoints? (y or n) y                                               ",{}]],"23":[["(gdb) b *0x08048a71                                                              ",{}]],"24":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"25":[["(gdb) x/i 0x08048a71                                                             ",{}]],"26":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"27":[["(gdb) r VFHFOQHJK                                                                ",{}]],"28":[["The program being debugged has been started already.                             ",{}]],"29":[["Start it from the beginning? (y or n) y                                          ",{}]],"30":[["                                                                                 ",{}]],"31":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"32":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"33":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"34":[["                                                                                 ",{}]],"35":[["Breakpoint 5, 0x08048a71 in crackyou ()                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.938533,{"lines":{"36":[["(gdb) s                                                                          ",{}]]},"cursor":{"x":7}}],[0.311277,{"lines":{"36":[["(gdb) st                                                                         ",{}]]},"cursor":{"x":8}}],[0.229514,{"lines":{"36":[["(gdb) ste                                                                        ",{}]]},"cursor":{"x":9}}],[0.152797,{"lines":{"36":[["(gdb) step                                                                       ",{}]]},"cursor":{"x":10}}],[0.053635,{"lines":{"36":[["(gdb) stepi                                                                      ",{}]]},"cursor":{"x":11}}],[0.672749,{"lines":{"0":[["   0x08048a6e <+326>:   mov    DWORD PTR [esp],eax                               ",{}]],"1":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"2":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"3":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"4":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"5":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"6":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"7":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"9":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"10":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"11":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"12":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"13":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"14":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"15":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"16":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"17":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"18":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"19":[["Quit                                                                             ",{}]],"20":[["(gdb) delete                                                                     ",{}]],"21":[["Delete all breakpoints? (y or n) y                                               ",{}]],"22":[["(gdb) b *0x08048a71                                                              ",{}]],"23":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"24":[["(gdb) x/i 0x08048a71                                                             ",{}]],"25":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"26":[["(gdb) r VFHFOQHJK                                                                ",{}]],"27":[["The program being debugged has been started already.                             ",{}]],"28":[["Start it from the beginning? (y or n) y                                          ",{}]],"29":[["                                                                                 ",{}]],"30":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"31":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"32":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"33":[["                                                                                 ",{}]],"34":[["Breakpoint 5, 0x08048a71 in crackyou ()                                          ",{}]],"35":[["(gdb) stepi                                                                      ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.001158,{"lines":{"0":[["   0x08048a71 <+329>:   call   0x80488bc <third_check>                           ",{}]],"1":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"2":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"3":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"4":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"5":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"6":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"8":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"9":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"10":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"11":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"12":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"13":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"14":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"15":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"16":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"17":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"18":[["Quit                                                                             ",{}]],"19":[["(gdb) delete                                                                     ",{}]],"20":[["Delete all breakpoints? (y or n) y                                               ",{}]],"21":[["(gdb) b *0x08048a71                                                              ",{}]],"22":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"23":[["(gdb) x/i 0x08048a71                                                             ",{}]],"24":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"25":[["(gdb) r VFHFOQHJK                                                                ",{}]],"26":[["The program being debugged has been started already.                             ",{}]],"27":[["Start it from the beginning? (y or n) y                                          ",{}]],"28":[["                                                                                 ",{}]],"29":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"30":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"31":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"32":[["                                                                                 ",{}]],"33":[["Breakpoint 5, 0x08048a71 in crackyou ()                                          ",{}]],"34":[["(gdb) stepi                                                                      ",{}]],"35":[["0x080488bc in third_check ()                                                     ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.9497640000000001,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.15808,{"cursor":{"x":8}}],[0.340917,{"lines":{"36":[["(gdb) # y                                                                        ",{}]]},"cursor":{"x":9}}],[0.072043,{"lines":{"36":[["(gdb) # ya                                                                       ",{}]]},"cursor":{"x":10}}],[0.12552,{"lines":{"36":[["(gdb) # yay                                                                      ",{}]]},"cursor":{"x":11}}],[0.346583,{"lines":{"36":[["(gdb) # yay!                                                                     ",{}]]},"cursor":{"x":12}}],[0.818022,{"lines":{"0":[["   0x08048a76 <+334>:   test   eax,eax                                           ",{}]],"1":[["   0x08048a78 <+336>:   je     0x8048a81 <crackyou+345>                          ",{}]],"2":[["   0x08048a7a <+338>:   mov    eax,0x1                                           ",{}]],"3":[["   0x08048a7f <+343>:   jmp    0x8048a8f <crackyou+359>                          ",{}]],"4":[["   0x08048a81 <+345>:   mov    eax,DWORD PTR [ebp-0x44]                          ",{}]],"5":[["   0x08048a84 <+348>:   mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x08048a87 <+351>:   call   0x80484f0 <sleep@plt>                             ",{}]],"7":[["   0x08048a8c <+356>:   mov    eax,DWORD PTR [ebp-0x40]                          ",{}]],"8":[["   0x08048a8f <+359>:   mov    esi,DWORD PTR [ebp-0xc]                           ",{}]],"9":[["   0x08048a92 <+362>:   xor    esi,DWORD PTR gs:0x14                             ",{}]],"10":[["   0x08048a99 <+369>:   je     0x8048aa0 <crackyou+376>                          ",{}]],"11":[["   0x08048a9b <+371>:   call   0x8048500 <__stack_chk_fail@plt>                  ",{}]],"12":[["   0x08048aa0 <+376>:   add    esp,0x60                                          ",{}]],"13":[["   0x08048aa3 <+379>:   pop    ebx                                               ",{}]],"14":[["   0x08048aa4 <+380>:   pop    esi                                               ",{}]],"15":[["   0x08048aa5 <+381>:   pop    ebp                                               ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---q                          ",{}]],"17":[["Quit                                                                             ",{}]],"18":[["(gdb) delete                                                                     ",{}]],"19":[["Delete all breakpoints? (y or n) y                                               ",{}]],"20":[["(gdb) b *0x08048a71                                                              ",{}]],"21":[["Breakpoint 5 at 0x8048a71                                                        ",{}]],"22":[["(gdb) x/i 0x08048a71                                                             ",{}]],"23":[["   0x8048a71 <crackyou+329>:    call   0x80488bc <third_check>                   ",{}]],"24":[["(gdb) r VFHFOQHJK                                                                ",{}]],"25":[["The program being debugged has been started already.                             ",{}]],"26":[["Start it from the beginning? (y or n) y                                          ",{}]],"27":[["                                                                                 ",{}]],"28":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"29":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"30":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"31":[["                                                                                 ",{}]],"32":[["Breakpoint 5, 0x08048a71 in crackyou ()                                          ",{}]],"33":[["(gdb) stepi                                                                      ",{}]],"34":[["0x080488bc in third_check ()                                                     ",{}]],"35":[["(gdb) # yay!                                                                     ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.000313,{"lines":{"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.733651,{"lines":{"36":[["(gdb) d                                                                          ",{}]]},"cursor":{"x":7}}],[0.04825,{"lines":{"36":[["(gdb) di                                                                         ",{}]]},"cursor":{"x":8}}],[0.170667,{"lines":{"36":[["(gdb) dis                                                                        ",{}]]},"cursor":{"x":9}}],[0.198154,{"lines":{"36":[["(gdb) disa                                                                       ",{}]]},"cursor":{"x":10}}],[0.198619,{"lines":{"36":[["(gdb) disas                                                                      ",{}]]},"cursor":{"x":11}}],[0.139573,{"cursor":{"x":12}}],[1.761954,{"lines":{"36":[["(gdb) disas third_check                                                          ",{}]]},"cursor":{"x":23}}],[1.385781,{"lines":{"0":[["(gdb) r VFHFOQHJK                                                                ",{}]],"1":[["The program being debugged has been started already.                             ",{}]],"2":[["Start it from the beginning? (y or n) y                                          ",{}]],"3":[["                                                                                 ",{}]],"4":[["Starting program: /opt/shared/gdb/crackyou VFHFOQHJK                             ",{}]],"5":[["warning: Could not load shared library symbols for linux-gate.so.1.              ",{}]],"6":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                            ",{}]],"7":[["                                                                                 ",{}]],"8":[["Breakpoint 5, 0x08048a71 in crackyou ()                                          ",{}]],"9":[["(gdb) stepi                                                                      ",{}]],"10":[["0x080488bc in third_check ()                                                     ",{}]],"11":[["(gdb) # yay!                                                                     ",{}]],"12":[["(gdb) disas third_check                                                          ",{}]],"13":[["Dump of assembler code for function third_check:                                 ",{}]],"14":[["=> 0x080488bc <+0>:     push   ebp                                               ",{}]],"15":[["   0x080488bd <+1>:     mov    ebp,esp                                           ",{}]],"16":[["   0x080488bf <+3>:     push   ebx                                               ",{}]],"17":[["   0x080488c0 <+4>:     sub    esp,0x24                                          ",{}]],"18":[["   0x080488c3 <+7>:     mov    DWORD PTR [ebp-0xc],0x0                           ",{}]],"19":[["   0x080488ca <+14>:    jmp    0x8048917 <third_check+91>                        ",{}]],"20":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"21":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"22":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"23":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"24":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"25":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"26":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"27":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"28":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"29":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"30":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"31":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"32":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"33":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"34":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"35":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"36":[["   0                                                                             ",{}]]},"cursor":{"x":4}}],[9.8e-05,{"lines":{"0":[["Dump of assembler code for function third_check:                                 ",{}]],"1":[["=> 0x080488bc <+0>:     push   ebp                                               ",{}]],"2":[["   0x080488bd <+1>:     mov    ebp,esp                                           ",{}]],"3":[["   0x080488bf <+3>:     push   ebx                                               ",{}]],"4":[["   0x080488c0 <+4>:     sub    esp,0x24                                          ",{}]],"5":[["   0x080488c3 <+7>:     mov    DWORD PTR [ebp-0xc],0x0                           ",{}]],"6":[["   0x080488ca <+14>:    jmp    0x8048917 <third_check+91>                        ",{}]],"7":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"8":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"9":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"10":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"11":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"12":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"13":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"14":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"15":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"16":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"17":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"18":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"19":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"20":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"21":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"22":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"23":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"24":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"25":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"26":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"27":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"28":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"29":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"30":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"31":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"32":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"33":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"34":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"35":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"36":[["---Type <return> to continue, or q <return> to quit---                           ",{}]]},"cursor":{"x":54}}],[1.510626,{"lines":{"0":[["=> 0x080488bc <+0>:     push   ebp                                               ",{}]],"1":[["   0x080488bd <+1>:     mov    ebp,esp                                           ",{}]],"2":[["   0x080488bf <+3>:     push   ebx                                               ",{}]],"3":[["   0x080488c0 <+4>:     sub    esp,0x24                                          ",{}]],"4":[["   0x080488c3 <+7>:     mov    DWORD PTR [ebp-0xc],0x0                           ",{}]],"5":[["   0x080488ca <+14>:    jmp    0x8048917 <third_check+91>                        ",{}]],"6":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"7":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"8":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"9":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"10":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"11":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"12":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"13":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"14":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"15":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"16":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"17":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"18":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"19":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"20":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"21":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"22":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"23":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"24":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"25":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"26":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"27":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"28":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"29":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"30":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"31":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"32":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"33":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"34":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"35":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.001455,{"lines":{"0":[["   0x080488c3 <+7>:     mov    DWORD PTR [ebp-0xc],0x0                           ",{}]],"1":[["   0x080488ca <+14>:    jmp    0x8048917 <third_check+91>                        ",{}]],"2":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"3":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"4":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"5":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"6":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"7":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"8":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"9":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"10":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"11":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"12":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"13":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"14":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"15":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"16":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"17":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"18":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"19":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"20":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"21":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"22":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"23":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"24":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"25":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"26":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"27":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"28":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"29":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"30":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"31":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"32":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"33":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"34":[["   0x08048927 <+107>:   ret                                                      ",{}]],"35":[["End of assembler dump.                                                           ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.101443,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.09447800000000001,{"cursor":{"x":8}}],[0.186296,{"lines":{"36":[["(gdb) # a                                                                        ",{}]]},"cursor":{"x":9}}],[0.184072,{"lines":{"36":[["(gdb) # ag                                                                       ",{}]]},"cursor":{"x":10}}],[0.132404,{"lines":{"36":[["(gdb) # aga                                                                      ",{}]]},"cursor":{"x":11}}],[0.14225,{"lines":{"36":[["(gdb) # agai                                                                     ",{}]]},"cursor":{"x":12}}],[0.041075,{"lines":{"36":[["(gdb) # again                                                                    ",{}]]},"cursor":{"x":13}}],[0.221671,{"lines":{"36":[["(gdb) # again,                                                                   ",{}]]},"cursor":{"x":14}}],[0.127836,{"cursor":{"x":15}}],[0.268114,{"lines":{"36":[["(gdb) # again, t                                                                 ",{}]]},"cursor":{"x":16}}],[0.118858,{"lines":{"36":[["(gdb) # again, th                                                                ",{}]]},"cursor":{"x":17}}],[0.047033,{"lines":{"36":[["(gdb) # again, thi                                                               ",{}]]},"cursor":{"x":18}}],[0.156006,{"lines":{"36":[["(gdb) # again, this                                                              ",{}]]},"cursor":{"x":19}}],[0.117886,{"cursor":{"x":20}}],[0.104241,{"lines":{"36":[["(gdb) # again, this i                                                            ",{}]]},"cursor":{"x":21}}],[0.103495,{"lines":{"36":[["(gdb) # again, this is                                                           ",{}]]},"cursor":{"x":22}}],[0.039042,{"cursor":{"x":23}}],[0.195004,{"lines":{"36":[["(gdb) # again, this is n                                                         ",{}]]},"cursor":{"x":24}}],[0.175425,{"lines":{"36":[["(gdb) # again, this is no                                                        ",{}]]},"cursor":{"x":25}}],[0.124936,{"lines":{"36":[["(gdb) # again, this is not                                                       ",{}]]},"cursor":{"x":26}}],[0.097424,{"cursor":{"x":27}}],[0.546466,{"lines":{"36":[["(gdb) # again, this is not a                                                     ",{}]]},"cursor":{"x":28}}],[0.24642,{"lines":{"36":[["(gdb) # again, this is not as                                                    ",{}]]},"cursor":{"x":29}}],[0.074473,{"cursor":{"x":30}}],[2.630263,{"lines":{"36":[["(gdb) # again, this is not as s                                                  ",{}]]},"cursor":{"x":31}}],[0.104172,{"lines":{"36":[["(gdb) # again, this is not as si                                                 ",{}]]},"cursor":{"x":32}}],[0.149257,{"lines":{"36":[["(gdb) # again, this is not as sim                                                ",{}]]},"cursor":{"x":33}}],[0.264076,{"lines":{"36":[["(gdb) # again, this is not as simp                                               ",{}]]},"cursor":{"x":34}}],[0.079179,{"lines":{"36":[["(gdb) # again, this is not as simpl                                              ",{}]]},"cursor":{"x":35}}],[0.132571,{"lines":{"36":[["(gdb) # again, this is not as simple                                             ",{}]]},"cursor":{"x":36}}],[0.08011500000000001,{"cursor":{"x":37}}],[0.201511,{"lines":{"36":[["(gdb) # again, this is not as simple a                                           ",{}]]},"cursor":{"x":38}}],[0.174372,{"lines":{"36":[["(gdb) # again, this is not as simple as                                          ",{}]]},"cursor":{"x":39}}],[0.09063400000000001,{"cursor":{"x":40}}],[0.259407,{"lines":{"36":[["(gdb) # again, this is not as simple as t                                        ",{}]]},"cursor":{"x":41}}],[0.09397,{"lines":{"36":[["(gdb) # again, this is not as simple as th                                       ",{}]]},"cursor":{"x":42}}],[0.149545,{"lines":{"36":[["(gdb) # again, this is not as simple as the                                      ",{}]]},"cursor":{"x":43}}],[0.066275,{"cursor":{"x":44}}],[0.202292,{"lines":{"36":[["(gdb) # again, this is not as simple as the f                                    ",{}]]},"cursor":{"x":45}}],[0.103529,{"lines":{"36":[["(gdb) # again, this is not as simple as the fi                                   ",{}]]},"cursor":{"x":46}}],[0.093334,{"lines":{"36":[["(gdb) # again, this is not as simple as the fir                                  ",{}]]},"cursor":{"x":47}}],[0.189392,{"lines":{"36":[["(gdb) # again, this is not as simple as the firs                                 ",{}]]},"cursor":{"x":48}}],[0.231172,{"lines":{"36":[["(gdb) # again, this is not as simple as the first                                ",{}]]},"cursor":{"x":49}}],[0.311333,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_                               ",{}]]},"cursor":{"x":50}}],[0.251464,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_c                              ",{}]]},"cursor":{"x":51}}],[0.111063,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_ch                             ",{}]]},"cursor":{"x":52}}],[0.104382,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_che                            ",{}]]},"cursor":{"x":53}}],[0.1466,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_chec                           ",{}]]},"cursor":{"x":54}}],[0.111716,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check                          ",{}]]},"cursor":{"x":55}}],[0.214742,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check,                         ",{}]]},"cursor":{"x":56}}],[0.111325,{"cursor":{"x":57}}],[1.270173,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, b                       ",{}]]},"cursor":{"x":58}}],[0.063079,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, bu                      ",{}]]},"cursor":{"x":59}}],[0.164518,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but                     ",{}]]},"cursor":{"x":60}}],[0.578049,{"cursor":{"x":61}}],[5.276359,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but y                   ",{}]]},"cursor":{"x":62}}],[0.07843899999999999,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but yo                  ",{}]]},"cursor":{"x":63}}],[0.07054000000000001,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you                 ",{}]]},"cursor":{"x":64}}],[0.109252,{"cursor":{"x":65}}],[0.229389,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you d               ",{}]]},"cursor":{"x":66}}],[0.080731,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you do              ",{}]]},"cursor":{"x":67}}],[0.08491,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don             ",{}]]},"cursor":{"x":68}}],[0.26384,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don'            ",{}]]},"cursor":{"x":69}}],[0.308552,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't           ",{}]]},"cursor":{"x":70}}],[0.216436,{"cursor":{"x":71}}],[0.380737,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't n         ",{}]]},"cursor":{"x":72}}],[0.245077,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't ne        ",{}]]},"cursor":{"x":73}}],[0.134085,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't nee       ",{}]]},"cursor":{"x":74}}],[0.183034,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't need      ",{}]]},"cursor":{"x":75}}],[0.07357900000000001,{"cursor":{"x":76}}],[0.323381,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't need t    ",{}]]},"cursor":{"x":77}}],[0.111466,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't need to   ",{}]]},"cursor":{"x":78}}],[0.08731800000000001,{"cursor":{"x":79}}],[0.26813,{"lines":{"36":[["(gdb) # again, this is not as simple as the first_check, but you don't need to u ",{}]]},"cursor":{"x":80}}],[0.166059,{"lines":{"0":[["   0x080488ca <+14>:    jmp    0x8048917 <third_check+91>                        ",{}]],"1":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"2":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"3":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"4":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"5":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"6":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"7":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"8":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"9":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"10":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"11":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"12":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"13":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"14":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"15":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"16":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"17":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"18":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"19":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"20":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"21":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"22":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"23":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"24":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"25":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"26":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"27":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"28":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"29":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"30":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"31":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"32":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"33":[["   0x08048927 <+107>:   ret                                                      ",{}]],"34":[["End of assembler dump.                                                           ",{}]],"35":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.245646,{"lines":{"36":[["d                                                                                ",{}]]},"cursor":{"x":1}}],[0.238231,{"lines":{"36":[["de                                                                               ",{}]]},"cursor":{"x":2}}],[0.255042,{"lines":{"36":[["der                                                                              ",{}]]},"cursor":{"x":3}}],[0.253561,{"lines":{"36":[["ders                                                                             ",{}]]},"cursor":{"x":4}}],[0.231507,{"lines":{"36":[["derst                                                                            ",{}]]},"cursor":{"x":5}}],[0.172668,{"lines":{"36":[["dersta                                                                           ",{}]]},"cursor":{"x":6}}],[0.192199,{"lines":{"36":[["derstan                                                                          ",{}]]},"cursor":{"x":7}}],[0.094094,{"lines":{"36":[["derstand                                                                         ",{}]]},"cursor":{"x":8}}],[0.097223,{"cursor":{"x":9}}],[1.340765,{"lines":{"36":[["derstand t                                                                       ",{}]]},"cursor":{"x":10}}],[0.151285,{"lines":{"36":[["derstand th                                                                      ",{}]]},"cursor":{"x":11}}],[0.204609,{"lines":{"36":[["derstand the                                                                     ",{}]]},"cursor":{"x":12}}],[0.073988,{"cursor":{"x":13}}],[0.402202,{"lines":{"36":[["derstand the w                                                                   ",{}]]},"cursor":{"x":14}}],[0.119245,{"lines":{"36":[["derstand the wh                                                                  ",{}]]},"cursor":{"x":15}}],[0.056462,{"lines":{"36":[["derstand the who                                                                 ",{}]]},"cursor":{"x":16}}],[0.197486,{"lines":{"36":[["derstand the whol                                                                ",{}]]},"cursor":{"x":17}}],[0.164215,{"lines":{"36":[["derstand the whole                                                               ",{}]]},"cursor":{"x":18}}],[0.15067,{"cursor":{"x":19}}],[0.655115,{"lines":{"36":[["derstand the whole c                                                             ",{}]]},"cursor":{"x":20}}],[0.069425,{"lines":{"36":[["derstand the whole co                                                            ",{}]]},"cursor":{"x":21}}],[0.10207,{"lines":{"36":[["derstand the whole cod                                                           ",{}]]},"cursor":{"x":22}}],[0.158421,{"lines":{"36":[["derstand the whole code                                                          ",{}]]},"cursor":{"x":23}}],[0.610827,{"lines":{"0":[["   0x080488cc <+16>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"1":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"2":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"3":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"4":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"5":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"6":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"7":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"8":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"9":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"10":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"11":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"12":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"13":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"14":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"15":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"16":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"17":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"18":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"19":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"20":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"21":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"22":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"23":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"24":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"25":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"26":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"27":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"28":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"29":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"30":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"31":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"32":[["   0x08048927 <+107>:   ret                                                      ",{}]],"33":[["End of assembler dump.                                                           ",{}]],"34":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"35":[["derstand the whole code                                                          ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.734118,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.126248,{"cursor":{"x":8}}],[0.396494,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.102034,{"lines":{"36":[["(gdb) # th                                                                       ",{}]]},"cursor":{"x":10}}],[0.757013,{"lines":{"36":[["(gdb) # the                                                                      ",{}]]},"cursor":{"x":11}}],[0.166706,{"lines":{"36":[["(gdb) # ther                                                                     ",{}]]},"cursor":{"x":12}}],[0.189777,{"lines":{"36":[["(gdb) # there                                                                    ",{}]]},"cursor":{"x":13}}],[0.176551,{"lines":{"36":[["(gdb) # there'                                                                   ",{}]]},"cursor":{"x":14}}],[0.139486,{"lines":{"36":[["(gdb) # there's                                                                  ",{}]]},"cursor":{"x":15}}],[0.20969,{"cursor":{"x":16}}],[0.226247,{"lines":{"36":[["(gdb) # there's a                                                                ",{}]]},"cursor":{"x":17}}],[0.099328,{"cursor":{"x":18}}],[0.85365,{"lines":{"36":[["(gdb) # there's a l                                                              ",{}]]},"cursor":{"x":19}}],[0.229972,{"lines":{"36":[["(gdb) # there's a lo                                                             ",{}]]},"cursor":{"x":20}}],[0.133558,{"lines":{"36":[["(gdb) # there's a loo                                                            ",{}]]},"cursor":{"x":21}}],[0.231416,{"lines":{"36":[["(gdb) # there's a loop                                                           ",{}]]},"cursor":{"x":22}}],[0.175138,{"cursor":{"x":23}}],[1.839097,{"lines":{"36":[["(gdb) # there's a loop h                                                         ",{}]]},"cursor":{"x":24}}],[0.085686,{"lines":{"36":[["(gdb) # there's a loop he                                                        ",{}]]},"cursor":{"x":25}}],[0.149909,{"lines":{"36":[["(gdb) # there's a loop her                                                       ",{}]]},"cursor":{"x":26}}],[0.197366,{"lines":{"36":[["(gdb) # there's a loop here                                                      ",{}]]},"cursor":{"x":27}}],[0.8192739999999999,{"cursor":{"x":28}}],[0.234441,{"lines":{"36":[["(gdb) # there's a loop here w                                                    ",{}]]},"cursor":{"x":29}}],[0.119676,{"lines":{"36":[["(gdb) # there's a loop here wh                                                   ",{}]]},"cursor":{"x":30}}],[0.140984,{"lines":{"36":[["(gdb) # there's a loop here whe                                                  ",{}]]},"cursor":{"x":31}}],[0.175172,{"lines":{"36":[["(gdb) # there's a loop here wher                                                 ",{}]]},"cursor":{"x":32}}],[0.189823,{"lines":{"36":[["(gdb) # there's a loop here where                                                ",{}]]},"cursor":{"x":33}}],[0.081548,{"cursor":{"x":34}}],[0.467802,{"lines":{"36":[["(gdb) # there's a loop here where t                                              ",{}]]},"cursor":{"x":35}}],[0.094225,{"lines":{"36":[["(gdb) # there's a loop here where th                                             ",{}]]},"cursor":{"x":36}}],[0.141465,{"lines":{"36":[["(gdb) # there's a loop here where the                                            ",{}]]},"cursor":{"x":37}}],[0.025761,{"cursor":{"x":38}}],[0.260982,{"lines":{"36":[["(gdb) # there's a loop here where the l                                          ",{}]]},"cursor":{"x":39}}],[0.100988,{"lines":{"36":[["(gdb) # there's a loop here where the la                                         ",{}]]},"cursor":{"x":40}}],[0.188696,{"lines":{"36":[["(gdb) # there's a loop here where the las                                        ",{}]]},"cursor":{"x":41}}],[0.25527,{"lines":{"36":[["(gdb) # there's a loop here where the last                                       ",{}]]},"cursor":{"x":42}}],[0.102365,{"cursor":{"x":43}}],[0.366559,{"lines":{"36":[["(gdb) # there's a loop here where the last t                                     ",{}]]},"cursor":{"x":44}}],[0.19918,{"lines":{"36":[["(gdb) # there's a loop here where the last th                                    ",{}]]},"cursor":{"x":45}}],[0.117416,{"lines":{"36":[["(gdb) # there's a loop here where the last thr                                   ",{}]]},"cursor":{"x":46}}],[0.278052,{"lines":{"36":[["(gdb) # there's a loop here where the last thre                                  ",{}]]},"cursor":{"x":47}}],[0.141834,{"lines":{"36":[["(gdb) # there's a loop here where the last three                                 ",{}]]},"cursor":{"x":48}}],[0.150321,{"cursor":{"x":49}}],[0.286538,{"lines":{"36":[["(gdb) # there's a loop here where the last three c                               ",{}]]},"cursor":{"x":50}}],[0.127254,{"lines":{"36":[["(gdb) # there's a loop here where the last three ch                              ",{}]]},"cursor":{"x":51}}],[0.088046,{"lines":{"36":[["(gdb) # there's a loop here where the last three cha                             ",{}]]},"cursor":{"x":52}}],[0.3648,{"lines":{"36":[["(gdb) # there's a loop here where the last three char                            ",{}]]},"cursor":{"x":53}}],[0.27697,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars                           ",{}]]},"cursor":{"x":54}}],[0.118009,{"cursor":{"x":55}}],[0.35317,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars o                         ",{}]]},"cursor":{"x":56}}],[0.21258,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of                        ",{}]]},"cursor":{"x":57}}],[0.041347,{"cursor":{"x":58}}],[0.348577,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of y                      ",{}]]},"cursor":{"x":59}}],[0.103098,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of yo                     ",{}]]},"cursor":{"x":60}}],[0.093567,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of you                    ",{}]]},"cursor":{"x":61}}],[0.126341,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your                   ",{}]]},"cursor":{"x":62}}],[0.047624,{"cursor":{"x":63}}],[0.119036,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your p                 ",{}]]},"cursor":{"x":64}}],[0.112471,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your pa                ",{}]]},"cursor":{"x":65}}],[0.271803,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your pas               ",{}]]},"cursor":{"x":66}}],[0.14925,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your pass              ",{}]]},"cursor":{"x":67}}],[0.159026,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your passw             ",{}]]},"cursor":{"x":68}}],[0.104515,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your passwo            ",{}]]},"cursor":{"x":69}}],[0.140826,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your passwor           ",{}]]},"cursor":{"x":70}}],[0.189078,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password          ",{}]]},"cursor":{"x":71}}],[0.09833699999999999,{"cursor":{"x":72}}],[0.562073,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password a        ",{}]]},"cursor":{"x":73}}],[0.263969,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password ar       ",{}]]},"cursor":{"x":74}}],[0.173456,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password are      ",{}]]},"cursor":{"x":75}}],[0.06621100000000001,{"cursor":{"x":76}}],[1.195894,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password are c    ",{}]]},"cursor":{"x":77}}],[0.095371,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password are ch   ",{}]]},"cursor":{"x":78}}],[0.08827400000000001,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password are che  ",{}]]},"cursor":{"x":79}}],[0.171066,{"lines":{"36":[["(gdb) # there's a loop here where the last three chars of your password are chec ",{}]]},"cursor":{"x":80}}],[0.08036699999999999,{"lines":{"0":[["   0x080488cf <+19>:    mov    eax,DWORD PTR [ebp+0xc]                           ",{}]],"1":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"2":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"3":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"4":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"5":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"6":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"7":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"8":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"9":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"10":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"11":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"12":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"13":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"14":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"15":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"16":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"17":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"18":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"19":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"20":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"21":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"22":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"23":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"24":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"25":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"26":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"27":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"28":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"29":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"30":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"31":[["   0x08048927 <+107>:   ret                                                      ",{}]],"32":[["End of assembler dump.                                                           ",{}]],"33":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"34":[["derstand the whole code                                                          ",{}]],"35":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.187565,{"lines":{"36":[["e                                                                                ",{}]]},"cursor":{"x":1}}],[1.649169,{"lines":{"36":[["ed                                                                               ",{}]]},"cursor":{"x":2}}],[1.611889,{"lines":{"0":[["   0x080488d2 <+22>:    add    edx,eax                                           ",{}]],"1":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"2":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"3":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"4":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"5":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"6":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"7":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"8":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"9":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"10":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"11":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"12":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"13":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"14":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"15":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"16":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"17":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"18":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"19":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"20":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"21":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"22":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"23":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"24":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"25":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"26":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"27":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"28":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"29":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"30":[["   0x08048927 <+107>:   ret                                                      ",{}]],"31":[["End of assembler dump.                                                           ",{}]],"32":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"33":[["derstand the whole code                                                          ",{}]],"34":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"35":[["ed                                                                               ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[0.822539,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.158776,{"cursor":{"x":8}}],[0.404271,{"lines":{"36":[["(gdb) # t                                                                        ",{}]]},"cursor":{"x":9}}],[0.278417,{"lines":{"36":[["(gdb) # tr                                                                       ",{}]]},"cursor":{"x":10}}],[0.238428,{"lines":{"36":[["(gdb) # try                                                                      ",{}]]},"cursor":{"x":11}}],[0.094331,{"cursor":{"x":12}}],[0.165891,{"lines":{"36":[["(gdb) # try t                                                                    ",{}]]},"cursor":{"x":13}}],[0.159528,{"lines":{"36":[["(gdb) # try to                                                                   ",{}]]},"cursor":{"x":14}}],[0.127392,{"cursor":{"x":15}}],[1.814498,{"lines":{"36":[["(gdb) # try to f                                                                 ",{}]]},"cursor":{"x":16}}],[0.392425,{"lines":{"36":[["(gdb) # try to fo                                                                ",{}]]},"cursor":{"x":17}}],[0.276252,{"lines":{"36":[["(gdb) # try to foc                                                               ",{}]]},"cursor":{"x":18}}],[0.231408,{"lines":{"36":[["(gdb) # try to focu                                                              ",{}]]},"cursor":{"x":19}}],[0.100733,{"lines":{"36":[["(gdb) # try to focus                                                             ",{}]]},"cursor":{"x":20}}],[0.098651,{"cursor":{"x":21}}],[0.716019,{"lines":{"36":[["(gdb) # try to focus y                                                           ",{}]]},"cursor":{"x":22}}],[0.135547,{"lines":{"36":[["(gdb) # try to focus yo                                                          ",{}]]},"cursor":{"x":23}}],[0.07757500000000001,{"lines":{"36":[["(gdb) # try to focus you                                                         ",{}]]},"cursor":{"x":24}}],[0.245042,{"lines":{"36":[["(gdb) # try to focus your                                                        ",{}]]},"cursor":{"x":25}}],[0.081438,{"cursor":{"x":26}}],[0.321825,{"lines":{"36":[["(gdb) # try to focus your a                                                      ",{}]]},"cursor":{"x":27}}],[0.304048,{"lines":{"36":[["(gdb) # try to focus your at                                                     ",{}]]},"cursor":{"x":28}}],[0.149855,{"lines":{"36":[["(gdb) # try to focus your att                                                    ",{}]]},"cursor":{"x":29}}],[0.214047,{"lines":{"36":[["(gdb) # try to focus your atte                                                   ",{}]]},"cursor":{"x":30}}],[0.118859,{"lines":{"36":[["(gdb) # try to focus your atten                                                  ",{}]]},"cursor":{"x":31}}],[0.350252,{"lines":{"36":[["(gdb) # try to focus your attent                                                 ",{}]]},"cursor":{"x":32}}],[0.095278,{"lines":{"36":[["(gdb) # try to focus your attenti                                                ",{}]]},"cursor":{"x":33}}],[0.166595,{"lines":{"36":[["(gdb) # try to focus your attentio                                               ",{}]]},"cursor":{"x":34}}],[0.094016,{"lines":{"36":[["(gdb) # try to focus your attention                                              ",{}]]},"cursor":{"x":35}}],[0.143084,{"cursor":{"x":36}}],[1.108619,{"lines":{"36":[["(gdb) # try to focus your attention a                                            ",{}]]},"cursor":{"x":37}}],[0.231731,{"lines":{"36":[["(gdb) # try to focus your attention at                                           ",{}]]},"cursor":{"x":38}}],[0.112541,{"cursor":{"x":39}}],[0.133275,{"lines":{"36":[["(gdb) # try to focus your attention at t                                         ",{}]]},"cursor":{"x":40}}],[0.140947,{"lines":{"36":[["(gdb) # try to focus your attention at th                                        ",{}]]},"cursor":{"x":41}}],[0.141563,{"lines":{"36":[["(gdb) # try to focus your attention at the                                       ",{}]]},"cursor":{"x":42}}],[0.081996,{"cursor":{"x":43}}],[1.011511,{"lines":{"36":[["(gdb) # try to focus your attention at the c                                     ",{}]]},"cursor":{"x":44}}],[0.127774,{"lines":{"36":[["(gdb) # try to focus your attention at the cm                                    ",{}]]},"cursor":{"x":45}}],[0.06379799999999999,{"lines":{"36":[["(gdb) # try to focus your attention at the cmp                                   ",{}]]},"cursor":{"x":46}}],[3.218983,{"lines":{"0":[["   0x080488d4 <+24>:    mov    eax,DWORD PTR [ebp+0x18]                          ",{}]],"1":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"2":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"3":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"4":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"5":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"6":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"7":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"8":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"9":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"10":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"11":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"12":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"13":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"14":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"15":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"16":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"17":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"18":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"19":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"20":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"21":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"22":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"23":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"24":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"25":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"26":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"27":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"28":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"29":[["   0x08048927 <+107>:   ret                                                      ",{}]],"30":[["End of assembler dump.                                                           ",{}]],"31":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"32":[["derstand the whole code                                                          ",{}]],"33":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"34":[["ed                                                                               ",{}]],"35":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[2.192484,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[0.103723,{"cursor":{"x":8}}],[0.714782,{"lines":{"36":[["(gdb) # a                                                                        ",{}]]},"cursor":{"x":9}}],[0.440881,{"lines":{"36":[["(gdb) # an                                                                       ",{}]]},"cursor":{"x":10}}],[0.116725,{"lines":{"36":[["(gdb) # and                                                                      ",{}]]},"cursor":{"x":11}}],[0.169257,{"cursor":{"x":12}}],[1.26955,{"lines":{"36":[["(gdb) # and c                                                                    ",{}]]},"cursor":{"x":13}}],[0.134951,{"lines":{"36":[["(gdb) # and ch                                                                   ",{}]]},"cursor":{"x":14}}],[0.06956900000000001,{"lines":{"36":[["(gdb) # and che                                                                  ",{}]]},"cursor":{"x":15}}],[0.165715,{"lines":{"36":[["(gdb) # and chec                                                                 ",{}]]},"cursor":{"x":16}}],[0.127502,{"lines":{"36":[["(gdb) # and check                                                                ",{}]]},"cursor":{"x":17}}],[0.08593099999999999,{"cursor":{"x":18}}],[0.309947,{"lines":{"36":[["(gdb) # and check t                                                              ",{}]]},"cursor":{"x":19}}],[0.094059,{"lines":{"36":[["(gdb) # and check th                                                             ",{}]]},"cursor":{"x":20}}],[0.13373,{"lines":{"36":[["(gdb) # and check the                                                            ",{}]]},"cursor":{"x":21}}],[0.065771,{"cursor":{"x":22}}],[0.171029,{"lines":{"36":[["(gdb) # and check the r                                                          ",{}]]},"cursor":{"x":23}}],[0.16578,{"lines":{"36":[["(gdb) # and check the re                                                         ",{}]]},"cursor":{"x":24}}],[0.207115,{"lines":{"36":[["(gdb) # and check the ret                                                        ",{}]]},"cursor":{"x":25}}],[0.078696,{"lines":{"36":[["(gdb) # and check the retu                                                       ",{}]]},"cursor":{"x":26}}],[0.109243,{"lines":{"36":[["(gdb) # and check the retur                                                      ",{}]]},"cursor":{"x":27}}],[0.109955,{"lines":{"36":[["(gdb) # and check the return                                                     ",{}]]},"cursor":{"x":28}}],[0.065814,{"cursor":{"x":29}}],[0.211052,{"lines":{"36":[["(gdb) # and check the return v                                                   ",{}]]},"cursor":{"x":30}}],[0.156517,{"lines":{"36":[["(gdb) # and check the return va                                                  ",{}]]},"cursor":{"x":31}}],[0.153211,{"lines":{"36":[["(gdb) # and check the return val                                                 ",{}]]},"cursor":{"x":32}}],[0.086398,{"lines":{"36":[["(gdb) # and check the return valu                                                ",{}]]},"cursor":{"x":33}}],[0.452802,{"lines":{"36":[["(gdb) # and check the return value                                               ",{}]]},"cursor":{"x":34}}],[2.697821,{"lines":{"36":[["(gdb) # and check the return values                                              ",{}]]},"cursor":{"x":35}}],[0.106305,{"cursor":{"x":36}}],[0.49334,{"lines":{"36":[["(gdb) # and check the return values o                                            ",{}]]},"cursor":{"x":37}}],[0.092157,{"lines":{"36":[["(gdb) # and check the return values of                                           ",{}]]},"cursor":{"x":38}}],[0.065955,{"cursor":{"x":39}}],[0.570305,{"lines":{"36":[["(gdb) # and check the return values of s                                         ",{}]]},"cursor":{"x":40}}],[0.089103,{"lines":{"36":[["(gdb) # and check the return values of so                                        ",{}]]},"cursor":{"x":41}}],[0.053171,{"lines":{"36":[["(gdb) # and check the return values of som                                       ",{}]]},"cursor":{"x":42}}],[0.085173,{"lines":{"36":[["(gdb) # and check the return values of some                                      ",{}]]},"cursor":{"x":43}}],[0.088994,{"cursor":{"x":44}}],[0.164504,{"lines":{"36":[["(gdb) # and check the return values of some i                                    ",{}]]},"cursor":{"x":45}}],[0.086296,{"lines":{"36":[["(gdb) # and check the return values of some in                                   ",{}]]},"cursor":{"x":46}}],[0.188947,{"lines":{"36":[["(gdb) # and check the return values of some int                                  ",{}]]},"cursor":{"x":47}}],[0.213842,{"lines":{"36":[["(gdb) # and check the return values of some inte                                 ",{}]]},"cursor":{"x":48}}],[0.142435,{"lines":{"36":[["(gdb) # and check the return values of some inter                                ",{}]]},"cursor":{"x":49}}],[0.149523,{"lines":{"36":[["(gdb) # and check the return values of some intere                               ",{}]]},"cursor":{"x":50}}],[0.198085,{"lines":{"36":[["(gdb) # and check the return values of some interes                              ",{}]]},"cursor":{"x":51}}],[0.207792,{"lines":{"36":[["(gdb) # and check the return values of some interest                             ",{}]]},"cursor":{"x":52}}],[0.09346599999999999,{"lines":{"36":[["(gdb) # and check the return values of some interesti                            ",{}]]},"cursor":{"x":53}}],[0.063857,{"lines":{"36":[["(gdb) # and check the return values of some interestin                           ",{}]]},"cursor":{"x":54}}],[0.14072,{"lines":{"36":[["(gdb) # and check the return values of some interesting                          ",{}]]},"cursor":{"x":55}}],[0.098026,{"cursor":{"x":56}}],[2.005663,{"lines":{"36":[["(gdb) # and check the return values of some interesting f                        ",{}]]},"cursor":{"x":57}}],[0.086297,{"lines":{"36":[["(gdb) # and check the return values of some interesting fu                       ",{}]]},"cursor":{"x":58}}],[0.100789,{"lines":{"36":[["(gdb) # and check the return values of some interesting fun                      ",{}]]},"cursor":{"x":59}}],[0.003713,{"lines":{"36":[["(gdb) # and check the return values of some interesting func                     ",{}]]},"cursor":{"x":60}}],[0.225431,{"lines":{"36":[["(gdb) # and check the return values of some interesting funct                    ",{}]]},"cursor":{"x":61}}],[0.08631800000000001,{"lines":{"36":[["(gdb) # and check the return values of some interesting functi                   ",{}]]},"cursor":{"x":62}}],[0.135737,{"lines":{"36":[["(gdb) # and check the return values of some interesting functio                  ",{}]]},"cursor":{"x":63}}],[0.08642,{"lines":{"36":[["(gdb) # and check the return values of some interesting function                 ",{}]]},"cursor":{"x":64}}],[1.133174,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions                ",{}]]},"cursor":{"x":65}}],[1.762996,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions,               ",{}]]},"cursor":{"x":66}}],[0.119536,{"cursor":{"x":67}}],[0.164961,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, l             ",{}]]},"cursor":{"x":68}}],[0.165773,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, li            ",{}]]},"cursor":{"x":69}}],[0.222654,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, lik           ",{}]]},"cursor":{"x":70}}],[0.204787,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, like          ",{}]]},"cursor":{"x":71}}],[0.328207,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, like.         ",{}]]},"cursor":{"x":72}}],[0.166355,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, like..        ",{}]]},"cursor":{"x":73}}],[0.150032,{"lines":{"36":[["(gdb) # and check the return values of some interesting functions, like...       ",{}]]},"cursor":{"x":74}}],[0.127557,{"cursor":{"x":75}}],[2.915168,{"lines":{"0":[["   0x080488d7 <+27>:    add    eax,edx                                           ",{}]],"1":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"2":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"3":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"4":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"5":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"6":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"7":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"8":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"9":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"10":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"11":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"12":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"13":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"14":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"15":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"16":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"17":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"18":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"19":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"20":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"21":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"22":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"23":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"24":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"25":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"26":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"27":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"28":[["   0x08048927 <+107>:   ret                                                      ",{}]],"29":[["End of assembler dump.                                                           ",{}]],"30":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"31":[["derstand the whole code                                                          ",{}]],"32":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"33":[["ed                                                                               ",{}]],"34":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"35":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"36":[["r                                                                                ",{}]]},"cursor":{"x":1}}],[0.792956,{"cursor":{"x":2}}],[0.493212,{"lines":{"36":[["r :                                                                              ",{}]]},"cursor":{"x":3}}],[0.046878,{"lines":{"36":[["r :)                                                                             ",{}]]},"cursor":{"x":4}}],[0.597789,{"lines":{"0":[["   0x080488d9 <+29>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"1":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"2":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"3":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"4":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"5":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"6":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"7":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"8":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"9":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"10":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"11":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"12":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"13":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"14":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"15":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"16":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"17":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"18":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"19":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"20":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"21":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"22":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"23":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"24":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"25":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"26":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"27":[["   0x08048927 <+107>:   ret                                                      ",{}]],"28":[["End of assembler dump.                                                           ",{}]],"29":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"30":[["derstand the whole code                                                          ",{}]],"31":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"32":[["ed                                                                               ",{}]],"33":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"34":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"35":[["r :)                                                                             ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.968449,{"lines":{"36":[["(gdb) #                                                                          ",{}]]},"cursor":{"x":7}}],[1.801398,{"cursor":{"x":8}}],[2.952634,{"lines":{"36":[["(gdb) # g                                                                        ",{}]]},"cursor":{"x":9}}],[0.159174,{"lines":{"36":[["(gdb) # go                                                                       ",{}]]},"cursor":{"x":10}}],[0.134314,{"lines":{"36":[["(gdb) # goo                                                                      ",{}]]},"cursor":{"x":11}}],[0.126923,{"lines":{"36":[["(gdb) # good                                                                     ",{}]]},"cursor":{"x":12}}],[0.07108399999999999,{"cursor":{"x":13}}],[0.139944,{"lines":{"36":[["(gdb) # good l                                                                   ",{}]]},"cursor":{"x":14}}],[0.21383,{"lines":{"36":[["(gdb) # good lu                                                                  ",{}]]},"cursor":{"x":15}}],[0.157054,{"lines":{"36":[["(gdb) # good luc                                                                 ",{}]]},"cursor":{"x":16}}],[0.102546,{"lines":{"36":[["(gdb) # good luck                                                                ",{}]]},"cursor":{"x":17}}],[0.365022,{"lines":{"36":[["(gdb) # good luck!                                                               ",{}]]},"cursor":{"x":18}}],[0.376785,{"cursor":{"x":19}}],[3.545714,{"lines":{"36":[["(gdb) # good luck! I                                                             ",{}]]},"cursor":{"x":20}}],[0.135234,{"cursor":{"x":21}}],[0.444023,{"lines":{"36":[["(gdb) # good luck! I h                                                           ",{}]]},"cursor":{"x":22}}],[0.16751,{"lines":{"36":[["(gdb) # good luck! I ho                                                          ",{}]]},"cursor":{"x":23}}],[0.166771,{"lines":{"36":[["(gdb) # good luck! I hop                                                         ",{}]]},"cursor":{"x":24}}],[0.251693,{"lines":{"36":[["(gdb) # good luck! I hope                                                        ",{}]]},"cursor":{"x":25}}],[0.049609,{"cursor":{"x":26}}],[2.703529,{"lines":{"36":[["(gdb) # good luck! I hope t                                                      ",{}]]},"cursor":{"x":27}}],[0.134249,{"lines":{"36":[["(gdb) # good luck! I hope th                                                     ",{}]]},"cursor":{"x":28}}],[0.116352,{"lines":{"36":[["(gdb) # good luck! I hope tha                                                    ",{}]]},"cursor":{"x":29}}],[0.512039,{"lines":{"36":[["(gdb) # good luck! I hope that                                                   ",{}]]},"cursor":{"x":30}}],[0.166813,{"cursor":{"x":31}}],[0.695821,{"lines":{"36":[["(gdb) # good luck! I hope that y                                                 ",{}]]},"cursor":{"x":32}}],[0.110319,{"lines":{"36":[["(gdb) # good luck! I hope that yo                                                ",{}]]},"cursor":{"x":33}}],[0.07043000000000001,{"lines":{"36":[["(gdb) # good luck! I hope that you                                               ",{}]]},"cursor":{"x":34}}],[0.117103,{"cursor":{"x":35}}],[0.181885,{"lines":{"36":[["(gdb) # good luck! I hope that you c                                             ",{}]]},"cursor":{"x":36}}],[0.140517,{"lines":{"36":[["(gdb) # good luck! I hope that you ca                                            ",{}]]},"cursor":{"x":37}}],[0.118696,{"lines":{"36":[["(gdb) # good luck! I hope that you can                                           ",{}]]},"cursor":{"x":38}}],[0.06645,{"cursor":{"x":39}}],[0.218007,{"lines":{"36":[["(gdb) # good luck! I hope that you can s                                         ",{}]]},"cursor":{"x":40}}],[0.104995,{"lines":{"36":[["(gdb) # good luck! I hope that you can so                                        ",{}]]},"cursor":{"x":41}}],[0.158282,{"lines":{"36":[["(gdb) # good luck! I hope that you can sol                                       ",{}]]},"cursor":{"x":42}}],[0.103903,{"lines":{"36":[["(gdb) # good luck! I hope that you can solv                                      ",{}]]},"cursor":{"x":43}}],[0.146626,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve                                     ",{}]]},"cursor":{"x":44}}],[0.097899,{"cursor":{"x":45}}],[0.306885,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve t                                   ",{}]]},"cursor":{"x":46}}],[0.167153,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve th                                  ",{}]]},"cursor":{"x":47}}],[0.213212,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the                                 ",{}]]},"cursor":{"x":48}}],[0.09835199999999999,{"cursor":{"x":49}}],[0.618843,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the c                               ",{}]]},"cursor":{"x":50}}],[0.871568,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the cr                              ",{}]]},"cursor":{"x":51}}],[0.180791,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the cra                             ",{}]]},"cursor":{"x":52}}],[0.199767,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crac                            ",{}]]},"cursor":{"x":53}}],[0.143347,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crack                           ",{}]]},"cursor":{"x":54}}],[0.25387,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the cracky                          ",{}]]},"cursor":{"x":55}}],[0.09436,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyo                         ",{}]]},"cursor":{"x":56}}],[0.078902,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou                        ",{}]]},"cursor":{"x":57}}],[0.125294,{"cursor":{"x":58}}],[0.181645,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou c                      ",{}]]},"cursor":{"x":59}}],[0.086813,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou ch                     ",{}]]},"cursor":{"x":60}}],[0.103461,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou cha                    ",{}]]},"cursor":{"x":61}}],[0.206038,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou chal                   ",{}]]},"cursor":{"x":62}}],[0.149895,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou chall                  ",{}]]},"cursor":{"x":63}}],[0.124496,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challe                 ",{}]]},"cursor":{"x":64}}],[0.110219,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challen                ",{}]]},"cursor":{"x":65}}],[0.110249,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challeng               ",{}]]},"cursor":{"x":66}}],[0.206888,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challenge              ",{}]]},"cursor":{"x":67}}],[0.073269,{"cursor":{"x":68}}],[0.187527,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challenge n            ",{}]]},"cursor":{"x":69}}],[0.09594900000000001,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challenge no           ",{}]]},"cursor":{"x":70}}],[0.117027,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now          ",{}]]},"cursor":{"x":71}}],[0.402906,{"lines":{"36":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now!         ",{}]]},"cursor":{"x":72}}],[3.390995,{"lines":{"0":[["   0x080488dc <+32>:    movsx  ebx,al                                            ",{}]],"1":[["   0x080488df <+35>:    mov    edx,DWORD PTR [ebp-0xc]                           ",{}]],"2":[["   0x080488e2 <+38>:    mov    eax,DWORD PTR [ebp+0x8]                           ",{}]],"3":[["   0x080488e5 <+41>:    add    eax,edx                                           ",{}]],"4":[["   0x080488e7 <+43>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"5":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"6":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"7":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"8":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"9":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"10":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"11":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"12":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"13":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"14":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"15":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"16":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"17":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"18":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"19":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"20":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"21":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"22":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"23":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"24":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"25":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"26":[["   0x08048927 <+107>:   ret                                                      ",{}]],"27":[["End of assembler dump.                                                           ",{}]],"28":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"29":[["derstand the whole code                                                          ",{}]],"30":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"31":[["ed                                                                               ",{}]],"32":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"33":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"34":[["r :)                                                                             ",{}]],"35":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now!         ",{}]],"36":[["(gdb)                                                                            ",{}]]},"cursor":{"x":6}}],[1.059646,{"lines":{"0":[["   0x080488ea <+46>:    movsx  eax,al                                            ",{}]],"1":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"2":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"3":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"4":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"5":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"6":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"7":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"8":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"9":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"10":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"11":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"12":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"13":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"14":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"15":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"16":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"17":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"18":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"19":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"20":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"21":[["   0x08048927 <+107>:   ret                                                      ",{}]],"22":[["End of assembler dump.                                                           ",{}]],"23":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"24":[["derstand the whole code                                                          ",{}]],"25":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"26":[["ed                                                                               ",{}]],"27":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"28":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"29":[["r :)                                                                             ",{}]],"30":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now!         ",{}]],"31":[["(gdb) quit                                                                       ",{}]],"32":[["A debugging session is active.                                                   ",{}]],"33":[["                                                                                 ",{}]],"34":[["        Inferior 1 [process 1977] will be killed.                                ",{}]],"35":[["                                                                                 ",{}]],"36":[["Quit anyway? (y or n)                                                            ",{}]]},"cursor":{"x":22}}],[1.279644,{"lines":{"36":[["Quit anyway? (y or n) y                                                          ",{}]]},"cursor":{"x":23}}],[0.873568,{"lines":{"0":[["   0x080488ed <+49>:    mov    edx,0x0                                           ",{}]],"1":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"2":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"3":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"4":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"5":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"6":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"7":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"8":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"9":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"10":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"11":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"12":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"13":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"14":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"15":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"16":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"17":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"18":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"19":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"20":[["   0x08048927 <+107>:   ret                                                      ",{}]],"21":[["End of assembler dump.                                                           ",{}]],"22":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"23":[["derstand the whole code                                                          ",{}]],"24":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"25":[["ed                                                                               ",{}]],"26":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"27":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"28":[["r :)                                                                             ",{}]],"29":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now!         ",{}]],"30":[["(gdb) quit                                                                       ",{}]],"31":[["A debugging session is active.                                                   ",{}]],"32":[["                                                                                 ",{}]],"33":[["        Inferior 1 [process 1977] will be killed.                                ",{}]],"34":[["                                                                                 ",{}]],"35":[["Quit anyway? (y or n) y                                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.009098,{"lines":{"36":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                               ",{}]]},"cursor":{"x":19}}],[1.347968,{"lines":{"0":[["   0x080488f2 <+54>:    div    DWORD PTR [ebp+0x14]                              ",{}]],"1":[["   0x080488f5 <+57>:    mov    eax,DWORD PTR [ebp+0x10]                          ",{}]],"2":[["   0x080488f8 <+60>:    add    eax,edx                                           ",{}]],"3":[["   0x080488fa <+62>:    movzx  eax,BYTE PTR [eax]                                ",{}]],"4":[["   0x080488fd <+65>:    movsx  eax,al                                            ",{}]],"5":[["   0x08048900 <+68>:    mov    DWORD PTR [esp],eax                               ",{}]],"6":[["   0x08048903 <+71>:    call   0x8048590 <toupper@plt>                           ",{}]],"7":[["   0x08048908 <+76>:    cmp    ebx,eax                                           ",{}]],"8":[["   0x0804890a <+78>:    je     0x8048913 <third_check+87>                        ",{}]],"9":[["   0x0804890c <+80>:    mov    eax,0x0                                           ",{}]],"10":[["   0x08048911 <+85>:    jmp    0x8048922 <third_check+102>                       ",{}]],"11":[["   0x08048913 <+87>:    add    DWORD PTR [ebp-0xc],0x1                           ",{}]],"12":[["   0x08048917 <+91>:    cmp    DWORD PTR [ebp-0xc],0x2                           ",{}]],"13":[["   0x0804891b <+95>:    jle    0x80488cc <third_check+16>                        ",{}]],"14":[["   0x0804891d <+97>:    mov    eax,0x1                                           ",{}]],"15":[["   0x08048922 <+102>:   add    esp,0x24                                          ",{}]],"16":[["---Type <return> to continue, or q <return> to quit---                           ",{}]],"17":[["   0x08048925 <+105>:   pop    ebx                                               ",{}]],"18":[["   0x08048926 <+106>:   pop    ebp                                               ",{}]],"19":[["   0x08048927 <+107>:   ret                                                      ",{}]],"20":[["End of assembler dump.                                                           ",{}]],"21":[["(gdb) # again, this is not as simple as the first_check, but you don't need to un",{}]],"22":[["derstand the whole code                                                          ",{}]],"23":[["(gdb) # there's a loop here where the last three chars of your password are check",{}]],"24":[["ed                                                                               ",{}]],"25":[["(gdb) # try to focus your attention at the cmp                                   ",{}]],"26":[["(gdb) # and check the return values of some interesting functions, like... touppe",{}]],"27":[["r :)                                                                             ",{}]],"28":[["(gdb) # good luck! I hope that you can solve the crackyou challenge now!         ",{}]],"29":[["(gdb) quit                                                                       ",{}]],"30":[["A debugging session is active.                                                   ",{}]],"31":[["                                                                                 ",{}]],"32":[["        Inferior 1 [process 1977] will be killed.                                ",{}]],"33":[["                                                                                 ",{}]],"34":[["Quit anyway? (y or n) y                                                          ",{}]],"35":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" exit                                                          ",{}]],"36":[["                                                                                 ",{}]]},"cursor":{"x":0}}]]