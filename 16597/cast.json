[[1.104733,{"lines":{"0":[["                                                                                     ",{}]],"1":[["                                                                                     ",{}]],"2":[["                                                                                     ",{}]],"3":[["                                                                                     ",{}]],"4":[["                                                                                     ",{}]],"5":[["                                                                                     ",{}]],"6":[["                                                                                     ",{}]],"7":[["                                                                                     ",{}]],"8":[["                                                                                     ",{}]],"9":[["                                                                                     ",{}]],"10":[["                                                                                     ",{}]],"11":[["                                                                                     ",{}]],"12":[["                                                                                     ",{}]],"13":[["                                                                                     ",{}]],"14":[["                                                                                     ",{}]],"15":[["                                                                                     ",{}]],"16":[["                                                                                     ",{}]],"17":[["                                                                                     ",{}]],"18":[["                                                                                     ",{}]],"19":[["                                                                                     ",{}]],"20":[["                                                                                     ",{}]],"21":[["                                                                                     ",{}]],"22":[["                                                                                     ",{}]],"23":[["                                                                                     ",{}]],"24":[["                                                                                     ",{}]],"25":[["                                                                                     ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.109524,{"lines":{"0":[["-- 2015/02/18 21:25:16 --",{"fg":0,"bold":true}],["                                                            ",{}]],"2":[["curly:",{"fg":6,"bold":true}],["/Users/handle/src/github.com/handlename/dot-emacs/quelpa/build/hydra ",{"fg":3,"bold":true}],["git:master",{"fg":2,"bold":true}]],"3":[[" ",{"bold":true}],["                                                                                    ",{}]],"4":[["$",{"fg":1,"bold":true}],["                                                                                    ",{}]]},"cursor":{"x":2,"y":4}}],[2.2e-05,{}],[0.834348,{"lines":{"4":[["$",{"fg":1,"bold":true}],[" e                                                                                  ",{}]]},"cursor":{"x":3}}],[0.013707,{"lines":{"4":[["$",{"fg":1,"bold":true}],[" ",{}],["emacs",{"fg":2}],[" ",{}],["/Users/handle/src/github.com/handlename/dot-emacs/quelpa/build/hydra/hydra.el",{"underline":true}]]},"cursor":{"x":0,"y":5}}],[1.15645,{}],[0.000133,{"cursor":{"y":6}}],[0.20175,{"lines":{"0":[["                                                                                     ",{}]],"2":[["                                                                                     ",{}]],"3":[["                                                                                     ",{}]],"4":[["                                                                                     ",{}]]}}],[0.143778,{"cursor":{"y":0}}],[0.000737,{"cursor":{"y":6}}],[0.455477,{"cursor":{"y":0}}],[0.015204,{"lines":{"0":[["File Edit Options Buffers Tools Help                                                 ",{}]],"24":[["-UUU:----F1  ",{}],["*scratch*   ",{"bold":true}],["   All L1     (Fundamental) --------------------------------",{}]]},"cursor":{"y":1}}],[0.007617,{"lines":{"25":[["Updating /Users/handle/.emacs.d/quelpa/build/package-build                           ",{}]]}}],[7.187829,{"lines":{"25":[["Loading /Users/handle/.emacs.d/inits/00_basic.el (source)...                         ",{}]]}}],[0.012618,{"lines":{"25":[["Loading /Users/handle/.emacs.d/shellenv.el (source)...                               ",{}]]}}],[0.009793,{"lines":{"25":[["Loading /Users/handle/.emacs.d/shellenv.el (source)...done                           ",{}]]}}],[0.01464,{"lines":{"23":[["-UUU:----F1  ",{}],["*scratch*   ",{"bold":true}],["   All (1,0)      (Fundamental) ----------------------------",{}]],"24":[["Source: handlename/open-github                                                       ",{}]],"25":[["                                                                                     ",{}]]}}],[0.015453,{"lines":{"24":[["Updating /Users/handle/.emacs.d/quelpa/build/open-github/                            ",{}]]}}],[0.887211,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/00_private.el (source)...done                   ",{}]]}}],[0.000713,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/01_display.el (source)...                       ",{}]]}}],[0.175439,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/01_display.el (source)...done                   ",{}]]}}],[0.002357,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/01_keybidings.el (source)...                    ",{}]]}}],[0.016612,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_ag.el (source)...                            ",{}]]}}],[0.232199,{"lines":{"24":[["../../../../../../../.emacs.d/elpa/ag-20140904.532/ag.el: `flet' is an obsolete macr\\",{}]],"25":[["o (as of 24.3); use either `cl-flet' or `cl-letf'.                                   ",{}]]}}],[0.046218,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_ag.el (source)...done                        ",{}]],"25":[["                                                                                     ",{}]]}}],[0.006828000000000001,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_helm.el (source)...                          ",{}]]}}],[0.697744,{"lines":{"24":[["ad-handle-definition: `tramp-read-passwd' got redefined                              ",{}]]}}],[0.048152,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_helm.el (source)...done                      ",{}]]}}],[0.014367,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_open-junk-file.el (source)...                ",{}]]}}],[0.013147,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_projectile.el (source)...                    ",{}]]}}],[0.013504,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_sequential-command.el (source)...            ",{}]]}}],[0.00512,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_smartparens.el (source)...                   ",{}]]}}],[0.059343,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/30_smartparens.el (source)...done               ",{}]]}}],[0.004401,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_auto-complete.el (source)...                 ",{}]]}}],[0.033967,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_auto-complete.el (source)...done             ",{}]]}}],[0.002601,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_flycheck.el (source)...                      ",{}]]}}],[0.06146,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_flycheck.el (source)...done                  ",{}]]}}],[0.000963,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_howm.el (source)...                          ",{}]]}}],[0.161064,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_howm.el (source)...done                      ",{}]]}}],[0.004254,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/40_yasnippet.el (source)...                     ",{}]]}}],[0.117859,{"lines":{"24":[["[yas] Loading compiled snippets from /Users/handle/.emacs.d/assets/snippets/cperl-mo\\",{}]],"25":[["de                                                                                   ",{}]]}}],[0.014421,{"lines":{"24":[["[yas] Loading compiled snippets from /Users/handle/.emacs.d/assets/snippets/perl-mod\\",{}]],"25":[["e                                                                                    ",{}]]}}],[0.006674,{"lines":{"24":[["[yas] Loading compiled snippets from /Users/handle/.emacs.d/assets/snippets/sh-mode  ",{}]],"25":[["                                                                                     ",{}]]}}],[0.012979,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_dired.el (source)...                         ",{}]]}}],[0.010084,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_go.el (source)...                            ",{}]]}}],[0.031471,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_go.el (source)...done                        ",{}]]}}],[0.001287,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_markdown.el (source)...                      ",{}]]}}],[0.090361,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_markdown.el (source)...done                  ",{}]]}}],[0.006052999999999999,{"lines":{"24":[["Loading /Users/handle/.emacs.d/inits/50_ruby.el (source)...done                      ",{}]]}}],[0.129959,{}],[0.004293999999999999,{"lines":{"1":[["------- error log -------                                                            ",{}]],"5":[["------- init log -------                                                             ",{}]],"7":[["loaded /Users/handle/.emacs.d/inits/00_basic.el. 0.034386                            ",{}]],"8":[["loaded /Users/handle/.emacs.d/inits/00_private.el. 0.905894                          ",{}]],"9":[["loaded /Users/handle/.emacs.d/inits/01_display.el. 0.176013                          ",{}]],"10":[["loaded /Users/handle/.emacs.d/inits/01_keybidings.el. 0.017857                       ",{}]],"11":[["loaded /Users/handle/.emacs.d/inits/30_ag.el. 0.279054                               ",{}]],"12":[["loaded /Users/handle/.emacs.d/inits/30_editorconfig.el. 0.003799                     ",{}]],"13":[["loaded /Users/handle/.emacs.d/inits/30_expand-region.el. 0.001706                    ",{}]],"14":[["loaded /Users/handle/.emacs.d/inits/30_helm.el. 0.746653                             ",{}]],"15":[["loaded /Users/handle/.emacs.d/inits/30_hydra.el. 0.009225                            ",{}]],"16":[["loaded /Users/handle/.emacs.d/inits/30_my-tig.el. 0.001832                           ",{}]],"17":[["loaded /Users/handle/.emacs.d/inits/30_open-github.el. 0.001777                      ",{}]],"18":[["loaded /Users/handle/.emacs.d/inits/30_open-junk-file.el. 0.004383                   ",{}]],"19":[["loaded /Users/handle/.emacs.d/inits/30_popwin.el. 0.008427                           ",{}]],"20":[["loaded /Users/handle/.emacs.d/inits/30_projectile.el. 0.011626                       ",{}]],"21":[["loaded /Users/handle/.emacs.d/inits/30_quickrun.el. 0.001625                         ",{}]],"22":[["loaded /Users/handle/.emacs.d/inits/30_sequential-command.el. 0.004905               ",{}]],"23":[["loaded /Users/handle/.emacs.d/inits/30_smartparens.el. 0.059995                      ",{}]],"24":[["-UUU:%*--F1  ",{}],["*init log*  ",{"bold":true}],["   Top (1,0)      (Fundamental View) -----------------------",{}]],"25":[["For information about GNU Emacs and the GNU system, type <f1> C-a.                   ",{}]]}}],[0.188798,{"lines":{"0":[["File Edit Options Buffers Tools Emacs-Lisp YASnippet Help                            ",{}]]},"cursor":{"y":0,"visible":false}}],[0.000543,{"lines":{"1":[["- red (default): this head will continue the Hydra state.                            ",{"fg":2}]],"2":[["- blue: this head will stop the Hydra state.                                         ",{"fg":2}]],"3":[["- amaranth (applies to body only): similar to red, but no binding                    ",{"fg":2}]],"4":[["except a blue head can stop the Hydra state.                                         ",{"fg":2}]],"5":[["                                                                                     ",{"fg":2}]],"6":[[":bind can be:                                                                        ",{"fg":2}]],"7":[["- nil: this head will not be bound in BODY-MAP.                                      ",{"fg":2}]],"8":[["- a lambda taking KEY and CMD used to bind a head\"",{"fg":2}],["                                   ",{}]],"9":[["  (",{}],["declare",{"fg":6,"bold":true}],[" (indent defun))                                                           ",{}]],"10":[["  (",{}],["unless",{"fg":6,"bold":true}],[" (stringp docstring)                                                        ",{}]],"11":[["    (setq heads (cons docstring heads))                                              ",{}]],"12":[["    (setq docstring ",{}],["\"hydra\"",{"fg":2}],["))                                                        ",{}]],"13":[["  (",{}],["when",{"fg":6,"bold":true}],[" (keywordp (car body))                                                        ",{}]],"14":[["    (setq body (cons nil (cons nil body))))                                          ",{}]],"15":[["  (",{}],["let*",{"fg":6,"bold":true}],[" ((keymap (copy-keymap hydra-base-map))                                       ",{}]],"16":[["         (names (mapcar                                                              ",{}]],"17":[["                 (",{}],["lambda",{"fg":6,"bold":true}],[" (x)                                                         ",{}]],"18":[["                   (define-key keymap (kbd (car x))                                  ",{}]],"19":[["                     (intern (format ",{}],["\"%S/%s\"",{"fg":2}],[" name                                    ",{}]],"20":[["                                     (",{}],["if",{"fg":6,"bold":true}],[" (symbolp (cadr x))                          ",{}]],"21":[["                                         (cadr x)                                    ",{}]],"22":[["                                       (concat ",{}],["\"lambda-\"",{"fg":2}],[" (car x)))))))               ",{}]],"23":[["                 heads))                                                             ",{}]],"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (385,11)  Git-master  (Emacs-Lisp yas FlyC* AC SP Pro",{}]]},"cursor":{"x":11,"y":12,"visible":true}}],[0.3879,{"lines":{"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (385,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]]}}],[2.257399,{"lines":{"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (386,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]],"25":[["                                                                                     ",{}]]},"cursor":{"y":13}}],[0.12764,{"lines":{"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (387,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]]},"cursor":{"y":14}}],[0.775751,{"lines":{"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (386,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]]},"cursor":{"y":13}}],[0.254913,{"lines":{"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (387,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]]},"cursor":{"y":14}}],[1.554836,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (387,11)  Git-master  (Emacs-Lisp yas FlyC:0/1 AC SP ",{}]],"23":[["                                                                                     ",{}]],"24":[["                                                                                     ",{}]]},"cursor":{"x":0,"y":22}}],[7.8e-05,{"lines":{"23":[["highlight-symbol: [",{}],[".",{"fg":1,"bold":true}],["]: highlight, [",{}],["n",{"fg":1,"bold":true}],["]: next, [",{}],["p",{"fg":1,"bold":true}],["]: prev, [",{}],["N",{"fg":1,"bold":true}],["]: next in defun, [",{}],["P",{"fg":1,"bold":true}],["]: pre\\",{}]],"24":[["v in defun.                                                                          ",{}]]},"cursor":{"x":11,"y":14}}],[0.387079,{"cursor":{"x":0,"y":0,"visible":false}}],[0.000589,{"lines":{"3":[["- amaranth (applies to ",{"fg":2}],["body",{"fg":0,"bg":3}],[" only): similar to red, but no binding                    ",{"fg":2}]],"13":[["  (",{}],["when",{"fg":6,"bold":true}],[" (keywordp (car ",{}],["body",{"fg":0,"bg":3}],["))                                                        ",{}]],"14":[["    (setq ",{}],["body",{"fg":0,"bg":3}],[" (cons nil (cons nil ",{}],["body",{"fg":0,"bg":3}],["))))                                          ",{}]],"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (387,11)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":11,"y":14,"visible":true}}],[1.233148,{"lines":{"25":[["Mark set                                                                             ",{}]]}}],[0.005061,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   65% (387,36)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":36}}],[0.623736,{"lines":{"1":[["         (names (mapcar                                                              ",{}]],"2":[["                 (",{}],["lambda",{"fg":6,"bold":true}],[" (x)                                                         ",{}]],"3":[["                   (define-key keymap (kbd (car x))                                  ",{}]],"4":[["                     (intern (format ",{}],["\"%S/%s\"",{"fg":2}],[" name                                    ",{}]],"5":[["                                     (",{}],["if",{"fg":6,"bold":true}],[" (symbolp (cadr x))                          ",{}]],"25":[["                                                                                     ",{}]]},"cursor":{"x":59,"y":5,"visible":false}}],[0.000265,{"lines":{"6":[["                                         (cadr x)                                    ",{}]],"7":[["                                       (concat ",{}],["\"lambda-\"",{"fg":2}],[" (car x)))))))               ",{}]],"8":[["                 heads))                                                             ",{}]],"9":[["         (body-name (intern (format ",{}],["\"%S/body\"",{"fg":2}],[" name)))                                ",{}]],"10":[["         (hint-name (intern (format ",{}],["\"%S/hint\"",{"fg":2}],[" name)))                                ",{}]],"11":[["         (body-key (",{}],["unless",{"fg":6,"bold":true}],[" (hydra--callablep ",{}],["body",{"fg":0,"bg":3}],[")                                   ",{}]],"12":[["                     (cadr ",{}],["body",{"fg":0,"bg":3}],[")))                                                   ",{}]],"13":[["         (body-color (",{}],["if",{"fg":6,"bold":true}],[" (hydra--callablep ",{}],["body",{"fg":0,"bg":3}],[")                                     ",{}]],"14":[["                         'red                                                        ",{}]],"15":[["                       (or (plist-get (cddr ",{}],["body",{"fg":0,"bg":3}],[") ",{}],[":color",{"fg":4,"bold":true}],[")                            ",{}]],"16":[["                           'red)))                                                   ",{}]],"17":[["         (body-pre (plist-get (cddr ",{}],["body",{"fg":0,"bg":3}],[") ",{}],[":pre",{"fg":4,"bold":true}],["))                                     ",{}]],"18":[["         (body-post (plist-get (cddr ",{}],["body",{"fg":0,"bg":3}],[") ",{}],[":post",{"fg":4,"bold":true}],["))                                   ",{}]],"19":[["         (method (or (plist-get ",{}],["body",{"fg":0,"bg":3}],[" ",{}],[":bind",{"fg":4,"bold":true}],[")                                          ",{}]],"20":[["                     (car ",{}],["body",{"fg":0,"bg":3}],[")))                                                    ",{}]],"21":[["         (hint (hydra--hint docstring heads body-color))                             ",{}]],"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (399,46)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":46,"y":11,"visible":true}}],[0.834642,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (400,28)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":28,"y":12}}],[0.186937,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (401,44)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":44,"y":13}}],[0.151625,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (403,45)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":45,"y":15}}],[0.25622,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (405,37)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":37,"y":17}}],[0.510289,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (403,45)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":45,"y":15}}],[0.142322,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (401,44)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":44,"y":13}}],[0.187843,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (400,28)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":28,"y":12}}],[0.214321,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   68% (399,46)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":46,"y":11}}],[0.457292,{"lines":{"1":[["                                                                                     ",{}]],"2":[["                                                                                     ",{}]],"3":[["                                                                                     ",{}]],"4":[["                                                                                     ",{}]],"5":[["                                                                                     ",{}]],"6":[["                                                                                     ",{}]],"7":[["                                                                                     ",{}]],"8":[["                                                                                     ",{}]],"9":[["                                                                                     ",{}]],"10":[["                                                                                     ",{}]],"11":[["                                                                                     ",{}]],"12":[["                                                                                     ",{}]],"13":[["         (names (mapcar                                                              ",{}]],"14":[["                 (",{}],["lambda",{"fg":6,"bold":true}],[" (x)                                                         ",{}]],"15":[["                   (define-key keymap (kbd (car x))                                  ",{}]],"16":[["                     (intern (format ",{}],["\"%S/%s\"",{"fg":2}],[" name                                    ",{}]],"17":[["                                     (",{}],["if",{"fg":6,"bold":true}],[" (symbolp (cadr x))                          ",{}]],"18":[["                                         (cadr x)                                    ",{}]],"19":[["                                       (concat ",{}],["\"lambda-\"",{"fg":2}],[" (car x)))))))               ",{}]],"20":[["                 heads))                                                             ",{}]],"21":[["         (body-name (intern (format ",{}],["\"%S/body\"",{"fg":2}],[" name)))                                ",{}]]},"cursor":{"x":0,"y":1}}],[0.000195,{"lines":{"1":[["except a blue head can stop the Hydra state.                                         ",{"fg":2}]],"2":[["                                                                                     ",{"fg":2}]],"3":[[":bind can be:                                                                        ",{"fg":2}]],"4":[["- nil: this head will not be bound in BODY-MAP.                                      ",{"fg":2}]],"5":[["- a lambda taking KEY and CMD used to bind a head\"",{"fg":2}],["                                   ",{}]],"6":[["  (",{}],["declare",{"fg":6,"bold":true}],[" (indent defun))                                                           ",{}]],"7":[["  (",{}],["unless",{"fg":6,"bold":true}],[" (stringp docstring)                                                        ",{}]],"8":[["    (setq heads (cons docstring heads))                                              ",{}]],"9":[["    (setq docstring ",{}],["\"hydra\"",{"fg":2}],["))                                                        ",{}]],"10":[["  (",{}],["when",{"fg":6,"bold":true}],[" (keywordp (car ",{}],["body",{"fg":0,"bg":3}],["))                                                        ",{}]],"11":[["    (setq ",{}],["body",{"fg":0,"bg":3}],[" (cons nil (cons nil ",{}],["body",{"fg":0,"bg":3}],["))))                                          ",{}]],"12":[["  (",{}],["let*",{"fg":6,"bold":true}],[" ((keymap (copy-keymap hydra-base-map))                                       ",{}]],"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   66% (387,36)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":36,"y":11}}],[0.609697,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   66% (387,11)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":11}}],[1.173618,{"lines":{"22":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   66% (387,36)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"x":36}}],[1.625037,{"lines":{"22":[["         (hint-name (intern (format ",{}],["\"%S/hint\"",{"fg":2}],[" name)))                                ",{}]],"23":[["         (body-key (",{}],["unless",{"fg":6,"bold":true}],[" (hydra--callablep ",{}],["body",{"fg":0,"bg":3}],[")                                   ",{}]],"24":[["-UU-:----F1  ",{}],["hydra.el    ",{"bold":true}],["   66% (388,36)  Git-master  (Emacs-Lisp Hi yas FlyC:0/1 AC ",{}]]},"cursor":{"y":12}}],[1.218928,{"lines":{"25":[["(No files need saving)                                                               ",{}]]}}],[0.009207999999999999,{"lines":{"25":[["Wrote /Users/handle/.emacs.d/ac-comphist.dat                                         ",{}]]}}],[0.206176,{"lines":{"25":[["Wrote /Users/handle/.emacs.d/.saved-places                                           ",{}]]}}],[0.014482,{"lines":{"0":[["-- 2015/02/18 21:25:16 --",{"fg":0,"bold":true}],["                                                            ",{}]],"1":[["                                                                                     ",{}]],"2":[["curly:",{"fg":6,"bold":true}],["/Users/handle/src/github.com/handlename/dot-emacs/quelpa/build/hydra ",{"fg":3,"bold":true}],["git:master",{"fg":2,"bold":true}]],"3":[[" ",{"bold":true}],["                                                                                    ",{}]],"4":[["$",{"fg":1,"bold":true}],[" ",{}],["emacs",{"fg":2}],[" ",{}],["/Users/handle/src/github.com/handlename/dot-emacs/quelpa/build/hydra/hydra.el",{"underline":true}]],"5":[["                                                                                     ",{}]],"6":[["emacs   4.44s user 1.02s system 20% cpu 26.571 total                                 ",{}]],"7":[["                                                                                     ",{}]],"8":[["                                                                                     ",{}]],"9":[["                                                                                     ",{}]],"10":[["                                                                                     ",{}]],"11":[["                                                                                     ",{}]],"12":[["                                                                                     ",{}]],"13":[["                                                                                     ",{}]],"14":[["                                                                                     ",{}]],"15":[["                                                                                     ",{}]],"16":[["                                                                                     ",{}]],"17":[["                                                                                     ",{}]],"18":[["                                                                                     ",{}]],"19":[["                                                                                     ",{}]],"20":[["                                                                                     ",{}]],"21":[["                                                                                     ",{}]],"22":[["                                                                                     ",{}]],"23":[["                                                                                     ",{}]],"24":[["                                                                                     ",{}]],"25":[["                                                                                     ",{}]]},"cursor":{"x":0,"y":7}}],[0.082301,{"lines":{"7":[["-- 2015/02/18 21:25:45 --",{"fg":0,"bold":true}],["                                                            ",{}]],"9":[["curly:",{"fg":6,"bold":true}],["/Users/handle/src/github.com/handlename/dot-emacs/quelpa/build/hydra ",{"fg":3,"bold":true}],["git:master",{"fg":2,"bold":true}]],"10":[[" ",{"bold":true}],["                                                                                    ",{}]],"11":[["$",{"fg":1,"bold":true}],["                                                                                    ",{}]]},"cursor":{"x":2,"y":11}}],[1.149847,{"cursor":{"x":0,"y":12}}]]