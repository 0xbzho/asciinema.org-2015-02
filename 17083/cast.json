[[0.115756,{"lines":{"0":[["We are not like that. We know that no one ever seizes power with the intention                               ",{}]],"1":[["                                                                                                             ",{}]],"2":[["                                                                                                             ",{}]],"3":[["                                                                                                             ",{}]],"4":[["                                                                                                             ",{}]],"5":[["                                                                                                             ",{}]],"6":[["                                                                                                             ",{}]],"7":[["                                                                                                             ",{}]],"8":[["                                                                                                             ",{}]],"9":[["                                                                                                             ",{}]],"10":[["                                                                                                             ",{}]],"11":[["                                                                                                             ",{}]],"12":[["                                                                                                             ",{}]],"13":[["                                                                                                             ",{}]],"14":[["                                                                                                             ",{}]],"15":[["                                                                                                             ",{}]],"16":[["                                                                                                             ",{}]],"17":[["                                                                                                             ",{}]],"18":[["                                                                                                             ",{}]],"19":[["                                                                                                             ",{}]],"20":[["                                                                                                             ",{}]],"21":[["                                                                                                             ",{}]],"22":[["                                                                                                             ",{}]],"23":[["                                                                                                             ",{}]],"24":[["                                                                                                             ",{}]],"25":[["                                                                                                             ",{}]],"26":[["                                                                                                             ",{}]],"27":[["                                                                                                             ",{}]],"28":[["                                                                                                             ",{}]],"29":[["                                                                                                             ",{}]],"30":[["                                                                                                             ",{}]],"31":[["                                                                                                             ",{}]],"32":[["                                                                                                             ",{}]],"33":[["                                                                                                             ",{}]],"34":[["                                                                                                             ",{}]]},"cursor":{"x":0,"y":1,"visible":true}}],[0.002061,{"lines":{"1":[["of relinquishing it. Power is not a means, it is an end. One does not establish                              ",{}]],"2":[["a dictatorship in order to safeguard a revolution; one makes the revolution in                               ",{}]],"3":[["order to establish the dictatorship. The object of persecution is persecution.                               ",{}]],"4":[["The object of terrorism is terrorism. The object of oppression is oppression.                                ",{}]],"5":[["The object of torture is torture. The object of murder is murder. The object of                              ",{}]],"6":[["power is power. Now do you begin to understand me?                                                           ",{}]],"7":[["~ George Orwell, 1984                                                                                        ",{}]],"9":[["Press any key to continue...                                                                                 ",{}]]},"cursor":{"x":28,"y":9}}],[1.95883,{"cursor":{"x":0,"y":10}}],[0.006444,{"lines":{"0":[["                                                                                                             ",{}]],"1":[["                                                                                                             ",{}]],"2":[["                                                                                                             ",{}]],"3":[["                                                                                                             ",{}]],"4":[["                                                                                                             ",{}]],"5":[["                                                                                                             ",{}]],"6":[["                                                                                                             ",{}]],"7":[["                                                                                                             ",{}]],"9":[["                                                                                                             ",{}]],"34":[["[student] 0:bash*                                                                   \"testbed\" 02:16 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"y":0}}],[0.107308,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:16 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":19}}],[2.448114,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                                                                         ",{}]]},"cursor":{"x":20}}],[0.01641,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Hi! In this video I'll show you how to work with named pipes (fifos) and gdb!           ",{}]]},"cursor":{"x":0,"y":1}}],[0.001113,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[3.368245,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                                                                         ",{}]]},"cursor":{"x":20}}],[0.016666,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # A named pipe is like a pipe '|' with the exception that it exists beyond the life       ",{}]]},"cursor":{"x":102}}],[0.004249,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # A named pipe is like a pipe '|' with the exception that it exists beyond the life of the",{}]],"2":[[" process.                                                                                                    ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19,"y":3}}],[4.436446,{"lines":{"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # It's like a per                                                                         ",{}]]},"cursor":{"x":36}}],[0.003065,{"lines":{"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # It's like a persistent pipe residing in the file system :)                              ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19,"y":4}}],[3.753749,{"lines":{"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # We can create a named pipe with the mkfifo command:                                     ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"y":5}}],[2.469819,{"lines":{"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                                                                               ",{}]]},"cursor":{"x":0,"y":6}}],[0.001961,{"lines":{"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[2.703031,{"lines":{"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" l                                                                                         ",{}]]},"cursor":{"x":20}}],[0.006388,{"lines":{"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                                                                                ",{}]],"7":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["                                                               ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19,"y":8}}],[2.666704,{"lines":{"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                                                                                 ",{}]]},"cursor":{"x":0,"y":9}}],[0.002683,{"lines":{"9":[["fifo: fifo (named pipe)                                                                                      ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19,"y":10}}],[3.989577,{"lines":{"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"11":[["din of an application running inside gdb.                                                                    ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"y":12}}],[6.163565,{"lines":{"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"y":13}}],[3.578312,{"lines":{"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]]},"cursor":{"x":0,"y":14}}],[0.04445,{"lines":{"14":[["Reading symbols from /opt/shared/bof/bof/bof...                                                              ",{}]]},"cursor":{"x":47}}],[0.001093,{"lines":{"14":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"15":[["(gdb)                                                                                                        ",{}]]},"cursor":{"x":6,"y":15}}],[0.283525,{"lines":{"34":[["[student] 0:gdb*                                                           \"lavish@testbed:~\" 02:16 27-Feb-15",{"fg":0,"bg":2}]]}}],[5.865769,{"lines":{"15":[["(gdb) r                                                                                                      ",{}]]},"cursor":{"x":7}}],[0.001944,{"lines":{"15":[["(gdb) r < fifo                                                                                               ",{}]]},"cursor":{"x":14}}],[0.876352,{"lines":{"16":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]]},"cursor":{"x":0,"y":17}}],[0.268409,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[2.776469,{"lines":{"0":[["ing in the file system :)                             │w to work with named pipes (fifos) and gdb!           ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # We can create a named pipe with t│th the exception that it exists beyond the life of the",{}]],"2":[["he mkfifo command:                                    │                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │ng in the file system :)                              ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │e mkfifo command:                                     ",{}]],"5":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        │                                                      ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │                                                      ",{}]],"7":[["fifo: fifo (named pipe)                               │                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │                                                      ",{}]],"9":[["fifo: fifo (named pipe)                               │                                                      ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│t to redirect the output of a python command to the st",{}]],"11":[["din of an application running inside gdb.             │                                                      ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │                                                      ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │                                                      ",{}]],"14":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│gging symbols found)...done.                          ",{}]],"15":[["(gdb) r < fifo                                        │                                                      ",{}]],"16":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"17":[["                                                      │                                                      ",{}]],"18":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"20":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"21":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"y":8,"visible":false}}],[0.000117,{"lines":{"0":[["ing in the file system :)                             │                                                      ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # We can create a named pipe with t│                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │                                                      ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│                                                      ",{}]],"9":[["nt to redirect the output of a python command to the s│                                                      ",{}]],"10":[["tdin of an application running inside gdb.            │                                                      ",{}]],"11":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │                                                      ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │                                                      ",{}]],"13":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│                                                      ",{}]],"14":[["ugging symbols found)...done.                         │                                                      ",{}]],"34":[["[student] 0:bash*                                                                   \"testbed\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":55,"y":0,"visible":true}}],[0.110883,{"lines":{"0":[["ing in the file system :)                             │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":74}}],[5.936854,{"lines":{"0":[["ing in the file system :)                             │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" p                                  ",{}]]},"cursor":{"x":75}}],[0.009897999999999997,{"lines":{"0":[["ing in the file system :)                             │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" python -c 'import sys; sys.stdout.w",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # We can create a named pipe with t│rite(\"A\"*40)' > fifo                                  ",{}]]},"cursor":{"y":1}}],[3.820278,{"cursor":{"x":55,"y":2}}],[0.008325000000000001,{"lines":{"17":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"18":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]]}}],[0.016916,{"lines":{"2":[["he mkfifo command:                                    │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"x":74}}],[0.055185,{"lines":{"21":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]]}}],[0.000518,{"lines":{"22":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["(gdb)                                                 ",{}],["│",{"fg":2}],["                                                      ",{}]]}}],[6.97179,{"lines":{"2":[["he mkfifo command:                                    │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" logout                             ",{}]]},"cursor":{"x":55,"y":3}}],[0.003896,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Hi! In this video I'll show you how to work with named pipes (fifos) and gdb!           ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # A named pipe is like a pipe '|' with the exception that it exists beyond the life of the",{}]],"2":[[" process.                                                                                                    ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # It's like a persistent pipe residing in the file system :)                              ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # We can create a named pipe with the mkfifo command:                                     ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                                                                               ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                                                                                ",{}]],"7":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["                                                               ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                                                                                 ",{}]],"9":[["fifo: fifo (named pipe)                                                                                      ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"11":[["din of an application running inside gdb.                                                                    ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"14":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"15":[["(gdb) r < fifo                                                                                               ",{}]],"16":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"17":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"19":[["                                                                                                             ",{}]],"20":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"21":[["0x41414141 in ?? ()                                                                                          ",{}]],"22":[["(gdb)                                                                                                        ",{}]],"23":[["                                                                                                             ",{}]],"24":[["                                                                                                             ",{}]],"25":[["                                                                                                             ",{}]],"26":[["                                                                                                             ",{}]],"27":[["                                                                                                             ",{}]],"28":[["                                                                                                             ",{}]],"29":[["                                                                                                             ",{}]],"30":[["                                                                                                             ",{}]],"31":[["                                                                                                             ",{}]],"32":[["                                                                                                             ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":6,"y":22}}],[0.325556,{"lines":{"34":[["[student] 0:gdb*                                                           \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[1.271023,{"lines":{"22":[["(gdb) quit                                                                                                   ",{}]],"23":[["A debugging session is active.                                                                               ",{}]],"25":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"27":[["Quit anyway? (y or n)                                                                                        ",{}]]},"cursor":{"x":22,"y":27}}],[0.974317,{"lines":{"27":[["Quit anyway? (y or n) y                                                                                      ",{}]]},"cursor":{"x":23}}],[0.280506,{"cursor":{"x":0,"y":28}}],[0.007828999999999999,{"lines":{"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[0.47286,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[3.941413,{"lines":{"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"29":[["standard input through the named pipe.                                                                       ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"y":30}}],[10.033144,{"lines":{"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"y":31}}],[7.263839,{"lines":{"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]]},"cursor":{"x":27}}],[0.972855,{"cursor":{"x":0,"y":32}}],[0.328358,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[2.259943,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │w to work with named pipes (fifos) and gdb!           ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │th the exception that it exists beyond the life of the",{}]],"2":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        │                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │ng in the file system :)                              ",{}]],"4":[["fifo: fifo (named pipe)                               │e mkfifo command:                                     ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│                                                      ",{}]],"6":[["nt to redirect the output of a python command to the s│                                                      ",{}]],"7":[["tdin of an application running inside gdb.            │                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │                                                      ",{}]],"9":[["fifo: fifo (named pipe)                               │                                                      ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│t to redirect the output of a python command to the st",{}]],"11":[["din of an application running inside gdb.             │                                                      ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │                                                      ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │                                                      ",{}]],"14":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│gging symbols found)...done.                          ",{}]],"15":[["(gdb) r < fifo                                        │                                                      ",{}]],"16":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"17":[["warning: Could not load shared library symbols for lin│x-gate.so.1.                                          ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"20":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"21":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["irect the output of our python command to the program ",{}]],"29":[["standard input through the named pipe.                ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["teract with programs... let's try!                    ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"y":8,"visible":false}}],[8.3e-05,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │                                                      ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │                                                      ",{}]],"4":[["fifo: fifo (named pipe)                               │                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │                                                      ",{}]],"9":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │                                                      ",{}]],"10":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│                                                      ",{}]],"11":[["ugging symbols found)...done.                         │                                                      ",{}]],"12":[["(gdb) r < fifo                                        │                                                      ",{}]],"13":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"14":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"15":[["ux-gate.so.1.                                         │                                                      ",{}]],"16":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"17":[["                                                      │                                                      ",{}]],"18":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"20":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["                                                      ",{}]],"21":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"34":[["[student] 0:cat*                                                                    \"testbed\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":55,"y":0,"visible":true}}],[0.10874,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[0.000608,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"x":74}}],[0.134362,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:17 27-Feb-15",{"fg":0,"bg":2}]]}}],[4.583973,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" e                                  ",{}]]},"cursor":{"x":75}}],[0.003268,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]]},"cursor":{"x":89}}],[0.855235,{"cursor":{"x":55,"y":1}}],[0.003067,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"32":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":74}}],[6.169753,{"lines":{"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        │ the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"y":3}}],[6.857021,{"lines":{"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["fifo: fifo (named pipe)                               │ys open, we can execute this command on another termin",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│al:                                                   ",{}]],"6":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"y":6}}],[4.918171,{"lines":{"6":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]]},"cursor":{"x":84}}],[4.365997,{"cursor":{"x":55,"y":7}}],[2.818536,{"lines":{"17":[["                                                      ",{}],["├──────────────────────────────────────────────────────",{"fg":2}]]},"cursor":{"x":17,"y":5,"visible":false}}],[0.000105,{"lines":{"34":[["[student] 0:bash*                                                                   \"testbed\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":55,"y":18,"visible":true}}],[0.107729,{"lines":{"18":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":74}}],[4.974322,{"lines":{"18":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                  ",{}]]},"cursor":{"x":75}}],[0.013861,{"lines":{"18":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"x":74,"y":20}}],[3.69232,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" mkfifo fifo                        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["fifo: fifo (named pipe)                               ",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"15":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["                                                      ",{}],["├",{"fg":2}],["──────────────────────────────────────────────────────",{}]]},"cursor":{"x":14,"y":5,"visible":false}}],[0.000109,{"cursor":{"x":19,"y":33,"visible":true}}],[0.6286929999999999,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["fifo: fifo (named pipe)                               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["ux-gate.so.1.    t load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":17,"y":14,"visible":false}}],[7.2e-05,{"lines":{"14":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"15":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["├",{"fg":2}],["──────────────────────────────────────────────────────",{}]],"18":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"21":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":19,"y":33,"visible":true}}],[1.064919,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":27}}],[0.604865,{"lines":{"0":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["fifo: fifo (named pipe)                               ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":0,"y":14,"visible":false}}],[8.7e-05,{"lines":{"15":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["0x41414141 in ?? ()                                   ",{}],["├",{"fg":2}],["──────────────────────────────────────────────────────",{}]],"18":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["                                                      ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"21":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"y":33,"visible":true}}],[0.415385,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]}}],[1.247497,{"lines":{"0":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["        │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["fifo: fifo (named pipe)                               │ the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["nt to redirect the output of a python command to the s│ys open, we can execute this command on another termin",{}]],"5":[["tdin of an application running inside gdb.            │al:                                                   ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │                                                      ",{}]],"8":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│                                                      ",{}]],"9":[["ugging symbols found)...done.                         │                                                      ",{}]],"10":[["(gdb) r < fifo                                        │                                                      ",{}]],"11":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"12":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"13":[["ux-gate.so.1.                                         │                                                      ",{}]],"14":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"15":[["                                                      │                                                      ",{}]],"16":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"17":[["0x41414141 in ?? ()                                   ",{}],["├──────────────────────────────────────────────────────",{"fg":2}]]},"cursor":{"x":14,"y":6,"visible":false}}],[9.6e-05,{"cursor":{"x":74,"y":20,"visible":true}}],[0.255397,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]}}],[0.270148,{"lines":{"21":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"y":21}}],[4.207481,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                          │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["fifo: fifo (named pipe)                               │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│ the fifo is closed and so cat terminates.            ",{}]],"3":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["tdin of an application running inside gdb.            │ys open, we can execute this command on another termin",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │al:                                                   ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│                                                      ",{}]],"8":[["ugging symbols found)...done.                         │                                                      ",{}]],"9":[["(gdb) r < fifo                                        │                                                      ",{}]],"10":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"11":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"12":[["ux-gate.so.1.                                         │                                                      ",{}]],"13":[["Do you need \"set s                                    │                                                      ",{}]],"21":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"22":[["                                                      ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"33":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":18,"y":13,"visible":false}}],[7.6e-05,{"lines":{"13":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"14":[["                                                      │                                                      ",{}]],"15":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"16":[["0x41414141 in ?? ()                                   │                                                      ",{}]],"17":[["(gdb) quit                                            ",{}],["├──────────────────────────────────────────────────────",{"fg":2}]],"18":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["                                                      ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"21":[["                                                      ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"22":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":74,"y":22,"visible":true}}],[3.30266,{"lines":{"0":[["fifo: fifo (named pipe)                               │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["nt to redirect the output of a python command to the s│ the fifo is closed and so cat terminates.            ",{}]],"3":[["tdin of an application running inside gdb.            │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │ys open, we can execute this command on another termin",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │al:                                                   ",{}]],"6":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["ugging symbols found)...done.                         │                                                      ",{}]],"8":[["(gdb) r < fifo                                        │                                                      ",{}]],"9":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"10":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"11":[["ux-gate.so.1.                                         │                                                      ",{}]],"12":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"13":[["                                                      │                                                      ",{}]],"22":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo bar > fifo                    ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"33":[["bar                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":0,"y":14,"visible":false}}],[7.3e-05,{"lines":{"14":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"15":[["0x41414141 in ?? ()                                   │                                                      ",{}]],"16":[["(gdb) quit                                            │                                                      ",{}]],"17":[["A debugging session is active.                        ",{}],["├──────────────────────────────────────────────────────",{"fg":2}]],"18":[["                                                      ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["                                                      ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"21":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo bar > fifo                    ",{}]],"23":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"24":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["bar                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":74,"y":23,"visible":true}}],[3.062449,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["tdin of an application running inside gdb.            │ the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │ys open, we can execute this command on another termin",{}]],"5":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│al:                                                   ",{}]],"6":[["ugging symbols found)...done.                         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["(gdb) r < fifo                                        │                                                      ",{}]],"8":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"9":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"10":[["ux-gate.so.1.                                         │                                                      ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"12":[["                                                      │                                                      ",{}]],"13":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"23":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo baz > fifo                    ",{}]],"24":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"33":[["baz                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":0,"y":14,"visible":false}}],[9.000000000000001e-05,{"lines":{"14":[["0x41414141 in ?? ()                                   │                                                      ",{}]],"15":[["(gdb) quit                                            │                                                      ",{}]],"16":[["A debugging session is active.                        │                                                      ",{}]],"17":[["                                                      ",{}],["├──────────────────────────────────────────────────────",{"fg":2}]],"18":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # In this way we'll be able send mu",{}]],"19":[["                                                      ",{}],["│",{"fg":2}],["ltiple strings to the stdin of cat:                   ",{}]],"20":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"22":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo bar > fifo                    ",{}]],"23":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo baz > fifo                    ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]],"25":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["bar                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["baz                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":74,"y":24,"visible":true}}],[6.374347,{"lines":{"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" logout                             ",{}]]},"cursor":{"x":55,"y":25}}],[0.004286,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"15":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"18":[["        Inferior 1 [process 8455] will be killed.     │                                                      ",{}]],"19":[["                                                      │                                                      ",{}]],"20":[["Quit anyway? (y or n) y                               │                                                      ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re│                                                      ",{}]],"22":[["direct the output of our python command to the program│                                                      ",{}]],"23":[[" standard input through the named pipe.               │                                                      ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i│                                                      ",{}]],"25":[["nteract with programs... let's try!                   │                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"27":[["foo                                                   │                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    │                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"30":[["foo                                                   │                                                      ",{}]],"31":[["bar                                                   │                                                      ",{}]],"32":[["baz                                                   │                                                      ",{}]],"33":[["                                                      │                                                      ",{}]]},"cursor":{"x":0,"y":33}}],[0.312264,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:18 27-Feb-15",{"fg":0,"bg":2}]]}}],[2.004656,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["tdin of an application running inside gdb.            │ the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │ys open, we can execute this command on another termin",{}]],"5":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│al:                                                   ",{}]],"6":[["ugging symbols found)...done.                         │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["(gdb) r < fifo                                        │                                                      ",{}]],"8":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"9":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"10":[["ux-gate.so.1.                                         │                                                      ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"12":[["                                                      │                                                      ",{}]],"13":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"14":[["0x41414141 in ?? ()                                   │                                                      ",{}]],"15":[["(gdb) quit                                            │                                                      ",{}]],"16":[["A debugging session is active.                        │                                                      ",{}]],"17":[["                                                      │                                                      ",{}]],"18":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"20":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["bar                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["baz                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":11,"y":9,"visible":false}}],[0.000115,{"cursor":{"x":55,"y":7,"visible":true}}],[2.756923,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]}}],[0.467091,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we wa",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"15":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"18":[["        Inferior 1 [process 8455] will be killed.     │                                                      ",{}]],"19":[["                                                      │                                                      ",{}]],"20":[["Quit anyway? (y or n) y                               │                                                      ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re│                                                      ",{}]],"22":[["direct the output of our python command to the program│                                                      ",{}]],"23":[[" standard input through the named pipe.               │                                                      ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i│                                                      ",{}]],"25":[["nteract with programs... let's try!                   │                                                      ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"27":[["foo                                                   │                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    │                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"30":[["foo                                                   │                                                      ",{}]],"31":[["bar                                                   │                                                      ",{}]],"32":[["baz                                                   │                                                      ",{}]],"33":[["                                                      │                                                      ",{}]]},"cursor":{"x":11,"y":9,"visible":false}}],[8.999999999999999e-05,{"cursor":{"x":0,"y":33,"visible":true}}],[1.378276,{"lines":{"0":[["nt to redirect the output of a python command to the s",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["tdin of an application running inside gdb.            ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         ",{}],["│",{"fg":2}],[" the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb",{}],["│",{"fg":2}],["ys open, we can execute this command on another termin",{}]],"5":[["ugging symbols found)...done.                         ",{}],["│",{"fg":2}],["al:                                                   ",{}]],"6":[["(gdb) r < fifo                                        ",{}],["│",{"fg":2}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["Starting program: /opt/shared/bof/bof/bof < fifo      ",{}],["│",{"fg":2}],["                                                      ",{}]],"8":[["warning: Could not load shared library symbols for lin",{}],["│",{"fg":2}],["                                                      ",{}]],"9":[["ux-gate.so.1.                                         ",{}],["│",{"fg":2}],["                                                      ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"? ",{}],["│",{"fg":2}],["                                                      ",{}]],"11":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"12":[["Program received signal SIGSEGV, Segmentation fault.  ",{}],["│",{"fg":2}],["                                                      ",{}]],"13":[["0x41414141 in ?? ()                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"14":[["(gdb) quit                                            ",{}],["│",{"fg":2}],["                                                      ",{}]],"15":[["A debugging session is active.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"16":[["                          ive.                        ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["^C                                                    │                                                      ",{}]]},"cursor":{"x":26,"y":16,"visible":false}}],[8.2e-05,{"lines":{"16":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"17":[["        Inferior 1 [process 8455] will be killed.     ",{}],["│",{"fg":2}],["                                                      ",{}]],"18":[["                                                      │                                                      ",{}]],"19":[["Quit anyway? (y or n) y                               │                                                      ",{}]],"20":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re│                                                      ",{}]],"21":[["direct the output of our python command to the program│                                                      ",{}]],"22":[[" standard input through the named pipe.               │                                                      ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i│                                                      ",{}]],"24":[["nteract with programs... let's try!                   │                                                      ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"26":[["foo                                                   │                                                      ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    │                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           │                                                      ",{}]],"29":[["foo                                                   │                                                      ",{}]],"30":[["bar                                                   │                                                      ",{}]],"31":[["baz                                                   │                                                      ",{}]],"32":[["^C                                                    │                                                      ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    │                                                      ",{}]]},"cursor":{"x":19,"y":33,"visible":true}}],[0.405498,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]}}],[1.154053,{"lines":{"0":[["nt to redirect the output of a python command to the s│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" echo foo > fifo                    ",{}]],"1":[["tdin of an application running inside gdb.            │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # After executing the echo command,",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:         │ the fifo is closed and so cat terminates.            ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof     │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we want to leave the fifo alwa",{}]],"4":[["Reading symbols from /opt/shared/bof/bof/bof...(no deb│ys open, we can execute this command on another termin",{}]],"5":[["ugging symbols found)...done.                         │al:                                                   ",{}]],"6":[["(gdb) r < fifo                                        │",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat > fifo                         ",{}]],"7":[["Starting program: /opt/shared/bof/bof/bof < fifo      │                                                      ",{}]],"8":[["warning: Could not load shared library symbols for lin│                                                      ",{}]],"9":[["ux-gate.so.1.                                         │                                                      ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"? │                                                      ",{}]],"11":[["                                                      │                                                      ",{}]],"12":[["Program received signal SIGSEGV, Segmentation fault.  │                                                      ",{}]],"13":[["0x41414141 in ?? ()                                   │                                                      ",{}]],"14":[["(gdb) quit                                            │                                                      ",{}]],"15":[["A debugging session is active.                        │                                                      ",{}]],"16":[["                                                      │                                                      ",{}]],"17":[["        Inferior 1 [process 8455] will be killed.     │                                                      ",{}]],"18":[["                                                      ",{}],["│",{"fg":2}],["                                                      ",{}]],"19":[["Quit anyway? (y or n) y                               ",{}],["│",{"fg":2}],["                                                      ",{}]],"20":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to re",{}],["│",{"fg":2}],["                                                      ",{}]],"21":[["direct the output of our python command to the program",{}],["│",{"fg":2}],["                                                      ",{}]],"22":[[" standard input through the named pipe.               ",{}],["│",{"fg":2}],["                                                      ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to i",{}],["│",{"fg":2}],["                                                      ",{}]],"24":[["nteract with programs... let's try!                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"26":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                           ",{}],["│",{"fg":2}],["                                                      ",{}]],"29":[["foo                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"30":[["bar                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"31":[["baz                                                   ",{}],["│",{"fg":2}],["                                                      ",{}]],"32":[["^C                                                    ",{}],["│",{"fg":2}],["                                                      ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}],["│",{"fg":2}],["                                                      ",{}]]},"cursor":{"x":49,"y":9,"visible":false}}],[0.000102,{"cursor":{"x":55,"y":7,"visible":true}}],[0.349161,{"lines":{"34":[["[student] 0:cat*                                                           \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]}}],[0.467792,{"lines":{"7":[["Starting program: /opt/shared/bof/bof/bof < fifo      │^C                                                    ",{}]],"8":[["warning: Could not load shared library symbols for lin│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                    ",{}]]},"cursor":{"x":74,"y":8}}],[0.033206,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]}}],[1.347013,{"lines":{"8":[["warning: Could not load shared library symbols for lin│",{}],["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" logout                             ",{}]]},"cursor":{"x":55,"y":9}}],[0.004406,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" ls -l fifo                                                                                ",{}]],"1":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["                                                               ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                                                                                 ",{}]],"3":[["fifo: fifo (named pipe)                                                                                      ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"5":[["din of an application running inside gdb.                                                                    ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"8":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"9":[["(gdb) r < fifo                                                                                               ",{}]],"10":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"11":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"12":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"13":[["                                                                                                             ",{}]],"14":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"15":[["0x41414141 in ?? ()                                                                                          ",{}]],"16":[["(gdb) quit                                                                                                   ",{}]],"17":[["A debugging session is active.                                                                               ",{}]],"18":[["                                                                                                             ",{}]],"19":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"20":[["                                                                                                             ",{}]],"21":[["Quit anyway? (y or n) y                                                                                      ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"23":[["standard input through the named pipe.                                                                       ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"26":[["foo                                                                                                          ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"29":[["foo                                                                                                          ",{}]],"30":[["bar                                                                                                          ",{}]],"31":[["baz                                                                                                          ",{}]],"32":[["^C                                                                                                           ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19,"y":33}}],[7.266855,{"lines":{"0":[["prw-r--r-- 1 lavish lavish 0 Feb 27 02:16 ",{}],["fifo",{"fg":3,"bg":0}],["                                                               ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                                                                                 ",{}]],"2":[["fifo: fifo (named pipe)                                                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"4":[["din of an application running inside gdb.                                                                    ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"7":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"8":[["(gdb) r < fifo                                                                                               ",{}]],"9":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"10":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"11":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"12":[["                                                                                                             ",{}]],"13":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"14":[["0x41414141 in ?? ()                                                                                          ",{}]],"15":[["(gdb) quit                                                                                                   ",{}]],"16":[["A debugging session is active.                                                                               ",{}]],"17":[["                                                                                                             ",{}]],"18":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"19":[["                                                                                                             ",{}]],"20":[["Quit anyway? (y or n) y                                                                                      ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"22":[["standard input through the named pipe.                                                                       ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"25":[["foo                                                                                                          ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"28":[["foo                                                                                                          ",{}]],"29":[["bar                                                                                                          ",{}]],"30":[["baz                                                                                                          ",{}]],"31":[["^C                                                                                                           ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"33":[["ugged application with the output of a python command, we can use the following shell tri                    ",{}]]},"cursor":{"x":89}}],[0.00055,{"lines":{"33":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]]},"cursor":{"x":91}}],[1.982527,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" file fifo                                                                                 ",{}]],"1":[["fifo: fifo (named pipe)                                                                                      ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"3":[["din of an application running inside gdb.                                                                    ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"6":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"7":[["(gdb) r < fifo                                                                                               ",{}]],"8":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"9":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"10":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"11":[["                                                                                                             ",{}]],"12":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"13":[["0x41414141 in ?? ()                                                                                          ",{}]],"14":[["(gdb) quit                                                                                                   ",{}]],"15":[["A debugging session is active.                                                                               ",{}]],"16":[["                                                                                                             ",{}]],"17":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"18":[["                                                                                                             ",{}]],"19":[["Quit anyway? (y or n) y                                                                                      ",{}]],"20":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"21":[["standard input through the named pipe.                                                                       ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"24":[["foo                                                                                                          ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"27":[["foo                                                                                                          ",{}]],"28":[["bar                                                                                                          ",{}]],"29":[["baz                                                                                                          ",{}]],"30":[["^C                                                                                                           ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"32":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0}}],[0.000837,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[9.882303,{"lines":{"0":[["fifo: fifo (named pipe)                                                                                      ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"2":[["din of an application running inside gdb.                                                                    ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"5":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"6":[["(gdb) r < fifo                                                                                               ",{}]],"7":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"8":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"9":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"10":[["                                                                                                             ",{}]],"11":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"12":[["0x41414141 in ?? ()                                                                                          ",{}]],"13":[["(gdb) quit                                                                                                   ",{}]],"14":[["A debugging session is active.                                                                               ",{}]],"15":[["                                                                                                             ",{}]],"16":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"17":[["                                                                                                             ",{}]],"18":[["Quit anyway? (y or n) y                                                                                      ",{}]],"19":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"20":[["standard input through the named pipe.                                                                       ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"23":[["foo                                                                                                          ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"26":[["foo                                                                                                          ",{}]],"27":[["bar                                                                                                          ",{}]],"28":[["baz                                                                                                          ",{}]],"29":[["^C                                                                                                           ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"31":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0}}],[0.045824,{"lines":{"33":[["Reading symbols from /opt/shared/bof/bof/bof...                                                              ",{}]]},"cursor":{"x":47}}],[0.007443,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # This fifo is very useful if we want to redirect the output of a python command to the st",{}]],"1":[["din of an application running inside gdb.                                                                    ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"4":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"5":[["(gdb) r < fifo                                                                                               ",{}]],"6":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"7":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"8":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"9":[["                                                                                                             ",{}]],"10":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"11":[["0x41414141 in ?? ()                                                                                          ",{}]],"12":[["(gdb) quit                                                                                                   ",{}]],"13":[["A debugging session is active.                                                                               ",{}]],"14":[["                                                                                                             ",{}]],"15":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"16":[["                                                                                                             ",{}]],"17":[["Quit anyway? (y or n) y                                                                                      ",{}]],"18":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"19":[["standard input through the named pipe.                                                                       ",{}]],"20":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"22":[["foo                                                                                                          ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"25":[["foo                                                                                                          ",{}]],"26":[["bar                                                                                                          ",{}]],"27":[["baz                                                                                                          ",{}]],"28":[["^C                                                                                                           ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"30":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"32":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"33":[["(gdb)                                                                                                        ",{}]],"34":[["[student] 0:gdb*                                                           \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":6}}],[6.856893,{"lines":{"33":[["(gdb) r                                                                                                      ",{}]]},"cursor":{"x":7}}],[0.011434,{"lines":{"33":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]]},"cursor":{"x":61}}],[3.880678,{"lines":{"0":[["din of an application running inside gdb.                                                                    ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Let's try a simple test:                                                                ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"3":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"4":[["(gdb) r < fifo                                                                                               ",{}]],"5":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"6":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"7":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"8":[["                                                                                                             ",{}]],"9":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"10":[["0x41414141 in ?? ()                                                                                          ",{}]],"11":[["(gdb) quit                                                                                                   ",{}]],"12":[["A debugging session is active.                                                                               ",{}]],"13":[["                                                                                                             ",{}]],"14":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"15":[["                                                                                                             ",{}]],"16":[["Quit anyway? (y or n) y                                                                                      ",{}]],"17":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"18":[["standard input through the named pipe.                                                                       ",{}]],"19":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"20":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"21":[["foo                                                                                                          ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"24":[["foo                                                                                                          ",{}]],"25":[["bar                                                                                                          ",{}]],"26":[["baz                                                                                                          ",{}]],"27":[["^C                                                                                                           ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"29":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"31":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"32":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0}}],[0.011479,{"lines":{"0":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"1":[["(gdb) r < fifo                                                                                               ",{}]],"2":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"3":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"4":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"5":[["                                                                                                             ",{}]],"6":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"7":[["0x41414141 in ?? ()                                                                                          ",{}]],"8":[["(gdb) quit                                                                                                   ",{}]],"9":[["A debugging session is active.                                                                               ",{}]],"10":[["                                                                                                             ",{}]],"11":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"12":[["                                                                                                             ",{}]],"13":[["Quit anyway? (y or n) y                                                                                      ",{}]],"14":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"15":[["standard input through the named pipe.                                                                       ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"17":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"18":[["foo                                                                                                          ",{}]],"19":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"22":[["bar                                                                                                          ",{}]],"23":[["baz                                                                                                          ",{}]],"24":[["^C                                                                                                           ",{}]],"25":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"26":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"27":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"28":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"29":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"30":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"31":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"32":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]]}}],[0.067468,{"lines":{"0":[["(gdb) r < fifo                                                                                               ",{}]],"1":[["Starting program: /opt/shared/bof/bof/bof < fifo                                                             ",{}]],"2":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"3":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"4":[["                                                                                                             ",{}]],"5":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"6":[["0x41414141 in ?? ()                                                                                          ",{}]],"7":[["(gdb) quit                                                                                                   ",{}]],"8":[["A debugging session is active.                                                                               ",{}]],"9":[["                                                                                                             ",{}]],"10":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"11":[["                                                                                                             ",{}]],"12":[["Quit anyway? (y or n) y                                                                                      ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"14":[["standard input through the named pipe.                                                                       ",{}]],"15":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"17":[["foo                                                                                                          ",{}]],"18":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"19":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"20":[["foo                                                                                                          ",{}]],"21":[["bar                                                                                                          ",{}]],"22":[["baz                                                                                                          ",{}]],"23":[["^C                                                                                                           ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"25":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"26":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"27":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"28":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"29":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"30":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"31":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"32":[["                                                                                                             ",{}]]}}],[0.000856,{"lines":{"0":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"1":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"2":[["                                                                                                             ",{}]],"3":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"4":[["0x41414141 in ?? ()                                                                                          ",{}]],"5":[["(gdb) quit                                                                                                   ",{}]],"6":[["A debugging session is active.                                                                               ",{}]],"7":[["                                                                                                             ",{}]],"8":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"10":[["Quit anyway? (y or n) y                                                                                      ",{}]],"11":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"12":[["standard input through the named pipe.                                                                       ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"14":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"15":[["foo                                                                                                          ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"17":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"18":[["foo                                                                                                          ",{}]],"19":[["bar                                                                                                          ",{}]],"20":[["baz                                                                                                          ",{}]],"21":[["^C                                                                                                           ",{}]],"22":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"23":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"24":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"25":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"26":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"27":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"28":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"29":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"30":[["                                                                                                             ",{}]],"31":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"32":[["0x41414141 in ?? ()                                                                                          ",{}]],"33":[["(gdb)                                                                                                        ",{}]]},"cursor":{"x":6}}],[7.469542,{"lines":{"0":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"1":[["                                                                                                             ",{}]],"2":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"3":[["0x41414141 in ?? ()                                                                                          ",{}]],"4":[["(gdb) quit                                                                                                   ",{}]],"5":[["A debugging session is active.                                                                               ",{}]],"6":[["                                                                                                             ",{}]],"7":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"8":[["                                                                                                             ",{}]],"9":[["Quit anyway? (y or n) y                                                                                      ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"11":[["standard input through the named pipe.                                                                       ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"14":[["foo                                                                                                          ",{}]],"15":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"17":[["foo                                                                                                          ",{}]],"18":[["bar                                                                                                          ",{}]],"19":[["baz                                                                                                          ",{}]],"20":[["^C                                                                                                           ",{}]],"21":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"22":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"23":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"24":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"25":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"26":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"27":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"28":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"29":[["                                                                                                             ",{}]],"30":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"31":[["0x41414141 in ?? ()                                                                                          ",{}]],"32":[["(gdb) quit                                                                                                   ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0}}],[0.001222,{"lines":{"0":[["(gdb) quit                                                                                                   ",{}]],"1":[["A debugging session is active.                                                                               ",{}]],"2":[["                                                                                                             ",{}]],"3":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"4":[["                                                                                                             ",{}]],"5":[["Quit anyway? (y or n) y                                                                                      ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"7":[["standard input through the named pipe.                                                                       ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"9":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"10":[["foo                                                                                                          ",{}]],"11":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"13":[["foo                                                                                                          ",{}]],"14":[["bar                                                                                                          ",{}]],"15":[["baz                                                                                                          ",{}]],"16":[["^C                                                                                                           ",{}]],"17":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"18":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"19":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"20":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"21":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"22":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"23":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"24":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"25":[["                                                                                                             ",{}]],"26":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"27":[["0x41414141 in ?? ()                                                                                          ",{}]],"28":[["(gdb) quit                                                                                                   ",{}]],"29":[["A debugging session is active.                                                                               ",{}]],"30":[["                                                                                                             ",{}]],"31":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"32":[["                                                                                                             ",{}]],"33":[["Quit anyway? (y or n)                                                                                        ",{}]]},"cursor":{"x":22}}],[1.038994,{"lines":{"33":[["Quit anyway? (y or n) y                                                                                      ",{}]]},"cursor":{"x":23}}],[0.344296,{"lines":{"0":[["A debugging session is active.                                                                               ",{}]],"1":[["                                                                                                             ",{}]],"2":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"3":[["                                                                                                             ",{}]],"4":[["Quit anyway? (y or n) y                                                                                      ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"6":[["standard input through the named pipe.                                                                       ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"9":[["foo                                                                                                          ",{}]],"10":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"11":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"12":[["foo                                                                                                          ",{}]],"13":[["bar                                                                                                          ",{}]],"14":[["baz                                                                                                          ",{}]],"15":[["^C                                                                                                           ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"17":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"18":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"19":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"20":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"21":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"22":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"23":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"24":[["                                                                                                             ",{}]],"25":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"26":[["0x41414141 in ?? ()                                                                                          ",{}]],"27":[["(gdb) quit                                                                                                   ",{}]],"28":[["A debugging session is active.                                                                               ",{}]],"29":[["                                                                                                             ",{}]],"30":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"31":[["                                                                                                             ",{}]],"32":[["Quit anyway? (y or n) y                                                                                      ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0}}],[0.008267999999999999,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[0.345299,{"lines":{"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:19 27-Feb-15",{"fg":0,"bg":2}]]}}],[2.818621,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                                                                         ",{}]]},"cursor":{"x":20}}],[0.016441,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Using this bizarre syntax, we have just \"piped\" the output of a process                 ",{}]]},"cursor":{"x":93}}],[0.0106,{"lines":{"0":[["        Inferior 1 [process 8455] will be killed.                                                            ",{}]],"2":[["Quit anyway? (y or n) y                                                                                      ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"4":[["standard input through the named pipe.                                                                       ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"7":[["foo                                                                                                          ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"9":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"10":[["foo                                                                                                          ",{}]],"11":[["bar                                                                                                          ",{}]],"12":[["baz                                                                                                          ",{}]],"13":[["^C                                                                                                           ",{}]],"14":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"15":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"16":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"17":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"18":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"19":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"20":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"21":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"22":[["                                                                                                             ",{}]],"23":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"24":[["0x41414141 in ?? ()                                                                                          ",{}]],"25":[["(gdb) quit                                                                                                   ",{}]],"26":[["A debugging session is active.                                                                               ",{}]],"27":[["                                                                                                             ",{}]],"28":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"30":[["Quit anyway? (y or n) y                                                                                      ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Using this bizarre syntax, we have just \"piped\" the output of a process substitution to ",{}]],"32":[["the stdin of our application.                                                                                ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[6.789646,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # You can think about <(...)                                                              ",{}]]},"cursor":{"x":47}}],[0.004144,{"lines":{"0":[["                                                                                                             ",{}]],"1":[["Quit anyway? (y or n) y                                                                                      ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"3":[["standard input through the named pipe.                                                                       ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"6":[["foo                                                                                                          ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"8":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"9":[["foo                                                                                                          ",{}]],"10":[["bar                                                                                                          ",{}]],"11":[["baz                                                                                                          ",{}]],"12":[["^C                                                                                                           ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"14":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"15":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"16":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"17":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"18":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"19":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"20":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"21":[["                                                                                                             ",{}]],"22":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"23":[["0x41414141 in ?? ()                                                                                          ",{}]],"24":[["(gdb) quit                                                                                                   ",{}]],"25":[["A debugging session is active.                                                                               ",{}]],"26":[["                                                                                                             ",{}]],"27":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"28":[["                                                                                                             ",{}]],"29":[["Quit anyway? (y or n) y                                                                                      ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Using this bizarre syntax, we have just \"piped\" the output of a process substitution to ",{}]],"31":[["the stdin of our application.                                                                                ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # You can think about <(...) as a fifo :)                                                 ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]]},"cursor":{"x":19}}],[2.974681,{"lines":{"0":[["Quit anyway? (y or n) y                                                                                      ",{}]],"1":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"2":[["standard input through the named pipe.                                                                       ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"4":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"5":[["foo                                                                                                          ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"7":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"8":[["foo                                                                                                          ",{}]],"9":[["bar                                                                                                          ",{}]],"10":[["baz                                                                                                          ",{}]],"11":[["^C                                                                                                           ",{}]],"12":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"13":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"14":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"15":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"16":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"17":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"18":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"19":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"20":[["                                                                                                             ",{}]],"21":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"22":[["0x41414141 in ?? ()                                                                                          ",{}]],"23":[["(gdb) quit                                                                                                   ",{}]],"24":[["A debugging session is active.                                                                               ",{}]],"25":[["                                                                                                             ",{}]],"26":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"27":[["                                                                                                             ",{}]],"28":[["Quit anyway? (y or n) y                                                                                      ",{}]],"29":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Using this bizarre syntax, we have just \"piped\" the output of a process substitution to ",{}]],"30":[["the stdin of our application.                                                                                ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # You can think about <(...) as a fifo :)                                                 ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # \"man bash\" is your friend!                                                              ",{}]]}}],[2.606144,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" #                                                                                         ",{}]]},"cursor":{"x":20}}],[0.150163,{"cursor":{"x":21}}],[1.284422,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # G                                                                                       ",{}]]},"cursor":{"x":22}}],[0.215176,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GO                                                                                      ",{}]]},"cursor":{"x":23}}],[0.142225,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOO                                                                                     ",{}]]},"cursor":{"x":24}}],[0.220247,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOOD                                                                                    ",{}]]},"cursor":{"x":25}}],[0.150698,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODB                                                                                   ",{}]]},"cursor":{"x":26}}],[0.206772,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBY                                                                                  ",{}]]},"cursor":{"x":27}}],[0.293585,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBYE                                                                                 ",{}]]},"cursor":{"x":28}}],[0.129961,{"cursor":{"x":29}}],[0.564838,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBYE _                                                                               ",{}]]},"cursor":{"x":30}}],[0.760835,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBYE _O                                                                              ",{}]]},"cursor":{"x":31}}],[0.498621,{"lines":{"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBYE _O/                                                                             ",{}]]},"cursor":{"x":32}}],[2.482528,{"lines":{"0":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # As you can see we were able to redirect the output of our python command to the program ",{}]],"1":[["standard input through the named pipe.                                                                       ",{}]],"2":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Named pipes can also be used to interact with programs... let's try!                    ",{}]],"3":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"4":[["foo                                                                                                          ",{}]],"5":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"6":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" cat fifo                                                                                  ",{}]],"7":[["foo                                                                                                          ",{}]],"8":[["bar                                                                                                          ",{}]],"9":[["baz                                                                                                          ",{}]],"10":[["^C                                                                                                           ",{}]],"11":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # If we do not need interaction and we are only interested in feeding the stdin of our deb",{}]],"12":[["ugged application with the output of a python command, we can use the following shell trick                  ",{}]],"13":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" gdb -q /opt/shared/bof/bof/bof                                                            ",{}]],"14":[["Reading symbols from /opt/shared/bof/bof/bof...(no debugging symbols found)...done.                          ",{}]],"15":[["(gdb) r < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')                                                ",{}]],"16":[["Starting program: /opt/shared/bof/bof/bof < <(python -c 'import sys; sys.stdout.write(\"A\"*40)')              ",{}]],"17":[["warning: Could not load shared library symbols for linux-gate.so.1.                                          ",{}]],"18":[["Do you need \"set solib-search-path\" or \"set sysroot\"?                                                        ",{}]],"19":[["                                                                                                             ",{}]],"20":[["Program received signal SIGSEGV, Segmentation fault.                                                         ",{}]],"21":[["0x41414141 in ?? ()                                                                                          ",{}]],"22":[["(gdb) quit                                                                                                   ",{}]],"23":[["A debugging session is active.                                                                               ",{}]],"24":[["                                                                                                             ",{}]],"25":[["        Inferior 1 [process 8505] will be killed.                                                            ",{}]],"26":[["                                                                                                             ",{}]],"27":[["Quit anyway? (y or n) y                                                                                      ",{}]],"28":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # Using this bizarre syntax, we have just \"piped\" the output of a process substitution to ",{}]],"29":[["the stdin of our application.                                                                                ",{}]],"30":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # You can think about <(...) as a fifo :)                                                 ",{}]],"31":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # \"man bash\" is your friend!                                                              ",{}]],"32":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],[" # GOODBYE _O/                                                                             ",{}]],"33":[["lavish@testbed",{"fg":2,"bold":true}],[" ~ $",{"fg":4,"bold":true}],["                                                                                           ",{}]],"34":[["[student] 0:bash*                                                          \"lavish@testbed:~\" 02:20 27-Feb-15",{"fg":0,"bg":2}]]},"cursor":{"x":19}}],[1.839269,{"lines":{"0":[["                                                                                                             ",{}]],"1":[["                                                                                                             ",{}]],"2":[["                                                                                                             ",{}]],"3":[["                                                                                                             ",{}]],"4":[["                                                                                                             ",{}]],"5":[["                                                                                                             ",{}]],"6":[["                                                                                                             ",{}]],"7":[["                                                                                                             ",{}]],"8":[["                                                                                                             ",{}]],"9":[["                                                                                                             ",{}]],"10":[["                                                                                                             ",{}]],"11":[["                                                                                                             ",{}]],"12":[["                                                                                                             ",{}]],"13":[["                                                                                                             ",{}]],"14":[["                                                                                                             ",{}]],"15":[["                                                                                                             ",{}]],"16":[["                                                                                                             ",{}]],"17":[["                                                                                                             ",{}]],"18":[["                                                                                                             ",{}]],"20":[["                                                                                                             ",{}]],"21":[["                                                                                                             ",{}]],"22":[["                                                                                                             ",{}]],"23":[["                                                                                                             ",{}]],"25":[["                                                                                                             ",{}]],"27":[["                                                                                                             ",{}]],"28":[["                                                                                                             ",{}]],"29":[["                                                                                                             ",{}]],"30":[["                                                                                                             ",{}]],"31":[["                                                                                                             ",{}]],"32":[["                                                                                                             ",{}]],"33":[["                                                                                                             ",{}]]},"cursor":{"x":0,"y":0}}],[0.00211,{"lines":{"0":[["We are not like that. We know that no one ever seizes power with the intention                               ",{}]],"1":[["of relinquishing it. Power is not a means, it is an end. One does not establish                              ",{}]],"2":[["a dictatorship in order to safeguard a revolution; one makes the revolution in                               ",{}]],"3":[["order to establish the dictatorship. The object of persecution is persecution.                               ",{}]],"4":[["The object of terrorism is terrorism. The object of oppression is oppression.                                ",{}]],"5":[["The object of torture is torture. The object of murder is murder. The object of                              ",{}]],"6":[["power is power. Now do you begin to understand me?                                                           ",{}]],"7":[["~ George Orwell, 1984                                                                                        ",{}]],"9":[["Press any key to continue...                                                                                 ",{}]],"10":[["[exited]                                                                                                     ",{}]],"34":[["                                                                                                             ",{}]]},"cursor":{"y":11}}]]